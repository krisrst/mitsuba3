//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_61
.address_size 64

	// .globl	__intersection__cylinder

.visible .entry __intersection__cylinder(

)
{
	.reg .pred 	%p<54>;
	.reg .b16 	%rs<14>;
	.reg .f32 	%f<968>;
	.reg .b32 	%r<320>;
	.reg .b64 	%rd<266>;


	// inline asm
	call (%rd19), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.u64 	%rd1, [%rd19+8];
	// inline asm
	call (%f329), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f330), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f913), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%r8), _optix_get_transform_list_size, ();
	// inline asm
	setp.eq.s32	%p5, %r8, 0;
	@%p5 bra 	BB0_1;

	mov.u32 	%r318, 0;
	// inline asm
	call (%f332), _optix_get_ray_time, ();
	// inline asm

BB0_3:
	.pragma "nounroll";
	// inline asm
	call (%rd20), _optix_get_transform_list_handle, (%r318);
	// inline asm
	// inline asm
	call (%r11), _optix_get_transform_type_from_handle, (%rd20);
	// inline asm
	and.b32  	%r12, %r11, -2;
	setp.eq.s32	%p6, %r12, 2;
	@%p6 bra 	BB0_9;
	bra.uni 	BB0_4;

BB0_9:
	setp.eq.s32	%p9, %r11, 2;
	@%p9 bra 	BB0_13;
	bra.uni 	BB0_10;

BB0_13:
	// inline asm
	call (%rd94), _optix_get_matrix_motion_transform_from_handle, (%rd20);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd96, %rd94;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r100,%r101,%r102,%r103}, [%rd96];
	// inline asm
	mov.b32	{%rs4, %rs5}, %r102;
	add.s64 	%rd100, %rd94, 16;
	// inline asm
	cvta.to.global.u64 %rd99, %rd100;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r104,%r105,%r106,%r107}, [%rd99];
	// inline asm
	add.s64 	%rd103, %rd94, 32;
	// inline asm
	cvta.to.global.u64 %rd102, %rd103;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r108,%r109,%r110,%r111}, [%rd102];
	// inline asm
	add.s64 	%rd106, %rd94, 48;
	// inline asm
	cvta.to.global.u64 %rd105, %rd106;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r112,%r113,%r114,%r115}, [%rd105];
	// inline asm
	add.s64 	%rd109, %rd94, 64;
	// inline asm
	cvta.to.global.u64 %rd108, %rd109;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r116,%r117,%r118,%r119}, [%rd108];
	// inline asm
	add.s64 	%rd112, %rd94, 80;
	// inline asm
	cvta.to.global.u64 %rd111, %rd112;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r120,%r121,%r122,%r123}, [%rd111];
	// inline asm
	add.s64 	%rd115, %rd94, 96;
	// inline asm
	cvta.to.global.u64 %rd114, %rd115;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r124,%r125,%r126,%r127}, [%rd114];
	// inline asm
	add.s64 	%rd118, %rd94, 112;
	// inline asm
	cvta.to.global.u64 %rd117, %rd118;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r128,%r129,%r130,%r131}, [%rd117];
	// inline asm
	mov.b32 	 %f459, %r103;
	mov.b32 	 %f460, %r104;
	cvt.u32.u16	%r144, %rs4;
	add.s32 	%r145, %r144, -1;
	cvt.rn.f32.s32	%f461, %r145;
	sub.f32 	%f462, %f332, %f459;
	mul.f32 	%f463, %f462, %f461;
	sub.f32 	%f464, %f460, %f459;
	div.rn.f32 	%f465, %f463, %f464;
	min.f32 	%f466, %f461, %f465;
	mov.f32 	%f467, 0f00000000;
	max.f32 	%f468, %f467, %f466;
	cvt.rmi.f32.f32	%f469, %f468;
	cvt.rzi.s32.f32	%r146, %f469;
	mul.wide.s32 	%rd129, %r146, 48;
	add.s64 	%rd121, %rd103, %rd129;
	// inline asm
	cvta.to.global.u64 %rd120, %rd121;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r132,%r133,%r134,%r135}, [%rd120];
	// inline asm
	mov.b32 	 %f885, %r132;
	mov.b32 	 %f886, %r133;
	mov.b32 	 %f887, %r134;
	mov.b32 	 %f888, %r135;
	add.s64 	%rd124, %rd121, 16;
	// inline asm
	cvta.to.global.u64 %rd123, %rd124;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r136,%r137,%r138,%r139}, [%rd123];
	// inline asm
	mov.b32 	 %f881, %r136;
	mov.b32 	 %f882, %r137;
	mov.b32 	 %f883, %r138;
	mov.b32 	 %f884, %r139;
	add.s64 	%rd127, %rd121, 32;
	// inline asm
	cvta.to.global.u64 %rd126, %rd127;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r140,%r141,%r142,%r143}, [%rd126];
	// inline asm
	sub.f32 	%f98, %f468, %f469;
	mov.b32 	 %f877, %r140;
	mov.b32 	 %f878, %r141;
	mov.b32 	 %f879, %r142;
	mov.b32 	 %f880, %r143;
	setp.leu.f32	%p11, %f98, 0f00000000;
	@%p11 bra 	BB0_15;

	cvt.rmi.f32.f32	%f848, %f468;
	cvt.rzi.s32.f32	%r317, %f848;
	cvt.s64.s32	%rd263, %r317;
	mul.lo.s64 	%rd139, %rd263, 48;
	add.s64 	%rd140, %rd94, %rd139;
	add.s64 	%rd131, %rd140, 80;
	// inline asm
	cvta.to.global.u64 %rd130, %rd131;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r147,%r148,%r149,%r150}, [%rd130];
	// inline asm
	mov.b32 	 %f470, %r147;
	mov.b32 	 %f471, %r148;
	mov.b32 	 %f472, %r149;
	mov.b32 	 %f473, %r150;
	add.s64 	%rd134, %rd140, 96;
	// inline asm
	cvta.to.global.u64 %rd133, %rd134;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r151,%r152,%r153,%r154}, [%rd133];
	// inline asm
	mov.b32 	 %f474, %r151;
	mov.b32 	 %f475, %r152;
	mov.b32 	 %f476, %r153;
	mov.b32 	 %f477, %r154;
	add.s64 	%rd137, %rd140, 112;
	// inline asm
	cvta.to.global.u64 %rd136, %rd137;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r155,%r156,%r157,%r158}, [%rd136];
	// inline asm
	mov.f32 	%f478, 0f3F800000;
	sub.f32 	%f479, %f478, %f98;
	mul.f32 	%f480, %f98, %f470;
	mul.f32 	%f481, %f98, %f471;
	mul.f32 	%f482, %f98, %f472;
	mul.f32 	%f483, %f98, %f473;
	fma.rn.f32 	%f885, %f479, %f885, %f480;
	fma.rn.f32 	%f886, %f479, %f886, %f481;
	fma.rn.f32 	%f887, %f479, %f887, %f482;
	fma.rn.f32 	%f888, %f479, %f888, %f483;
	mul.f32 	%f484, %f98, %f474;
	mul.f32 	%f485, %f98, %f475;
	mul.f32 	%f486, %f98, %f476;
	mul.f32 	%f487, %f98, %f477;
	fma.rn.f32 	%f881, %f479, %f881, %f484;
	fma.rn.f32 	%f882, %f479, %f882, %f485;
	fma.rn.f32 	%f883, %f479, %f883, %f486;
	fma.rn.f32 	%f884, %f479, %f884, %f487;
	mov.b32 	 %f488, %r155;
	mov.b32 	 %f489, %r156;
	mov.b32 	 %f490, %r157;
	mov.b32 	 %f491, %r158;
	mul.f32 	%f492, %f98, %f488;
	mul.f32 	%f493, %f98, %f489;
	mul.f32 	%f494, %f98, %f490;
	mul.f32 	%f495, %f98, %f491;
	fma.rn.f32 	%f877, %f479, %f877, %f492;
	fma.rn.f32 	%f878, %f479, %f878, %f493;
	fma.rn.f32 	%f879, %f479, %f879, %f494;
	fma.rn.f32 	%f880, %f479, %f880, %f495;
	bra.uni 	BB0_15;

BB0_4:
	mov.f32 	%f889, 0f00000000;
	mov.f32 	%f891, 0f3F800000;
	setp.eq.s32	%p7, %r11, 4;
	@%p7 bra 	BB0_7;
	bra.uni 	BB0_5;

BB0_7:
	// inline asm
	call (%rd264), _optix_get_instance_inverse_transform_from_handle, (%rd20);
	// inline asm
	bra.uni 	BB0_8;

BB0_10:
	// inline asm
	call (%rd35), _optix_get_srt_motion_transform_from_handle, (%rd20);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd37, %rd35;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r25,%r26,%r27,%r28}, [%rd37];
	// inline asm
	mov.b32	{%rs2, %rs3}, %r27;
	add.s64 	%rd41, %rd35, 16;
	// inline asm
	cvta.to.global.u64 %rd40, %rd41;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r29,%r30,%r31,%r32}, [%rd40];
	// inline asm
	add.s64 	%rd44, %rd35, 32;
	// inline asm
	cvta.to.global.u64 %rd43, %rd44;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r33,%r34,%r35,%r36}, [%rd43];
	// inline asm
	add.s64 	%rd47, %rd35, 48;
	// inline asm
	cvta.to.global.u64 %rd46, %rd47;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r37,%r38,%r39,%r40}, [%rd46];
	// inline asm
	add.s64 	%rd50, %rd35, 64;
	// inline asm
	cvta.to.global.u64 %rd49, %rd50;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r41,%r42,%r43,%r44}, [%rd49];
	// inline asm
	add.s64 	%rd53, %rd35, 80;
	// inline asm
	cvta.to.global.u64 %rd52, %rd53;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r45,%r46,%r47,%r48}, [%rd52];
	// inline asm
	add.s64 	%rd56, %rd35, 96;
	// inline asm
	cvta.to.global.u64 %rd55, %rd56;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r49,%r50,%r51,%r52}, [%rd55];
	// inline asm
	add.s64 	%rd59, %rd35, 112;
	// inline asm
	cvta.to.global.u64 %rd58, %rd59;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r53,%r54,%r55,%r56}, [%rd58];
	// inline asm
	add.s64 	%rd62, %rd35, 128;
	// inline asm
	cvta.to.global.u64 %rd61, %rd62;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r57,%r58,%r59,%r60}, [%rd61];
	// inline asm
	add.s64 	%rd65, %rd35, 144;
	// inline asm
	cvta.to.global.u64 %rd64, %rd65;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r61,%r62,%r63,%r64}, [%rd64];
	// inline asm
	mov.b32 	 %f346, %r28;
	mov.b32 	 %f347, %r29;
	cvt.u32.u16	%r81, %rs2;
	add.s32 	%r82, %r81, -1;
	cvt.rn.f32.s32	%f348, %r82;
	sub.f32 	%f349, %f332, %f346;
	mul.f32 	%f350, %f349, %f348;
	sub.f32 	%f351, %f347, %f346;
	div.rn.f32 	%f352, %f350, %f351;
	min.f32 	%f353, %f348, %f352;
	mov.f32 	%f354, 0f00000000;
	max.f32 	%f355, %f354, %f353;
	cvt.rmi.f32.f32	%f356, %f355;
	cvt.rzi.s32.f32	%r83, %f356;
	mul.wide.s32 	%rd79, %r83, 64;
	add.s64 	%rd68, %rd44, %rd79;
	// inline asm
	cvta.to.global.u64 %rd67, %rd68;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r65,%r66,%r67,%r68}, [%rd67];
	// inline asm
	mov.b32 	 %f861, %r65;
	mov.b32 	 %f862, %r66;
	mov.b32 	 %f863, %r67;
	mov.b32 	 %f864, %r68;
	add.s64 	%rd71, %rd68, 16;
	// inline asm
	cvta.to.global.u64 %rd70, %rd71;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r69,%r70,%r71,%r72}, [%rd70];
	// inline asm
	mov.b32 	 %f865, %r69;
	mov.b32 	 %f866, %r70;
	mov.b32 	 %f867, %r71;
	mov.b32 	 %f868, %r72;
	add.s64 	%rd74, %rd68, 32;
	// inline asm
	cvta.to.global.u64 %rd73, %rd74;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r73,%r74,%r75,%r76}, [%rd73];
	// inline asm
	sub.f32 	%f37, %f355, %f356;
	mov.b32 	 %f869, %r73;
	mov.b32 	 %f870, %r74;
	mov.b32 	 %f871, %r75;
	mov.b32 	 %f872, %r76;
	add.s64 	%rd77, %rd68, 48;
	// inline asm
	cvta.to.global.u64 %rd76, %rd77;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r77,%r78,%r79,%r80}, [%rd76];
	// inline asm
	mov.b32 	 %f873, %r77;
	mov.b32 	 %f874, %r78;
	mov.b32 	 %f875, %r79;
	mov.b32 	 %f876, %r80;
	setp.leu.f32	%p10, %f37, 0f00000000;
	@%p10 bra 	BB0_12;

	cvt.rmi.f32.f32	%f847, %f355;
	cvt.rzi.s32.f32	%r316, %f847;
	cvt.s64.s32	%rd262, %r316;
	shl.b64 	%rd92, %rd262, 6;
	add.s64 	%rd93, %rd92, %rd35;
	add.s64 	%rd81, %rd93, 96;
	// inline asm
	cvta.to.global.u64 %rd80, %rd81;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r84,%r85,%r86,%r87}, [%rd80];
	// inline asm
	mov.b32 	 %f357, %r84;
	mov.b32 	 %f358, %r85;
	mov.b32 	 %f359, %r86;
	mov.b32 	 %f360, %r87;
	add.s64 	%rd84, %rd93, 112;
	// inline asm
	cvta.to.global.u64 %rd83, %rd84;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r88,%r89,%r90,%r91}, [%rd83];
	// inline asm
	mov.b32 	 %f361, %r88;
	mov.b32 	 %f362, %r89;
	mov.b32 	 %f363, %r90;
	mov.b32 	 %f364, %r91;
	add.s64 	%rd87, %rd93, 128;
	// inline asm
	cvta.to.global.u64 %rd86, %rd87;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r92,%r93,%r94,%r95}, [%rd86];
	// inline asm
	mov.b32 	 %f365, %r92;
	mov.b32 	 %f366, %r93;
	mov.b32 	 %f367, %r94;
	mov.b32 	 %f368, %r95;
	add.s64 	%rd90, %rd93, 144;
	// inline asm
	cvta.to.global.u64 %rd89, %rd90;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r96,%r97,%r98,%r99}, [%rd89];
	// inline asm
	mov.f32 	%f369, 0f3F800000;
	sub.f32 	%f370, %f369, %f37;
	mul.f32 	%f371, %f37, %f357;
	mul.f32 	%f372, %f37, %f358;
	mul.f32 	%f373, %f37, %f359;
	mul.f32 	%f374, %f37, %f360;
	fma.rn.f32 	%f861, %f370, %f861, %f371;
	fma.rn.f32 	%f862, %f370, %f862, %f372;
	fma.rn.f32 	%f863, %f370, %f863, %f373;
	fma.rn.f32 	%f864, %f370, %f864, %f374;
	mul.f32 	%f375, %f37, %f361;
	mul.f32 	%f376, %f37, %f362;
	mul.f32 	%f377, %f37, %f363;
	mul.f32 	%f378, %f37, %f364;
	fma.rn.f32 	%f865, %f370, %f865, %f375;
	fma.rn.f32 	%f866, %f370, %f866, %f376;
	fma.rn.f32 	%f867, %f370, %f867, %f377;
	fma.rn.f32 	%f868, %f370, %f868, %f378;
	mul.f32 	%f379, %f37, %f365;
	mul.f32 	%f380, %f37, %f366;
	mul.f32 	%f381, %f37, %f367;
	mul.f32 	%f382, %f37, %f368;
	fma.rn.f32 	%f869, %f370, %f869, %f379;
	fma.rn.f32 	%f383, %f370, %f870, %f380;
	fma.rn.f32 	%f384, %f370, %f871, %f381;
	fma.rn.f32 	%f385, %f370, %f872, %f382;
	mov.b32 	 %f386, %r96;
	mov.b32 	 %f387, %r97;
	mov.b32 	 %f388, %r98;
	mov.b32 	 %f389, %r99;
	mul.f32 	%f390, %f37, %f386;
	mul.f32 	%f391, %f37, %f387;
	mul.f32 	%f392, %f37, %f388;
	mul.f32 	%f393, %f37, %f389;
	fma.rn.f32 	%f394, %f370, %f873, %f390;
	fma.rn.f32 	%f874, %f370, %f874, %f391;
	fma.rn.f32 	%f875, %f370, %f875, %f392;
	fma.rn.f32 	%f876, %f370, %f876, %f393;
	mul.f32 	%f395, %f384, %f384;
	fma.rn.f32 	%f396, %f383, %f383, %f395;
	fma.rn.f32 	%f397, %f385, %f385, %f396;
	fma.rn.f32 	%f398, %f394, %f394, %f397;
	sqrt.rn.f32 	%f399, %f398;
	rcp.rn.f32 	%f400, %f399;
	mul.f32 	%f870, %f383, %f400;
	mul.f32 	%f871, %f384, %f400;
	mul.f32 	%f872, %f385, %f400;
	mul.f32 	%f873, %f394, %f400;

BB0_12:
	mul.f32 	%f401, %f871, %f871;
	fma.rn.f32 	%f402, %f870, %f870, %f401;
	fma.rn.f32 	%f403, %f872, %f872, %f402;
	fma.rn.f32 	%f404, %f873, %f873, %f403;
	rcp.rn.f32 	%f405, %f404;
	mul.f32 	%f406, %f870, %f405;
	mul.f32 	%f407, %f871, %f405;
	mul.f32 	%f408, %f872, %f405;
	mul.f32 	%f409, %f873, %f405;
	mul.f32 	%f410, %f870, %f406;
	mul.f32 	%f411, %f871, %f407;
	mul.f32 	%f412, %f872, %f408;
	mul.f32 	%f413, %f870, %f407;
	mul.f32 	%f414, %f872, %f409;
	mul.f32 	%f415, %f870, %f408;
	mul.f32 	%f416, %f871, %f409;
	mul.f32 	%f417, %f871, %f408;
	mul.f32 	%f418, %f870, %f409;
	sub.f32 	%f419, %f410, %f411;
	sub.f32 	%f420, %f419, %f412;
	fma.rn.f32 	%f421, %f873, %f409, %f420;
	sub.f32 	%f422, %f413, %f414;
	add.f32 	%f423, %f422, %f422;
	add.f32 	%f424, %f415, %f416;
	add.f32 	%f425, %f424, %f424;
	add.f32 	%f426, %f413, %f414;
	add.f32 	%f427, %f426, %f426;
	sub.f32 	%f428, %f411, %f410;
	sub.f32 	%f429, %f428, %f412;
	fma.rn.f32 	%f430, %f873, %f409, %f429;
	sub.f32 	%f431, %f417, %f418;
	add.f32 	%f432, %f431, %f431;
	sub.f32 	%f433, %f415, %f416;
	add.f32 	%f434, %f433, %f433;
	add.f32 	%f435, %f417, %f418;
	add.f32 	%f436, %f435, %f435;
	neg.f32 	%f437, %f410;
	sub.f32 	%f438, %f437, %f411;
	add.f32 	%f439, %f412, %f438;
	fma.rn.f32 	%f440, %f873, %f409, %f439;
	mul.f32 	%f441, %f864, %f421;
	fma.rn.f32 	%f442, %f867, %f423, %f441;
	fma.rn.f32 	%f443, %f869, %f425, %f442;
	add.f32 	%f888, %f874, %f443;
	mul.f32 	%f444, %f867, %f430;
	fma.rn.f32 	%f445, %f864, %f427, %f444;
	fma.rn.f32 	%f446, %f869, %f432, %f445;
	add.f32 	%f884, %f875, %f446;
	mul.f32 	%f447, %f867, %f436;
	fma.rn.f32 	%f448, %f864, %f434, %f447;
	fma.rn.f32 	%f449, %f869, %f440, %f448;
	add.f32 	%f880, %f876, %f449;
	mul.f32 	%f450, %f863, %f421;
	fma.rn.f32 	%f451, %f866, %f423, %f450;
	fma.rn.f32 	%f887, %f868, %f425, %f451;
	mul.f32 	%f452, %f866, %f430;
	fma.rn.f32 	%f453, %f863, %f427, %f452;
	fma.rn.f32 	%f883, %f868, %f432, %f453;
	mul.f32 	%f454, %f866, %f436;
	fma.rn.f32 	%f455, %f863, %f434, %f454;
	fma.rn.f32 	%f879, %f868, %f440, %f455;
	mul.f32 	%f456, %f862, %f421;
	fma.rn.f32 	%f886, %f865, %f423, %f456;
	mul.f32 	%f457, %f865, %f430;
	fma.rn.f32 	%f882, %f862, %f427, %f457;
	mul.f32 	%f458, %f865, %f436;
	fma.rn.f32 	%f878, %f862, %f434, %f458;
	mul.f32 	%f885, %f861, %f421;
	mul.f32 	%f881, %f861, %f427;
	mul.f32 	%f877, %f861, %f434;

BB0_15:
	mul.f32 	%f496, %f878, %f883;
	mul.f32 	%f497, %f879, %f882;
	sub.f32 	%f498, %f497, %f496;
	mul.f32 	%f499, %f885, %f498;
	mul.f32 	%f500, %f877, %f883;
	mul.f32 	%f501, %f879, %f881;
	sub.f32 	%f502, %f501, %f500;
	mul.f32 	%f503, %f502, %f886;
	sub.f32 	%f504, %f499, %f503;
	mul.f32 	%f505, %f877, %f882;
	mul.f32 	%f506, %f878, %f881;
	sub.f32 	%f507, %f506, %f505;
	fma.rn.f32 	%f508, %f507, %f887, %f504;
	rcp.rn.f32 	%f509, %f508;
	mul.f32 	%f897, %f498, %f509;
	mul.f32 	%f510, %f879, %f886;
	mul.f32 	%f511, %f878, %f887;
	sub.f32 	%f512, %f511, %f510;
	mul.f32 	%f898, %f509, %f512;
	mul.f32 	%f513, %f882, %f887;
	mul.f32 	%f514, %f883, %f886;
	sub.f32 	%f515, %f514, %f513;
	mul.f32 	%f899, %f509, %f515;
	sub.f32 	%f516, %f500, %f501;
	mul.f32 	%f893, %f516, %f509;
	mul.f32 	%f517, %f877, %f887;
	mul.f32 	%f518, %f879, %f885;
	sub.f32 	%f519, %f518, %f517;
	mul.f32 	%f894, %f509, %f519;
	mul.f32 	%f520, %f883, %f885;
	mul.f32 	%f521, %f881, %f887;
	sub.f32 	%f522, %f521, %f520;
	mul.f32 	%f895, %f509, %f522;
	mul.f32 	%f889, %f507, %f509;
	mul.f32 	%f523, %f878, %f885;
	mul.f32 	%f524, %f877, %f886;
	sub.f32 	%f525, %f524, %f523;
	mul.f32 	%f890, %f525, %f509;
	mul.f32 	%f526, %f881, %f886;
	mul.f32 	%f527, %f882, %f885;
	sub.f32 	%f528, %f527, %f526;
	mul.f32 	%f891, %f528, %f509;
	mul.f32 	%f529, %f888, %f897;
	neg.f32 	%f530, %f529;
	mul.f32 	%f531, %f884, %f898;
	sub.f32 	%f532, %f530, %f531;
	mul.f32 	%f533, %f880, %f899;
	sub.f32 	%f900, %f532, %f533;
	mul.f32 	%f534, %f888, %f893;
	neg.f32 	%f535, %f534;
	mul.f32 	%f536, %f884, %f894;
	sub.f32 	%f537, %f535, %f536;
	mul.f32 	%f538, %f880, %f895;
	sub.f32 	%f896, %f537, %f538;
	mul.f32 	%f539, %f888, %f889;
	neg.f32 	%f540, %f539;
	mul.f32 	%f541, %f884, %f890;
	sub.f32 	%f542, %f540, %f541;
	mul.f32 	%f543, %f880, %f891;
	sub.f32 	%f892, %f542, %f543;
	bra.uni 	BB0_16;

BB0_5:
	setp.ne.s32	%p8, %r11, 1;
	mov.f32 	%f890, %f889;
	mov.f32 	%f892, %f889;
	mov.f32 	%f893, %f889;
	mov.f32 	%f894, %f891;
	mov.f32 	%f895, %f889;
	mov.f32 	%f896, %f889;
	mov.f32 	%f897, %f891;
	mov.f32 	%f898, %f889;
	mov.f32 	%f899, %f889;
	mov.f32 	%f900, %f889;
	@%p8 bra 	BB0_16;

	// inline asm
	call (%rd22), _optix_get_static_transform_from_handle, (%rd20);
	// inline asm
	add.s64 	%rd264, %rd22, 64;

BB0_8:
	// inline asm
	cvta.to.global.u64 %rd26, %rd264;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r13,%r14,%r15,%r16}, [%rd26];
	// inline asm
	mov.b32 	 %f897, %r13;
	mov.b32 	 %f898, %r14;
	mov.b32 	 %f899, %r15;
	mov.b32 	 %f900, %r16;
	add.s64 	%rd30, %rd264, 16;
	// inline asm
	cvta.to.global.u64 %rd29, %rd30;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r17,%r18,%r19,%r20}, [%rd29];
	// inline asm
	mov.b32 	 %f893, %r17;
	mov.b32 	 %f894, %r18;
	mov.b32 	 %f895, %r19;
	mov.b32 	 %f896, %r20;
	add.s64 	%rd33, %rd264, 32;
	// inline asm
	cvta.to.global.u64 %rd32, %rd33;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r21,%r22,%r23,%r24}, [%rd32];
	// inline asm
	mov.b32 	 %f889, %r21;
	mov.b32 	 %f890, %r22;
	mov.b32 	 %f891, %r23;
	mov.b32 	 %f892, %r24;

BB0_16:
	setp.eq.s32	%p12, %r318, 0;
	@%p12 bra 	BB0_17;
	bra.uni 	BB0_18;

BB0_17:
	mov.f32 	%f860, %f900;
	mov.f32 	%f859, %f899;
	mov.f32 	%f858, %f898;
	mov.f32 	%f857, %f897;
	mov.f32 	%f856, %f896;
	mov.f32 	%f855, %f895;
	mov.f32 	%f854, %f894;
	mov.f32 	%f853, %f893;
	mov.f32 	%f852, %f892;
	mov.f32 	%f851, %f891;
	mov.f32 	%f850, %f890;
	mov.f32 	%f849, %f889;
	bra.uni 	BB0_19;

BB0_18:
	mul.f32 	%f544, %f853, %f898;
	fma.rn.f32 	%f545, %f857, %f897, %f544;
	fma.rn.f32 	%f151, %f849, %f899, %f545;
	mul.f32 	%f546, %f854, %f898;
	fma.rn.f32 	%f547, %f858, %f897, %f546;
	fma.rn.f32 	%f152, %f850, %f899, %f547;
	mul.f32 	%f548, %f855, %f898;
	fma.rn.f32 	%f549, %f859, %f897, %f548;
	fma.rn.f32 	%f153, %f851, %f899, %f549;
	mul.f32 	%f550, %f856, %f898;
	fma.rn.f32 	%f551, %f860, %f897, %f550;
	fma.rn.f32 	%f552, %f852, %f899, %f551;
	add.f32 	%f154, %f900, %f552;
	mul.f32 	%f553, %f853, %f894;
	fma.rn.f32 	%f554, %f857, %f893, %f553;
	fma.rn.f32 	%f155, %f849, %f895, %f554;
	mul.f32 	%f555, %f854, %f894;
	fma.rn.f32 	%f556, %f858, %f893, %f555;
	fma.rn.f32 	%f156, %f850, %f895, %f556;
	mul.f32 	%f557, %f855, %f894;
	fma.rn.f32 	%f558, %f859, %f893, %f557;
	fma.rn.f32 	%f157, %f851, %f895, %f558;
	mul.f32 	%f559, %f856, %f894;
	fma.rn.f32 	%f560, %f860, %f893, %f559;
	fma.rn.f32 	%f561, %f852, %f895, %f560;
	add.f32 	%f158, %f896, %f561;
	mul.f32 	%f562, %f853, %f890;
	fma.rn.f32 	%f563, %f857, %f889, %f562;
	fma.rn.f32 	%f849, %f849, %f891, %f563;
	mul.f32 	%f564, %f854, %f890;
	fma.rn.f32 	%f565, %f858, %f889, %f564;
	fma.rn.f32 	%f850, %f850, %f891, %f565;
	mul.f32 	%f566, %f855, %f890;
	fma.rn.f32 	%f567, %f859, %f889, %f566;
	fma.rn.f32 	%f851, %f851, %f891, %f567;
	mul.f32 	%f568, %f856, %f890;
	fma.rn.f32 	%f569, %f860, %f889, %f568;
	fma.rn.f32 	%f570, %f852, %f891, %f569;
	add.f32 	%f852, %f892, %f570;
	mov.f32 	%f860, %f154;
	mov.f32 	%f859, %f153;
	mov.f32 	%f858, %f152;
	mov.f32 	%f857, %f151;
	mov.f32 	%f856, %f158;
	mov.f32 	%f855, %f157;
	mov.f32 	%f854, %f156;
	mov.f32 	%f853, %f155;

BB0_19:
	add.s32 	%r318, %r318, 1;
	setp.lt.u32	%p13, %r318, %r8;
	@%p13 bra 	BB0_3;

	mul.f32 	%f571, %f329, %f857;
	fma.rn.f32 	%f572, %f330, %f858, %f571;
	fma.rn.f32 	%f573, %f913, %f859, %f572;
	add.f32 	%f915, %f860, %f573;
	mul.f32 	%f574, %f329, %f853;
	fma.rn.f32 	%f575, %f330, %f854, %f574;
	fma.rn.f32 	%f576, %f913, %f855, %f575;
	add.f32 	%f914, %f856, %f576;
	mul.f32 	%f577, %f329, %f849;
	fma.rn.f32 	%f578, %f330, %f850, %f577;
	fma.rn.f32 	%f579, %f913, %f851, %f578;
	add.f32 	%f913, %f852, %f579;
	bra.uni 	BB0_21;

BB0_1:
	mov.f32 	%f914, %f330;
	mov.f32 	%f915, %f329;

BB0_21:
	setp.eq.s32	%p51, %r8, 0;
	// inline asm
	call (%f580), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f581), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f964), _optix_get_world_ray_direction_z, ();
	// inline asm
	@%p51 bra 	BB0_22;

	mov.u32 	%r319, 0;
	// inline asm
	call (%f583), _optix_get_ray_time, ();
	// inline asm

BB0_24:
	.pragma "nounroll";
	// inline asm
	call (%rd141), _optix_get_transform_list_handle, (%r319);
	// inline asm
	// inline asm
	call (%r161), _optix_get_transform_type_from_handle, (%rd141);
	// inline asm
	and.b32  	%r162, %r161, -2;
	setp.eq.s32	%p15, %r162, 2;
	@%p15 bra 	BB0_30;
	bra.uni 	BB0_25;

BB0_30:
	setp.eq.s32	%p18, %r161, 2;
	@%p18 bra 	BB0_34;
	bra.uni 	BB0_31;

BB0_34:
	// inline asm
	call (%rd215), _optix_get_matrix_motion_transform_from_handle, (%rd141);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd217, %rd215;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r250,%r251,%r252,%r253}, [%rd217];
	// inline asm
	mov.b32	{%rs8, %rs9}, %r252;
	add.s64 	%rd221, %rd215, 16;
	// inline asm
	cvta.to.global.u64 %rd220, %rd221;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r254,%r255,%r256,%r257}, [%rd220];
	// inline asm
	add.s64 	%rd224, %rd215, 32;
	// inline asm
	cvta.to.global.u64 %rd223, %rd224;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r258,%r259,%r260,%r261}, [%rd223];
	// inline asm
	add.s64 	%rd227, %rd215, 48;
	// inline asm
	cvta.to.global.u64 %rd226, %rd227;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r262,%r263,%r264,%r265}, [%rd226];
	// inline asm
	add.s64 	%rd230, %rd215, 64;
	// inline asm
	cvta.to.global.u64 %rd229, %rd230;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r266,%r267,%r268,%r269}, [%rd229];
	// inline asm
	add.s64 	%rd233, %rd215, 80;
	// inline asm
	cvta.to.global.u64 %rd232, %rd233;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r270,%r271,%r272,%r273}, [%rd232];
	// inline asm
	add.s64 	%rd236, %rd215, 96;
	// inline asm
	cvta.to.global.u64 %rd235, %rd236;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r274,%r275,%r276,%r277}, [%rd235];
	// inline asm
	add.s64 	%rd239, %rd215, 112;
	// inline asm
	cvta.to.global.u64 %rd238, %rd239;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r278,%r279,%r280,%r281}, [%rd238];
	// inline asm
	mov.b32 	 %f686, %r253;
	mov.b32 	 %f687, %r254;
	cvt.u32.u16	%r294, %rs8;
	add.s32 	%r295, %r294, -1;
	cvt.rn.f32.s32	%f688, %r295;
	sub.f32 	%f689, %f583, %f686;
	mul.f32 	%f690, %f689, %f688;
	sub.f32 	%f691, %f687, %f686;
	div.rn.f32 	%f692, %f690, %f691;
	min.f32 	%f693, %f688, %f692;
	mov.f32 	%f694, 0f00000000;
	max.f32 	%f695, %f694, %f693;
	cvt.rmi.f32.f32	%f696, %f695;
	cvt.rzi.s32.f32	%r296, %f696;
	cvt.s64.s32	%rd17, %r296;
	mul.wide.s32 	%rd250, %r296, 48;
	add.s64 	%rd242, %rd224, %rd250;
	// inline asm
	cvta.to.global.u64 %rd241, %rd242;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r282,%r283,%r284,%r285}, [%rd241];
	// inline asm
	mov.b32 	 %f941, %r282;
	mov.b32 	 %f942, %r283;
	mov.b32 	 %f943, %r284;
	add.s64 	%rd245, %rd242, 16;
	// inline asm
	cvta.to.global.u64 %rd244, %rd245;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r286,%r287,%r288,%r289}, [%rd244];
	// inline asm
	mov.b32 	 %f938, %r286;
	mov.b32 	 %f939, %r287;
	mov.b32 	 %f940, %r288;
	add.s64 	%rd248, %rd242, 32;
	// inline asm
	cvta.to.global.u64 %rd247, %rd248;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r290,%r291,%r292,%r293}, [%rd247];
	// inline asm
	sub.f32 	%f249, %f695, %f696;
	mov.b32 	 %f935, %r290;
	mov.b32 	 %f936, %r291;
	mov.b32 	 %f937, %r292;
	setp.leu.f32	%p20, %f249, 0f00000000;
	@%p20 bra 	BB0_36;

	mul.lo.s64 	%rd260, %rd17, 48;
	add.s64 	%rd261, %rd215, %rd260;
	add.s64 	%rd252, %rd261, 80;
	// inline asm
	cvta.to.global.u64 %rd251, %rd252;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r297,%r298,%r299,%r300}, [%rd251];
	// inline asm
	mov.b32 	 %f697, %r297;
	mov.b32 	 %f698, %r298;
	mov.b32 	 %f699, %r299;
	add.s64 	%rd255, %rd261, 96;
	// inline asm
	cvta.to.global.u64 %rd254, %rd255;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r301,%r302,%r303,%r304}, [%rd254];
	// inline asm
	mov.b32 	 %f700, %r301;
	mov.b32 	 %f701, %r302;
	mov.b32 	 %f702, %r303;
	add.s64 	%rd258, %rd261, 112;
	// inline asm
	cvta.to.global.u64 %rd257, %rd258;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r305,%r306,%r307,%r308}, [%rd257];
	// inline asm
	mov.f32 	%f703, 0f3F800000;
	sub.f32 	%f704, %f703, %f249;
	mul.f32 	%f705, %f249, %f697;
	mul.f32 	%f706, %f249, %f698;
	mul.f32 	%f707, %f249, %f699;
	fma.rn.f32 	%f941, %f704, %f941, %f705;
	fma.rn.f32 	%f942, %f704, %f942, %f706;
	fma.rn.f32 	%f943, %f704, %f943, %f707;
	mul.f32 	%f708, %f249, %f700;
	mul.f32 	%f709, %f249, %f701;
	mul.f32 	%f710, %f249, %f702;
	fma.rn.f32 	%f938, %f704, %f938, %f708;
	fma.rn.f32 	%f939, %f704, %f939, %f709;
	fma.rn.f32 	%f940, %f704, %f940, %f710;
	mov.b32 	 %f711, %r305;
	mov.b32 	 %f712, %r306;
	mov.b32 	 %f713, %r307;
	mul.f32 	%f714, %f249, %f711;
	mul.f32 	%f715, %f249, %f712;
	mul.f32 	%f716, %f249, %f713;
	fma.rn.f32 	%f935, %f704, %f935, %f714;
	fma.rn.f32 	%f936, %f704, %f936, %f715;
	fma.rn.f32 	%f937, %f704, %f937, %f716;
	bra.uni 	BB0_36;

BB0_25:
	mov.f32 	%f944, 0f00000000;
	mov.f32 	%f946, 0f3F800000;
	setp.eq.s32	%p16, %r161, 4;
	@%p16 bra 	BB0_28;
	bra.uni 	BB0_26;

BB0_28:
	// inline asm
	call (%rd265), _optix_get_instance_inverse_transform_from_handle, (%rd141);
	// inline asm
	bra.uni 	BB0_29;

BB0_31:
	// inline asm
	call (%rd156), _optix_get_srt_motion_transform_from_handle, (%rd141);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd158, %rd156;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r175,%r176,%r177,%r178}, [%rd158];
	// inline asm
	mov.b32	{%rs6, %rs7}, %r177;
	add.s64 	%rd162, %rd156, 16;
	// inline asm
	cvta.to.global.u64 %rd161, %rd162;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r179,%r180,%r181,%r182}, [%rd161];
	// inline asm
	add.s64 	%rd165, %rd156, 32;
	// inline asm
	cvta.to.global.u64 %rd164, %rd165;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r183,%r184,%r185,%r186}, [%rd164];
	// inline asm
	add.s64 	%rd168, %rd156, 48;
	// inline asm
	cvta.to.global.u64 %rd167, %rd168;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r187,%r188,%r189,%r190}, [%rd167];
	// inline asm
	add.s64 	%rd171, %rd156, 64;
	// inline asm
	cvta.to.global.u64 %rd170, %rd171;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r191,%r192,%r193,%r194}, [%rd170];
	// inline asm
	add.s64 	%rd174, %rd156, 80;
	// inline asm
	cvta.to.global.u64 %rd173, %rd174;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r195,%r196,%r197,%r198}, [%rd173];
	// inline asm
	add.s64 	%rd177, %rd156, 96;
	// inline asm
	cvta.to.global.u64 %rd176, %rd177;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r199,%r200,%r201,%r202}, [%rd176];
	// inline asm
	add.s64 	%rd180, %rd156, 112;
	// inline asm
	cvta.to.global.u64 %rd179, %rd180;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r203,%r204,%r205,%r206}, [%rd179];
	// inline asm
	add.s64 	%rd183, %rd156, 128;
	// inline asm
	cvta.to.global.u64 %rd182, %rd183;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r207,%r208,%r209,%r210}, [%rd182];
	// inline asm
	add.s64 	%rd186, %rd156, 144;
	// inline asm
	cvta.to.global.u64 %rd185, %rd186;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r211,%r212,%r213,%r214}, [%rd185];
	// inline asm
	mov.b32 	 %f594, %r178;
	mov.b32 	 %f595, %r179;
	cvt.u32.u16	%r231, %rs6;
	add.s32 	%r232, %r231, -1;
	cvt.rn.f32.s32	%f596, %r232;
	sub.f32 	%f597, %f583, %f594;
	mul.f32 	%f598, %f597, %f596;
	sub.f32 	%f599, %f595, %f594;
	div.rn.f32 	%f600, %f598, %f599;
	min.f32 	%f601, %f596, %f600;
	mov.f32 	%f602, 0f00000000;
	max.f32 	%f603, %f602, %f601;
	cvt.rmi.f32.f32	%f604, %f603;
	cvt.rzi.s32.f32	%r233, %f604;
	cvt.s64.s32	%rd15, %r233;
	mul.wide.s32 	%rd200, %r233, 64;
	add.s64 	%rd189, %rd165, %rd200;
	// inline asm
	cvta.to.global.u64 %rd188, %rd189;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r215,%r216,%r217,%r218}, [%rd188];
	// inline asm
	mov.b32 	 %f925, %r215;
	mov.b32 	 %f926, %r216;
	mov.b32 	 %f927, %r217;
	add.s64 	%rd192, %rd189, 16;
	// inline asm
	cvta.to.global.u64 %rd191, %rd192;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r219,%r220,%r221,%r222}, [%rd191];
	// inline asm
	mov.b32 	 %f928, %r219;
	mov.b32 	 %f929, %r220;
	mov.b32 	 %f930, %r222;
	add.s64 	%rd195, %rd189, 32;
	// inline asm
	cvta.to.global.u64 %rd194, %rd195;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r223,%r224,%r225,%r226}, [%rd194];
	// inline asm
	sub.f32 	%f209, %f603, %f604;
	mov.b32 	 %f931, %r224;
	mov.b32 	 %f932, %r225;
	mov.b32 	 %f933, %r226;
	add.s64 	%rd198, %rd189, 48;
	// inline asm
	cvta.to.global.u64 %rd197, %rd198;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r227,%r228,%r229,%r230}, [%rd197];
	// inline asm
	mov.b32 	 %f934, %r227;
	setp.leu.f32	%p19, %f209, 0f00000000;
	@%p19 bra 	BB0_33;

	shl.b64 	%rd213, %rd15, 6;
	add.s64 	%rd214, %rd213, %rd156;
	add.s64 	%rd202, %rd214, 96;
	// inline asm
	cvta.to.global.u64 %rd201, %rd202;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r234,%r235,%r236,%r237}, [%rd201];
	// inline asm
	mov.b32 	 %f605, %r234;
	mov.b32 	 %f606, %r235;
	mov.b32 	 %f607, %r236;
	add.s64 	%rd205, %rd214, 112;
	// inline asm
	cvta.to.global.u64 %rd204, %rd205;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r238,%r239,%r240,%r241}, [%rd204];
	// inline asm
	mov.b32 	 %f608, %r238;
	mov.b32 	 %f609, %r239;
	mov.b32 	 %f610, %r241;
	add.s64 	%rd208, %rd214, 128;
	// inline asm
	cvta.to.global.u64 %rd207, %rd208;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r242,%r243,%r244,%r245}, [%rd207];
	// inline asm
	mov.b32 	 %f611, %r243;
	mov.b32 	 %f612, %r244;
	mov.b32 	 %f613, %r245;
	add.s64 	%rd211, %rd214, 144;
	// inline asm
	cvta.to.global.u64 %rd210, %rd211;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r246,%r247,%r248,%r249}, [%rd210];
	// inline asm
	mov.f32 	%f614, 0f3F800000;
	sub.f32 	%f615, %f614, %f209;
	mul.f32 	%f616, %f209, %f605;
	mul.f32 	%f617, %f209, %f606;
	mul.f32 	%f618, %f209, %f607;
	fma.rn.f32 	%f925, %f615, %f925, %f616;
	fma.rn.f32 	%f926, %f615, %f926, %f617;
	fma.rn.f32 	%f927, %f615, %f927, %f618;
	mul.f32 	%f619, %f209, %f608;
	mul.f32 	%f620, %f209, %f609;
	mul.f32 	%f621, %f209, %f610;
	fma.rn.f32 	%f928, %f615, %f928, %f619;
	fma.rn.f32 	%f929, %f615, %f929, %f620;
	fma.rn.f32 	%f930, %f615, %f930, %f621;
	mul.f32 	%f622, %f209, %f611;
	mul.f32 	%f623, %f209, %f612;
	mul.f32 	%f624, %f209, %f613;
	fma.rn.f32 	%f625, %f615, %f931, %f622;
	fma.rn.f32 	%f626, %f615, %f932, %f623;
	fma.rn.f32 	%f627, %f615, %f933, %f624;
	mov.b32 	 %f628, %r246;
	mul.f32 	%f629, %f209, %f628;
	fma.rn.f32 	%f630, %f615, %f934, %f629;
	mul.f32 	%f631, %f626, %f626;
	fma.rn.f32 	%f632, %f625, %f625, %f631;
	fma.rn.f32 	%f633, %f627, %f627, %f632;
	fma.rn.f32 	%f634, %f630, %f630, %f633;
	sqrt.rn.f32 	%f635, %f634;
	rcp.rn.f32 	%f636, %f635;
	mul.f32 	%f931, %f625, %f636;
	mul.f32 	%f932, %f626, %f636;
	mul.f32 	%f933, %f627, %f636;
	mul.f32 	%f934, %f630, %f636;

BB0_33:
	mul.f32 	%f637, %f932, %f932;
	fma.rn.f32 	%f638, %f931, %f931, %f637;
	fma.rn.f32 	%f639, %f933, %f933, %f638;
	fma.rn.f32 	%f640, %f934, %f934, %f639;
	rcp.rn.f32 	%f641, %f640;
	mul.f32 	%f642, %f931, %f641;
	mul.f32 	%f643, %f932, %f641;
	mul.f32 	%f644, %f933, %f641;
	mul.f32 	%f645, %f934, %f641;
	mul.f32 	%f646, %f931, %f642;
	mul.f32 	%f647, %f932, %f643;
	mul.f32 	%f648, %f933, %f644;
	mul.f32 	%f649, %f931, %f643;
	mul.f32 	%f650, %f933, %f645;
	mul.f32 	%f651, %f931, %f644;
	mul.f32 	%f652, %f932, %f645;
	mul.f32 	%f653, %f932, %f644;
	mul.f32 	%f654, %f931, %f645;
	sub.f32 	%f655, %f646, %f647;
	sub.f32 	%f656, %f655, %f648;
	fma.rn.f32 	%f657, %f934, %f645, %f656;
	sub.f32 	%f658, %f649, %f650;
	add.f32 	%f659, %f658, %f658;
	add.f32 	%f660, %f651, %f652;
	add.f32 	%f661, %f660, %f660;
	add.f32 	%f662, %f649, %f650;
	add.f32 	%f663, %f662, %f662;
	sub.f32 	%f664, %f647, %f646;
	sub.f32 	%f665, %f664, %f648;
	fma.rn.f32 	%f666, %f934, %f645, %f665;
	sub.f32 	%f667, %f653, %f654;
	add.f32 	%f668, %f667, %f667;
	sub.f32 	%f669, %f651, %f652;
	add.f32 	%f670, %f669, %f669;
	add.f32 	%f671, %f653, %f654;
	add.f32 	%f672, %f671, %f671;
	neg.f32 	%f673, %f646;
	sub.f32 	%f674, %f673, %f647;
	add.f32 	%f675, %f648, %f674;
	fma.rn.f32 	%f676, %f934, %f645, %f675;
	mul.f32 	%f677, %f927, %f657;
	fma.rn.f32 	%f678, %f929, %f659, %f677;
	fma.rn.f32 	%f943, %f930, %f661, %f678;
	mul.f32 	%f679, %f929, %f666;
	fma.rn.f32 	%f680, %f927, %f663, %f679;
	fma.rn.f32 	%f940, %f930, %f668, %f680;
	mul.f32 	%f681, %f929, %f672;
	fma.rn.f32 	%f682, %f927, %f670, %f681;
	fma.rn.f32 	%f937, %f930, %f676, %f682;
	mul.f32 	%f683, %f926, %f657;
	fma.rn.f32 	%f942, %f928, %f659, %f683;
	mul.f32 	%f684, %f928, %f666;
	fma.rn.f32 	%f939, %f926, %f663, %f684;
	mul.f32 	%f685, %f928, %f672;
	fma.rn.f32 	%f936, %f926, %f670, %f685;
	mul.f32 	%f941, %f925, %f657;
	mul.f32 	%f938, %f925, %f663;
	mul.f32 	%f935, %f925, %f670;

BB0_36:
	mul.f32 	%f717, %f936, %f940;
	mul.f32 	%f718, %f937, %f939;
	sub.f32 	%f719, %f718, %f717;
	mul.f32 	%f720, %f941, %f719;
	mul.f32 	%f721, %f935, %f940;
	mul.f32 	%f722, %f937, %f938;
	sub.f32 	%f723, %f722, %f721;
	mul.f32 	%f724, %f723, %f942;
	sub.f32 	%f725, %f720, %f724;
	mul.f32 	%f726, %f935, %f939;
	mul.f32 	%f727, %f936, %f938;
	sub.f32 	%f728, %f727, %f726;
	fma.rn.f32 	%f729, %f728, %f943, %f725;
	rcp.rn.f32 	%f730, %f729;
	mul.f32 	%f950, %f719, %f730;
	mul.f32 	%f731, %f937, %f942;
	mul.f32 	%f732, %f936, %f943;
	sub.f32 	%f733, %f732, %f731;
	mul.f32 	%f951, %f730, %f733;
	mul.f32 	%f734, %f939, %f943;
	mul.f32 	%f735, %f940, %f942;
	sub.f32 	%f736, %f735, %f734;
	mul.f32 	%f952, %f730, %f736;
	sub.f32 	%f737, %f721, %f722;
	mul.f32 	%f947, %f737, %f730;
	mul.f32 	%f738, %f935, %f943;
	mul.f32 	%f739, %f937, %f941;
	sub.f32 	%f740, %f739, %f738;
	mul.f32 	%f948, %f730, %f740;
	mul.f32 	%f741, %f940, %f941;
	mul.f32 	%f742, %f938, %f943;
	sub.f32 	%f743, %f742, %f741;
	mul.f32 	%f949, %f730, %f743;
	mul.f32 	%f944, %f728, %f730;
	mul.f32 	%f744, %f936, %f941;
	mul.f32 	%f745, %f935, %f942;
	sub.f32 	%f746, %f745, %f744;
	mul.f32 	%f945, %f746, %f730;
	mul.f32 	%f747, %f938, %f942;
	mul.f32 	%f748, %f939, %f941;
	sub.f32 	%f749, %f748, %f747;
	mul.f32 	%f946, %f749, %f730;
	bra.uni 	BB0_37;

BB0_26:
	setp.ne.s32	%p17, %r161, 1;
	mov.f32 	%f945, %f944;
	mov.f32 	%f947, %f944;
	mov.f32 	%f948, %f946;
	mov.f32 	%f949, %f944;
	mov.f32 	%f950, %f946;
	mov.f32 	%f951, %f944;
	mov.f32 	%f952, %f944;
	@%p17 bra 	BB0_37;

	// inline asm
	call (%rd143), _optix_get_static_transform_from_handle, (%rd141);
	// inline asm
	add.s64 	%rd265, %rd143, 64;

BB0_29:
	// inline asm
	cvta.to.global.u64 %rd147, %rd265;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r163,%r164,%r165,%r166}, [%rd147];
	// inline asm
	mov.b32 	 %f950, %r163;
	mov.b32 	 %f951, %r164;
	mov.b32 	 %f952, %r165;
	add.s64 	%rd151, %rd265, 16;
	// inline asm
	cvta.to.global.u64 %rd150, %rd151;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r167,%r168,%r169,%r170}, [%rd150];
	// inline asm
	mov.b32 	 %f947, %r167;
	mov.b32 	 %f948, %r168;
	mov.b32 	 %f949, %r169;
	add.s64 	%rd154, %rd265, 32;
	// inline asm
	cvta.to.global.u64 %rd153, %rd154;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r171,%r172,%r173,%r174}, [%rd153];
	// inline asm
	mov.b32 	 %f944, %r171;
	mov.b32 	 %f945, %r172;
	mov.b32 	 %f946, %r173;

BB0_37:
	setp.eq.s32	%p21, %r319, 0;
	@%p21 bra 	BB0_38;
	bra.uni 	BB0_39;

BB0_38:
	mov.f32 	%f924, %f944;
	mov.f32 	%f923, %f945;
	mov.f32 	%f922, %f946;
	mov.f32 	%f921, %f947;
	mov.f32 	%f920, %f948;
	mov.f32 	%f919, %f949;
	mov.f32 	%f918, %f950;
	mov.f32 	%f917, %f951;
	mov.f32 	%f916, %f952;
	bra.uni 	BB0_40;

BB0_39:
	mul.f32 	%f750, %f921, %f951;
	fma.rn.f32 	%f751, %f918, %f950, %f750;
	fma.rn.f32 	%f289, %f924, %f952, %f751;
	mul.f32 	%f752, %f920, %f951;
	fma.rn.f32 	%f753, %f917, %f950, %f752;
	fma.rn.f32 	%f290, %f923, %f952, %f753;
	mul.f32 	%f754, %f919, %f951;
	fma.rn.f32 	%f755, %f916, %f950, %f754;
	fma.rn.f32 	%f291, %f922, %f952, %f755;
	mul.f32 	%f756, %f921, %f948;
	fma.rn.f32 	%f757, %f918, %f947, %f756;
	fma.rn.f32 	%f292, %f924, %f949, %f757;
	mul.f32 	%f758, %f920, %f948;
	fma.rn.f32 	%f759, %f917, %f947, %f758;
	fma.rn.f32 	%f293, %f923, %f949, %f759;
	mul.f32 	%f760, %f919, %f948;
	fma.rn.f32 	%f761, %f916, %f947, %f760;
	fma.rn.f32 	%f294, %f922, %f949, %f761;
	mul.f32 	%f762, %f921, %f945;
	fma.rn.f32 	%f763, %f918, %f944, %f762;
	fma.rn.f32 	%f924, %f924, %f946, %f763;
	mul.f32 	%f764, %f920, %f945;
	fma.rn.f32 	%f765, %f917, %f944, %f764;
	fma.rn.f32 	%f923, %f923, %f946, %f765;
	mul.f32 	%f766, %f919, %f945;
	fma.rn.f32 	%f767, %f916, %f944, %f766;
	fma.rn.f32 	%f922, %f922, %f946, %f767;
	mov.f32 	%f921, %f292;
	mov.f32 	%f920, %f293;
	mov.f32 	%f919, %f294;
	mov.f32 	%f918, %f289;
	mov.f32 	%f917, %f290;
	mov.f32 	%f916, %f291;

BB0_40:
	add.s32 	%r319, %r319, 1;
	setp.lt.u32	%p22, %r319, %r8;
	@%p22 bra 	BB0_24;

	mul.f32 	%f768, %f581, %f917;
	fma.rn.f32 	%f769, %f580, %f918, %f768;
	fma.rn.f32 	%f962, %f964, %f916, %f769;
	mul.f32 	%f770, %f581, %f920;
	fma.rn.f32 	%f771, %f580, %f921, %f770;
	fma.rn.f32 	%f963, %f964, %f919, %f771;
	mul.f32 	%f772, %f581, %f923;
	fma.rn.f32 	%f773, %f580, %f924, %f772;
	fma.rn.f32 	%f964, %f964, %f922, %f773;
	bra.uni 	BB0_42;

BB0_22:
	mov.f32 	%f962, %f580;
	mov.f32 	%f963, %f581;

BB0_42:
	// inline asm
	call (%f774), _optix_get_ray_tmin, ();
	// inline asm
	// inline asm
	call (%f775), _optix_get_ray_tmax, ();
	// inline asm
	sub.f32 	%f313, %f775, %f774;
	fma.rn.f32 	%f778, %f962, %f774, %f915;
	fma.rn.f32 	%f779, %f963, %f774, %f914;
	fma.rn.f32 	%f780, %f964, %f774, %f913;
	ld.v4.f32 	{%f781, %f782, %f783, %f784}, [%rd1+80];
	ld.v4.f32 	{%f788, %f789, %f790, %f791}, [%rd1+32];
	fma.rn.f32 	%f793, %f778, %f788, %f781;
	fma.rn.f32 	%f795, %f778, %f789, %f782;
	fma.rn.f32 	%f797, %f778, %f790, %f783;
	ld.v4.f32 	{%f798, %f799, %f800, %f801}, [%rd1+48];
	fma.rn.f32 	%f803, %f779, %f798, %f793;
	fma.rn.f32 	%f805, %f779, %f799, %f795;
	fma.rn.f32 	%f807, %f779, %f800, %f797;
	ld.v4.f32 	{%f808, %f809, %f810, %f811}, [%rd1+64];
	fma.rn.f32 	%f813, %f780, %f808, %f803;
	fma.rn.f32 	%f815, %f780, %f809, %f805;
	fma.rn.f32 	%f314, %f780, %f810, %f807;
	mul.f32 	%f817, %f962, %f788;
	mul.f32 	%f818, %f962, %f789;
	mul.f32 	%f819, %f962, %f790;
	fma.rn.f32 	%f820, %f963, %f798, %f817;
	fma.rn.f32 	%f821, %f963, %f799, %f818;
	fma.rn.f32 	%f822, %f963, %f800, %f819;
	fma.rn.f32 	%f823, %f964, %f808, %f820;
	fma.rn.f32 	%f824, %f964, %f809, %f821;
	fma.rn.f32 	%f315, %f964, %f810, %f822;
	mul.f32 	%f825, %f824, %f824;
	fma.rn.f32 	%f316, %f823, %f823, %f825;
	mul.f32 	%f826, %f815, %f824;
	fma.rn.f32 	%f827, %f813, %f823, %f826;
	add.f32 	%f317, %f827, %f827;
	mul.f32 	%f828, %f815, %f815;
	fma.rn.f32 	%f829, %f813, %f813, %f828;
	ld.f32 	%f830, [%rd1+164];
	mul.f32 	%f831, %f830, %f830;
	sub.f32 	%f318, %f829, %f831;
	setp.eq.f32	%p23, %f316, 0f00000000;
	setp.eq.f32	%p24, %f317, 0f00000000;
	and.pred  	%p25, %p23, %p24;
	mov.u16 	%rs13, 0;
	@%p25 bra 	BB0_46;

	neg.f32 	%f832, %f318;
	div.rn.f32 	%f966, %f832, %f317;
	mul.f32 	%f833, %f316, 0fC0800000;
	mul.f32 	%f834, %f833, %f318;
	fma.rn.f32 	%f320, %f317, %f317, %f834;
	setp.lt.f32	%p26, %f320, 0f00000000;
	setp.neu.f32	%p27, %f316, 0f00000000;
	and.pred  	%p28, %p26, %p27;
	@%p28 bra 	BB0_44;
	bra.uni 	BB0_45;

BB0_44:
	mov.f32 	%f965, %f966;
	bra.uni 	BB0_46;

BB0_45:
	mov.b32 	 %r309, %f317;
	and.b32  	%r310, %r309, -2147483648;
	sqrt.rn.f32 	%f835, %f320;
	mov.b32 	 %r311, %f835;
	and.b32  	%r312, %r311, 2147483647;
	or.b32  	%r313, %r312, %r310;
	mov.b32 	 %f836, %r313;
	add.f32 	%f837, %f317, %f836;
	mul.f32 	%f838, %f837, 0fBF000000;
	div.rn.f32 	%f839, %f838, %f316;
	div.rn.f32 	%f840, %f318, %f838;
	min.f32 	%f841, %f839, %f840;
	max.f32 	%f842, %f839, %f840;
	selp.f32	%f965, %f966, %f841, %p23;
	selp.f32	%f966, %f966, %f842, %p23;
	mov.u16 	%rs13, 1;

BB0_46:
	setp.gtu.f32	%p31, %f965, %f313;
	mov.pred 	%p30, 0;
	mov.pred 	%p52, %p30;
	@%p31 bra 	BB0_48;

	setp.ge.f32	%p52, %f966, 0f00000000;

BB0_48:
	fma.rn.f32 	%f325, %f315, %f965, %f314;
	fma.rn.f32 	%f326, %f315, %f966, %f314;
	setp.geu.f32	%p33, %f965, 0f00000000;
	setp.leu.f32	%p34, %f966, %f313;
	or.pred  	%p35, %p33, %p34;
	setp.ne.s16	%p36, %rs13, 0;
	and.pred  	%p37, %p52, %p36;
	and.pred  	%p38, %p37, %p35;
	mov.pred 	%p53, %p30;
	@!%p38 bra 	BB0_55;
	bra.uni 	BB0_49;

BB0_49:
	setp.ltu.f32	%p39, %f325, 0f00000000;
	@%p39 bra 	BB0_51;

	ld.f32 	%f843, [%rd1+160];
	setp.le.f32	%p41, %f325, %f843;
	setp.ge.f32	%p42, %f965, 0f00000000;
	and.pred  	%p43, %p41, %p42;
	mov.pred 	%p53, -1;
	@%p43 bra 	BB0_55;

BB0_51:
	setp.ltu.f32	%p45, %f326, 0f00000000;
	@%p45 bra 	BB0_52;
	bra.uni 	BB0_53;

BB0_52:
	mov.pred 	%p53, %p30;
	bra.uni 	BB0_55;

BB0_53:
	ld.f32 	%f844, [%rd1+160];
	setp.gtu.f32	%p47, %f326, %f844;
	mov.pred 	%p53, %p30;
	@%p47 bra 	BB0_55;

	setp.le.f32	%p53, %f966, %f313;

BB0_55:
	setp.ltu.f32	%p48, %f325, 0f00000000;
	@%p48 bra 	BB0_58;

	ld.f32 	%f845, [%rd1+160];
	setp.gtu.f32	%p49, %f325, %f845;
	@%p49 bra 	BB0_58;

	setp.ge.f32	%p50, %f965, 0f00000000;
	selp.f32	%f966, %f965, %f966, %p50;

BB0_58:
	@!%p53 bra 	BB0_60;
	bra.uni 	BB0_59;

BB0_59:
	mov.u32 	%r315, 254;
	// inline asm
	call (%r314), _optix_report_intersection_0, (%f966, %r315);
	// inline asm

BB0_60:
	ret;
}

	// .globl	__closesthit__cylinder
.visible .entry __closesthit__cylinder(

)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<2>;


	// inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%f1), _optix_get_ray_tmax, ();
	// inline asm
	ld.u32 	%r10, [%rd1];
	mov.b32 	 %r2, %f1;
	mov.u32 	%r8, 0;
	// inline asm
	call _optix_set_payload, (%r8, %r2);
	// inline asm
	mov.u32 	%r3, 1;
	// inline asm
	call _optix_set_payload, (%r3, %r13);
	// inline asm
	mov.u32 	%r5, 2;
	// inline asm
	call _optix_set_payload, (%r5, %r14);
	// inline asm
	mov.u32 	%r7, 3;
	// inline asm
	call _optix_set_payload, (%r7, %r8);
	// inline asm
	mov.u32 	%r9, 4;
	// inline asm
	call _optix_set_payload, (%r9, %r10);
	// inline asm
	mov.u32 	%r12, 5;
	// inline asm
	call (%r11), _optix_get_payload, (%r12);
	// inline asm
	setp.eq.s32	%p1, %r11, 0;
	@%p1 bra 	BB1_2;

	// inline asm
	call (%r15), _optix_read_instance_id, ();
	// inline asm
	// inline asm
	call _optix_set_payload, (%r12, %r15);
	// inline asm

BB1_2:
	ret;
}

	// .globl	__intersection__disk
.visible .entry __intersection__disk(

)
{
	.reg .pred 	%p<21>;
	.reg .b16 	%rs<9>;
	.reg .f32 	%f<935>;
	.reg .b32 	%r<315>;
	.reg .b64 	%rd<265>;


	// inline asm
	call (%rd18), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.u64 	%rd1, [%rd18+8];
	// inline asm
	call (%f314), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f315), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f883), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%r8), _optix_get_transform_list_size, ();
	// inline asm
	setp.eq.s32	%p1, %r8, 0;
	@%p1 bra 	BB2_1;

	mov.u32 	%r313, 0;
	// inline asm
	call (%f317), _optix_get_ray_time, ();
	// inline asm

BB2_3:
	.pragma "nounroll";
	// inline asm
	call (%rd19), _optix_get_transform_list_handle, (%r313);
	// inline asm
	// inline asm
	call (%r11), _optix_get_transform_type_from_handle, (%rd19);
	// inline asm
	and.b32  	%r12, %r11, -2;
	setp.eq.s32	%p2, %r12, 2;
	@%p2 bra 	BB2_9;
	bra.uni 	BB2_4;

BB2_9:
	setp.eq.s32	%p5, %r11, 2;
	@%p5 bra 	BB2_13;
	bra.uni 	BB2_10;

BB2_13:
	// inline asm
	call (%rd93), _optix_get_matrix_motion_transform_from_handle, (%rd19);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd95, %rd93;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r100,%r101,%r102,%r103}, [%rd95];
	// inline asm
	mov.b32	{%rs3, %rs4}, %r102;
	add.s64 	%rd99, %rd93, 16;
	// inline asm
	cvta.to.global.u64 %rd98, %rd99;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r104,%r105,%r106,%r107}, [%rd98];
	// inline asm
	add.s64 	%rd102, %rd93, 32;
	// inline asm
	cvta.to.global.u64 %rd101, %rd102;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r108,%r109,%r110,%r111}, [%rd101];
	// inline asm
	add.s64 	%rd105, %rd93, 48;
	// inline asm
	cvta.to.global.u64 %rd104, %rd105;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r112,%r113,%r114,%r115}, [%rd104];
	// inline asm
	add.s64 	%rd108, %rd93, 64;
	// inline asm
	cvta.to.global.u64 %rd107, %rd108;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r116,%r117,%r118,%r119}, [%rd107];
	// inline asm
	add.s64 	%rd111, %rd93, 80;
	// inline asm
	cvta.to.global.u64 %rd110, %rd111;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r120,%r121,%r122,%r123}, [%rd110];
	// inline asm
	add.s64 	%rd114, %rd93, 96;
	// inline asm
	cvta.to.global.u64 %rd113, %rd114;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r124,%r125,%r126,%r127}, [%rd113];
	// inline asm
	add.s64 	%rd117, %rd93, 112;
	// inline asm
	cvta.to.global.u64 %rd116, %rd117;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r128,%r129,%r130,%r131}, [%rd116];
	// inline asm
	mov.b32 	 %f444, %r103;
	mov.b32 	 %f445, %r104;
	cvt.u32.u16	%r144, %rs3;
	add.s32 	%r145, %r144, -1;
	cvt.rn.f32.s32	%f446, %r145;
	sub.f32 	%f447, %f317, %f444;
	mul.f32 	%f448, %f447, %f446;
	sub.f32 	%f449, %f445, %f444;
	div.rn.f32 	%f450, %f448, %f449;
	min.f32 	%f451, %f446, %f450;
	mov.f32 	%f452, 0f00000000;
	max.f32 	%f453, %f452, %f451;
	cvt.rmi.f32.f32	%f454, %f453;
	cvt.rzi.s32.f32	%r146, %f454;
	mul.wide.s32 	%rd128, %r146, 48;
	add.s64 	%rd120, %rd102, %rd128;
	// inline asm
	cvta.to.global.u64 %rd119, %rd120;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r132,%r133,%r134,%r135}, [%rd119];
	// inline asm
	mov.b32 	 %f855, %r132;
	mov.b32 	 %f856, %r133;
	mov.b32 	 %f857, %r134;
	mov.b32 	 %f858, %r135;
	add.s64 	%rd123, %rd120, 16;
	// inline asm
	cvta.to.global.u64 %rd122, %rd123;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r136,%r137,%r138,%r139}, [%rd122];
	// inline asm
	mov.b32 	 %f851, %r136;
	mov.b32 	 %f852, %r137;
	mov.b32 	 %f853, %r138;
	mov.b32 	 %f854, %r139;
	add.s64 	%rd126, %rd120, 32;
	// inline asm
	cvta.to.global.u64 %rd125, %rd126;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r140,%r141,%r142,%r143}, [%rd125];
	// inline asm
	sub.f32 	%f98, %f453, %f454;
	mov.b32 	 %f847, %r140;
	mov.b32 	 %f848, %r141;
	mov.b32 	 %f849, %r142;
	mov.b32 	 %f850, %r143;
	setp.leu.f32	%p7, %f98, 0f00000000;
	@%p7 bra 	BB2_15;

	cvt.rmi.f32.f32	%f818, %f453;
	cvt.rzi.s32.f32	%r312, %f818;
	cvt.s64.s32	%rd262, %r312;
	mul.lo.s64 	%rd138, %rd262, 48;
	add.s64 	%rd139, %rd93, %rd138;
	add.s64 	%rd130, %rd139, 80;
	// inline asm
	cvta.to.global.u64 %rd129, %rd130;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r147,%r148,%r149,%r150}, [%rd129];
	// inline asm
	mov.b32 	 %f455, %r147;
	mov.b32 	 %f456, %r148;
	mov.b32 	 %f457, %r149;
	mov.b32 	 %f458, %r150;
	add.s64 	%rd133, %rd139, 96;
	// inline asm
	cvta.to.global.u64 %rd132, %rd133;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r151,%r152,%r153,%r154}, [%rd132];
	// inline asm
	mov.b32 	 %f459, %r151;
	mov.b32 	 %f460, %r152;
	mov.b32 	 %f461, %r153;
	mov.b32 	 %f462, %r154;
	add.s64 	%rd136, %rd139, 112;
	// inline asm
	cvta.to.global.u64 %rd135, %rd136;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r155,%r156,%r157,%r158}, [%rd135];
	// inline asm
	mov.f32 	%f463, 0f3F800000;
	sub.f32 	%f464, %f463, %f98;
	mul.f32 	%f465, %f98, %f455;
	mul.f32 	%f466, %f98, %f456;
	mul.f32 	%f467, %f98, %f457;
	mul.f32 	%f468, %f98, %f458;
	fma.rn.f32 	%f855, %f464, %f855, %f465;
	fma.rn.f32 	%f856, %f464, %f856, %f466;
	fma.rn.f32 	%f857, %f464, %f857, %f467;
	fma.rn.f32 	%f858, %f464, %f858, %f468;
	mul.f32 	%f469, %f98, %f459;
	mul.f32 	%f470, %f98, %f460;
	mul.f32 	%f471, %f98, %f461;
	mul.f32 	%f472, %f98, %f462;
	fma.rn.f32 	%f851, %f464, %f851, %f469;
	fma.rn.f32 	%f852, %f464, %f852, %f470;
	fma.rn.f32 	%f853, %f464, %f853, %f471;
	fma.rn.f32 	%f854, %f464, %f854, %f472;
	mov.b32 	 %f473, %r155;
	mov.b32 	 %f474, %r156;
	mov.b32 	 %f475, %r157;
	mov.b32 	 %f476, %r158;
	mul.f32 	%f477, %f98, %f473;
	mul.f32 	%f478, %f98, %f474;
	mul.f32 	%f479, %f98, %f475;
	mul.f32 	%f480, %f98, %f476;
	fma.rn.f32 	%f847, %f464, %f847, %f477;
	fma.rn.f32 	%f848, %f464, %f848, %f478;
	fma.rn.f32 	%f849, %f464, %f849, %f479;
	fma.rn.f32 	%f850, %f464, %f850, %f480;
	bra.uni 	BB2_15;

BB2_4:
	mov.f32 	%f859, 0f00000000;
	mov.f32 	%f861, 0f3F800000;
	setp.eq.s32	%p3, %r11, 4;
	@%p3 bra 	BB2_7;
	bra.uni 	BB2_5;

BB2_7:
	// inline asm
	call (%rd263), _optix_get_instance_inverse_transform_from_handle, (%rd19);
	// inline asm
	bra.uni 	BB2_8;

BB2_10:
	// inline asm
	call (%rd34), _optix_get_srt_motion_transform_from_handle, (%rd19);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd36, %rd34;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r25,%r26,%r27,%r28}, [%rd36];
	// inline asm
	mov.b32	{%rs1, %rs2}, %r27;
	add.s64 	%rd40, %rd34, 16;
	// inline asm
	cvta.to.global.u64 %rd39, %rd40;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r29,%r30,%r31,%r32}, [%rd39];
	// inline asm
	add.s64 	%rd43, %rd34, 32;
	// inline asm
	cvta.to.global.u64 %rd42, %rd43;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r33,%r34,%r35,%r36}, [%rd42];
	// inline asm
	add.s64 	%rd46, %rd34, 48;
	// inline asm
	cvta.to.global.u64 %rd45, %rd46;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r37,%r38,%r39,%r40}, [%rd45];
	// inline asm
	add.s64 	%rd49, %rd34, 64;
	// inline asm
	cvta.to.global.u64 %rd48, %rd49;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r41,%r42,%r43,%r44}, [%rd48];
	// inline asm
	add.s64 	%rd52, %rd34, 80;
	// inline asm
	cvta.to.global.u64 %rd51, %rd52;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r45,%r46,%r47,%r48}, [%rd51];
	// inline asm
	add.s64 	%rd55, %rd34, 96;
	// inline asm
	cvta.to.global.u64 %rd54, %rd55;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r49,%r50,%r51,%r52}, [%rd54];
	// inline asm
	add.s64 	%rd58, %rd34, 112;
	// inline asm
	cvta.to.global.u64 %rd57, %rd58;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r53,%r54,%r55,%r56}, [%rd57];
	// inline asm
	add.s64 	%rd61, %rd34, 128;
	// inline asm
	cvta.to.global.u64 %rd60, %rd61;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r57,%r58,%r59,%r60}, [%rd60];
	// inline asm
	add.s64 	%rd64, %rd34, 144;
	// inline asm
	cvta.to.global.u64 %rd63, %rd64;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r61,%r62,%r63,%r64}, [%rd63];
	// inline asm
	mov.b32 	 %f331, %r28;
	mov.b32 	 %f332, %r29;
	cvt.u32.u16	%r81, %rs1;
	add.s32 	%r82, %r81, -1;
	cvt.rn.f32.s32	%f333, %r82;
	sub.f32 	%f334, %f317, %f331;
	mul.f32 	%f335, %f334, %f333;
	sub.f32 	%f336, %f332, %f331;
	div.rn.f32 	%f337, %f335, %f336;
	min.f32 	%f338, %f333, %f337;
	mov.f32 	%f339, 0f00000000;
	max.f32 	%f340, %f339, %f338;
	cvt.rmi.f32.f32	%f341, %f340;
	cvt.rzi.s32.f32	%r83, %f341;
	mul.wide.s32 	%rd78, %r83, 64;
	add.s64 	%rd67, %rd43, %rd78;
	// inline asm
	cvta.to.global.u64 %rd66, %rd67;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r65,%r66,%r67,%r68}, [%rd66];
	// inline asm
	mov.b32 	 %f831, %r65;
	mov.b32 	 %f832, %r66;
	mov.b32 	 %f833, %r67;
	mov.b32 	 %f834, %r68;
	add.s64 	%rd70, %rd67, 16;
	// inline asm
	cvta.to.global.u64 %rd69, %rd70;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r69,%r70,%r71,%r72}, [%rd69];
	// inline asm
	mov.b32 	 %f835, %r69;
	mov.b32 	 %f836, %r70;
	mov.b32 	 %f837, %r71;
	mov.b32 	 %f838, %r72;
	add.s64 	%rd73, %rd67, 32;
	// inline asm
	cvta.to.global.u64 %rd72, %rd73;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r73,%r74,%r75,%r76}, [%rd72];
	// inline asm
	sub.f32 	%f37, %f340, %f341;
	mov.b32 	 %f839, %r73;
	mov.b32 	 %f840, %r74;
	mov.b32 	 %f841, %r75;
	mov.b32 	 %f842, %r76;
	add.s64 	%rd76, %rd67, 48;
	// inline asm
	cvta.to.global.u64 %rd75, %rd76;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r77,%r78,%r79,%r80}, [%rd75];
	// inline asm
	mov.b32 	 %f843, %r77;
	mov.b32 	 %f844, %r78;
	mov.b32 	 %f845, %r79;
	mov.b32 	 %f846, %r80;
	setp.leu.f32	%p6, %f37, 0f00000000;
	@%p6 bra 	BB2_12;

	cvt.rmi.f32.f32	%f817, %f340;
	cvt.rzi.s32.f32	%r311, %f817;
	cvt.s64.s32	%rd261, %r311;
	shl.b64 	%rd91, %rd261, 6;
	add.s64 	%rd92, %rd91, %rd34;
	add.s64 	%rd80, %rd92, 96;
	// inline asm
	cvta.to.global.u64 %rd79, %rd80;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r84,%r85,%r86,%r87}, [%rd79];
	// inline asm
	mov.b32 	 %f342, %r84;
	mov.b32 	 %f343, %r85;
	mov.b32 	 %f344, %r86;
	mov.b32 	 %f345, %r87;
	add.s64 	%rd83, %rd92, 112;
	// inline asm
	cvta.to.global.u64 %rd82, %rd83;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r88,%r89,%r90,%r91}, [%rd82];
	// inline asm
	mov.b32 	 %f346, %r88;
	mov.b32 	 %f347, %r89;
	mov.b32 	 %f348, %r90;
	mov.b32 	 %f349, %r91;
	add.s64 	%rd86, %rd92, 128;
	// inline asm
	cvta.to.global.u64 %rd85, %rd86;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r92,%r93,%r94,%r95}, [%rd85];
	// inline asm
	mov.b32 	 %f350, %r92;
	mov.b32 	 %f351, %r93;
	mov.b32 	 %f352, %r94;
	mov.b32 	 %f353, %r95;
	add.s64 	%rd89, %rd92, 144;
	// inline asm
	cvta.to.global.u64 %rd88, %rd89;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r96,%r97,%r98,%r99}, [%rd88];
	// inline asm
	mov.f32 	%f354, 0f3F800000;
	sub.f32 	%f355, %f354, %f37;
	mul.f32 	%f356, %f37, %f342;
	mul.f32 	%f357, %f37, %f343;
	mul.f32 	%f358, %f37, %f344;
	mul.f32 	%f359, %f37, %f345;
	fma.rn.f32 	%f831, %f355, %f831, %f356;
	fma.rn.f32 	%f832, %f355, %f832, %f357;
	fma.rn.f32 	%f833, %f355, %f833, %f358;
	fma.rn.f32 	%f834, %f355, %f834, %f359;
	mul.f32 	%f360, %f37, %f346;
	mul.f32 	%f361, %f37, %f347;
	mul.f32 	%f362, %f37, %f348;
	mul.f32 	%f363, %f37, %f349;
	fma.rn.f32 	%f835, %f355, %f835, %f360;
	fma.rn.f32 	%f836, %f355, %f836, %f361;
	fma.rn.f32 	%f837, %f355, %f837, %f362;
	fma.rn.f32 	%f838, %f355, %f838, %f363;
	mul.f32 	%f364, %f37, %f350;
	mul.f32 	%f365, %f37, %f351;
	mul.f32 	%f366, %f37, %f352;
	mul.f32 	%f367, %f37, %f353;
	fma.rn.f32 	%f839, %f355, %f839, %f364;
	fma.rn.f32 	%f368, %f355, %f840, %f365;
	fma.rn.f32 	%f369, %f355, %f841, %f366;
	fma.rn.f32 	%f370, %f355, %f842, %f367;
	mov.b32 	 %f371, %r96;
	mov.b32 	 %f372, %r97;
	mov.b32 	 %f373, %r98;
	mov.b32 	 %f374, %r99;
	mul.f32 	%f375, %f37, %f371;
	mul.f32 	%f376, %f37, %f372;
	mul.f32 	%f377, %f37, %f373;
	mul.f32 	%f378, %f37, %f374;
	fma.rn.f32 	%f379, %f355, %f843, %f375;
	fma.rn.f32 	%f844, %f355, %f844, %f376;
	fma.rn.f32 	%f845, %f355, %f845, %f377;
	fma.rn.f32 	%f846, %f355, %f846, %f378;
	mul.f32 	%f380, %f369, %f369;
	fma.rn.f32 	%f381, %f368, %f368, %f380;
	fma.rn.f32 	%f382, %f370, %f370, %f381;
	fma.rn.f32 	%f383, %f379, %f379, %f382;
	sqrt.rn.f32 	%f384, %f383;
	rcp.rn.f32 	%f385, %f384;
	mul.f32 	%f840, %f368, %f385;
	mul.f32 	%f841, %f369, %f385;
	mul.f32 	%f842, %f370, %f385;
	mul.f32 	%f843, %f379, %f385;

BB2_12:
	mul.f32 	%f386, %f841, %f841;
	fma.rn.f32 	%f387, %f840, %f840, %f386;
	fma.rn.f32 	%f388, %f842, %f842, %f387;
	fma.rn.f32 	%f389, %f843, %f843, %f388;
	rcp.rn.f32 	%f390, %f389;
	mul.f32 	%f391, %f840, %f390;
	mul.f32 	%f392, %f841, %f390;
	mul.f32 	%f393, %f842, %f390;
	mul.f32 	%f394, %f843, %f390;
	mul.f32 	%f395, %f840, %f391;
	mul.f32 	%f396, %f841, %f392;
	mul.f32 	%f397, %f842, %f393;
	mul.f32 	%f398, %f840, %f392;
	mul.f32 	%f399, %f842, %f394;
	mul.f32 	%f400, %f840, %f393;
	mul.f32 	%f401, %f841, %f394;
	mul.f32 	%f402, %f841, %f393;
	mul.f32 	%f403, %f840, %f394;
	sub.f32 	%f404, %f395, %f396;
	sub.f32 	%f405, %f404, %f397;
	fma.rn.f32 	%f406, %f843, %f394, %f405;
	sub.f32 	%f407, %f398, %f399;
	add.f32 	%f408, %f407, %f407;
	add.f32 	%f409, %f400, %f401;
	add.f32 	%f410, %f409, %f409;
	add.f32 	%f411, %f398, %f399;
	add.f32 	%f412, %f411, %f411;
	sub.f32 	%f413, %f396, %f395;
	sub.f32 	%f414, %f413, %f397;
	fma.rn.f32 	%f415, %f843, %f394, %f414;
	sub.f32 	%f416, %f402, %f403;
	add.f32 	%f417, %f416, %f416;
	sub.f32 	%f418, %f400, %f401;
	add.f32 	%f419, %f418, %f418;
	add.f32 	%f420, %f402, %f403;
	add.f32 	%f421, %f420, %f420;
	neg.f32 	%f422, %f395;
	sub.f32 	%f423, %f422, %f396;
	add.f32 	%f424, %f397, %f423;
	fma.rn.f32 	%f425, %f843, %f394, %f424;
	mul.f32 	%f426, %f834, %f406;
	fma.rn.f32 	%f427, %f837, %f408, %f426;
	fma.rn.f32 	%f428, %f839, %f410, %f427;
	add.f32 	%f858, %f844, %f428;
	mul.f32 	%f429, %f837, %f415;
	fma.rn.f32 	%f430, %f834, %f412, %f429;
	fma.rn.f32 	%f431, %f839, %f417, %f430;
	add.f32 	%f854, %f845, %f431;
	mul.f32 	%f432, %f837, %f421;
	fma.rn.f32 	%f433, %f834, %f419, %f432;
	fma.rn.f32 	%f434, %f839, %f425, %f433;
	add.f32 	%f850, %f846, %f434;
	mul.f32 	%f435, %f833, %f406;
	fma.rn.f32 	%f436, %f836, %f408, %f435;
	fma.rn.f32 	%f857, %f838, %f410, %f436;
	mul.f32 	%f437, %f836, %f415;
	fma.rn.f32 	%f438, %f833, %f412, %f437;
	fma.rn.f32 	%f853, %f838, %f417, %f438;
	mul.f32 	%f439, %f836, %f421;
	fma.rn.f32 	%f440, %f833, %f419, %f439;
	fma.rn.f32 	%f849, %f838, %f425, %f440;
	mul.f32 	%f441, %f832, %f406;
	fma.rn.f32 	%f856, %f835, %f408, %f441;
	mul.f32 	%f442, %f835, %f415;
	fma.rn.f32 	%f852, %f832, %f412, %f442;
	mul.f32 	%f443, %f835, %f421;
	fma.rn.f32 	%f848, %f832, %f419, %f443;
	mul.f32 	%f855, %f831, %f406;
	mul.f32 	%f851, %f831, %f412;
	mul.f32 	%f847, %f831, %f419;

BB2_15:
	mul.f32 	%f481, %f848, %f853;
	mul.f32 	%f482, %f849, %f852;
	sub.f32 	%f483, %f482, %f481;
	mul.f32 	%f484, %f855, %f483;
	mul.f32 	%f485, %f847, %f853;
	mul.f32 	%f486, %f849, %f851;
	sub.f32 	%f487, %f486, %f485;
	mul.f32 	%f488, %f487, %f856;
	sub.f32 	%f489, %f484, %f488;
	mul.f32 	%f490, %f847, %f852;
	mul.f32 	%f491, %f848, %f851;
	sub.f32 	%f492, %f491, %f490;
	fma.rn.f32 	%f493, %f492, %f857, %f489;
	rcp.rn.f32 	%f494, %f493;
	mul.f32 	%f867, %f483, %f494;
	mul.f32 	%f495, %f849, %f856;
	mul.f32 	%f496, %f848, %f857;
	sub.f32 	%f497, %f496, %f495;
	mul.f32 	%f868, %f494, %f497;
	mul.f32 	%f498, %f852, %f857;
	mul.f32 	%f499, %f853, %f856;
	sub.f32 	%f500, %f499, %f498;
	mul.f32 	%f869, %f494, %f500;
	sub.f32 	%f501, %f485, %f486;
	mul.f32 	%f863, %f501, %f494;
	mul.f32 	%f502, %f847, %f857;
	mul.f32 	%f503, %f849, %f855;
	sub.f32 	%f504, %f503, %f502;
	mul.f32 	%f864, %f494, %f504;
	mul.f32 	%f505, %f853, %f855;
	mul.f32 	%f506, %f851, %f857;
	sub.f32 	%f507, %f506, %f505;
	mul.f32 	%f865, %f494, %f507;
	mul.f32 	%f859, %f492, %f494;
	mul.f32 	%f508, %f848, %f855;
	mul.f32 	%f509, %f847, %f856;
	sub.f32 	%f510, %f509, %f508;
	mul.f32 	%f860, %f510, %f494;
	mul.f32 	%f511, %f851, %f856;
	mul.f32 	%f512, %f852, %f855;
	sub.f32 	%f513, %f512, %f511;
	mul.f32 	%f861, %f513, %f494;
	mul.f32 	%f514, %f858, %f867;
	neg.f32 	%f515, %f514;
	mul.f32 	%f516, %f854, %f868;
	sub.f32 	%f517, %f515, %f516;
	mul.f32 	%f518, %f850, %f869;
	sub.f32 	%f870, %f517, %f518;
	mul.f32 	%f519, %f858, %f863;
	neg.f32 	%f520, %f519;
	mul.f32 	%f521, %f854, %f864;
	sub.f32 	%f522, %f520, %f521;
	mul.f32 	%f523, %f850, %f865;
	sub.f32 	%f866, %f522, %f523;
	mul.f32 	%f524, %f858, %f859;
	neg.f32 	%f525, %f524;
	mul.f32 	%f526, %f854, %f860;
	sub.f32 	%f527, %f525, %f526;
	mul.f32 	%f528, %f850, %f861;
	sub.f32 	%f862, %f527, %f528;
	bra.uni 	BB2_16;

BB2_5:
	setp.ne.s32	%p4, %r11, 1;
	mov.f32 	%f860, %f859;
	mov.f32 	%f862, %f859;
	mov.f32 	%f863, %f859;
	mov.f32 	%f864, %f861;
	mov.f32 	%f865, %f859;
	mov.f32 	%f866, %f859;
	mov.f32 	%f867, %f861;
	mov.f32 	%f868, %f859;
	mov.f32 	%f869, %f859;
	mov.f32 	%f870, %f859;
	@%p4 bra 	BB2_16;

	// inline asm
	call (%rd21), _optix_get_static_transform_from_handle, (%rd19);
	// inline asm
	add.s64 	%rd263, %rd21, 64;

BB2_8:
	// inline asm
	cvta.to.global.u64 %rd25, %rd263;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r13,%r14,%r15,%r16}, [%rd25];
	// inline asm
	mov.b32 	 %f867, %r13;
	mov.b32 	 %f868, %r14;
	mov.b32 	 %f869, %r15;
	mov.b32 	 %f870, %r16;
	add.s64 	%rd29, %rd263, 16;
	// inline asm
	cvta.to.global.u64 %rd28, %rd29;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r17,%r18,%r19,%r20}, [%rd28];
	// inline asm
	mov.b32 	 %f863, %r17;
	mov.b32 	 %f864, %r18;
	mov.b32 	 %f865, %r19;
	mov.b32 	 %f866, %r20;
	add.s64 	%rd32, %rd263, 32;
	// inline asm
	cvta.to.global.u64 %rd31, %rd32;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r21,%r22,%r23,%r24}, [%rd31];
	// inline asm
	mov.b32 	 %f859, %r21;
	mov.b32 	 %f860, %r22;
	mov.b32 	 %f861, %r23;
	mov.b32 	 %f862, %r24;

BB2_16:
	setp.eq.s32	%p8, %r313, 0;
	@%p8 bra 	BB2_17;
	bra.uni 	BB2_18;

BB2_17:
	mov.f32 	%f830, %f870;
	mov.f32 	%f829, %f869;
	mov.f32 	%f828, %f868;
	mov.f32 	%f827, %f867;
	mov.f32 	%f826, %f866;
	mov.f32 	%f825, %f865;
	mov.f32 	%f824, %f864;
	mov.f32 	%f823, %f863;
	mov.f32 	%f822, %f862;
	mov.f32 	%f821, %f861;
	mov.f32 	%f820, %f860;
	mov.f32 	%f819, %f859;
	bra.uni 	BB2_19;

BB2_18:
	mul.f32 	%f529, %f823, %f868;
	fma.rn.f32 	%f530, %f827, %f867, %f529;
	fma.rn.f32 	%f151, %f819, %f869, %f530;
	mul.f32 	%f531, %f824, %f868;
	fma.rn.f32 	%f532, %f828, %f867, %f531;
	fma.rn.f32 	%f152, %f820, %f869, %f532;
	mul.f32 	%f533, %f825, %f868;
	fma.rn.f32 	%f534, %f829, %f867, %f533;
	fma.rn.f32 	%f153, %f821, %f869, %f534;
	mul.f32 	%f535, %f826, %f868;
	fma.rn.f32 	%f536, %f830, %f867, %f535;
	fma.rn.f32 	%f537, %f822, %f869, %f536;
	add.f32 	%f154, %f870, %f537;
	mul.f32 	%f538, %f823, %f864;
	fma.rn.f32 	%f539, %f827, %f863, %f538;
	fma.rn.f32 	%f155, %f819, %f865, %f539;
	mul.f32 	%f540, %f824, %f864;
	fma.rn.f32 	%f541, %f828, %f863, %f540;
	fma.rn.f32 	%f156, %f820, %f865, %f541;
	mul.f32 	%f542, %f825, %f864;
	fma.rn.f32 	%f543, %f829, %f863, %f542;
	fma.rn.f32 	%f157, %f821, %f865, %f543;
	mul.f32 	%f544, %f826, %f864;
	fma.rn.f32 	%f545, %f830, %f863, %f544;
	fma.rn.f32 	%f546, %f822, %f865, %f545;
	add.f32 	%f158, %f866, %f546;
	mul.f32 	%f547, %f823, %f860;
	fma.rn.f32 	%f548, %f827, %f859, %f547;
	fma.rn.f32 	%f819, %f819, %f861, %f548;
	mul.f32 	%f549, %f824, %f860;
	fma.rn.f32 	%f550, %f828, %f859, %f549;
	fma.rn.f32 	%f820, %f820, %f861, %f550;
	mul.f32 	%f551, %f825, %f860;
	fma.rn.f32 	%f552, %f829, %f859, %f551;
	fma.rn.f32 	%f821, %f821, %f861, %f552;
	mul.f32 	%f553, %f826, %f860;
	fma.rn.f32 	%f554, %f830, %f859, %f553;
	fma.rn.f32 	%f555, %f822, %f861, %f554;
	add.f32 	%f822, %f862, %f555;
	mov.f32 	%f830, %f154;
	mov.f32 	%f829, %f153;
	mov.f32 	%f828, %f152;
	mov.f32 	%f827, %f151;
	mov.f32 	%f826, %f158;
	mov.f32 	%f825, %f157;
	mov.f32 	%f824, %f156;
	mov.f32 	%f823, %f155;

BB2_19:
	add.s32 	%r313, %r313, 1;
	setp.lt.u32	%p9, %r313, %r8;
	@%p9 bra 	BB2_3;

	mul.f32 	%f556, %f314, %f827;
	fma.rn.f32 	%f557, %f315, %f828, %f556;
	fma.rn.f32 	%f558, %f883, %f829, %f557;
	add.f32 	%f885, %f830, %f558;
	mul.f32 	%f559, %f314, %f823;
	fma.rn.f32 	%f560, %f315, %f824, %f559;
	fma.rn.f32 	%f561, %f883, %f825, %f560;
	add.f32 	%f884, %f826, %f561;
	mul.f32 	%f562, %f314, %f819;
	fma.rn.f32 	%f563, %f315, %f820, %f562;
	fma.rn.f32 	%f564, %f883, %f821, %f563;
	add.f32 	%f883, %f822, %f564;
	bra.uni 	BB2_21;

BB2_1:
	mov.f32 	%f884, %f315;
	mov.f32 	%f885, %f314;

BB2_21:
	setp.eq.s32	%p20, %r8, 0;
	// inline asm
	call (%f565), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f566), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f934), _optix_get_world_ray_direction_z, ();
	// inline asm
	@%p20 bra 	BB2_22;

	mov.u32 	%r314, 0;
	// inline asm
	call (%f568), _optix_get_ray_time, ();
	// inline asm

BB2_24:
	.pragma "nounroll";
	// inline asm
	call (%rd140), _optix_get_transform_list_handle, (%r314);
	// inline asm
	// inline asm
	call (%r161), _optix_get_transform_type_from_handle, (%rd140);
	// inline asm
	and.b32  	%r162, %r161, -2;
	setp.eq.s32	%p11, %r162, 2;
	@%p11 bra 	BB2_30;
	bra.uni 	BB2_25;

BB2_30:
	setp.eq.s32	%p14, %r161, 2;
	@%p14 bra 	BB2_34;
	bra.uni 	BB2_31;

BB2_34:
	// inline asm
	call (%rd214), _optix_get_matrix_motion_transform_from_handle, (%rd140);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd216, %rd214;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r250,%r251,%r252,%r253}, [%rd216];
	// inline asm
	mov.b32	{%rs7, %rs8}, %r252;
	add.s64 	%rd220, %rd214, 16;
	// inline asm
	cvta.to.global.u64 %rd219, %rd220;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r254,%r255,%r256,%r257}, [%rd219];
	// inline asm
	add.s64 	%rd223, %rd214, 32;
	// inline asm
	cvta.to.global.u64 %rd222, %rd223;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r258,%r259,%r260,%r261}, [%rd222];
	// inline asm
	add.s64 	%rd226, %rd214, 48;
	// inline asm
	cvta.to.global.u64 %rd225, %rd226;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r262,%r263,%r264,%r265}, [%rd225];
	// inline asm
	add.s64 	%rd229, %rd214, 64;
	// inline asm
	cvta.to.global.u64 %rd228, %rd229;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r266,%r267,%r268,%r269}, [%rd228];
	// inline asm
	add.s64 	%rd232, %rd214, 80;
	// inline asm
	cvta.to.global.u64 %rd231, %rd232;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r270,%r271,%r272,%r273}, [%rd231];
	// inline asm
	add.s64 	%rd235, %rd214, 96;
	// inline asm
	cvta.to.global.u64 %rd234, %rd235;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r274,%r275,%r276,%r277}, [%rd234];
	// inline asm
	add.s64 	%rd238, %rd214, 112;
	// inline asm
	cvta.to.global.u64 %rd237, %rd238;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r278,%r279,%r280,%r281}, [%rd237];
	// inline asm
	mov.b32 	 %f671, %r253;
	mov.b32 	 %f672, %r254;
	cvt.u32.u16	%r294, %rs7;
	add.s32 	%r295, %r294, -1;
	cvt.rn.f32.s32	%f673, %r295;
	sub.f32 	%f674, %f568, %f671;
	mul.f32 	%f675, %f674, %f673;
	sub.f32 	%f676, %f672, %f671;
	div.rn.f32 	%f677, %f675, %f676;
	min.f32 	%f678, %f673, %f677;
	mov.f32 	%f679, 0f00000000;
	max.f32 	%f680, %f679, %f678;
	cvt.rmi.f32.f32	%f681, %f680;
	cvt.rzi.s32.f32	%r296, %f681;
	cvt.s64.s32	%rd17, %r296;
	mul.wide.s32 	%rd249, %r296, 48;
	add.s64 	%rd241, %rd223, %rd249;
	// inline asm
	cvta.to.global.u64 %rd240, %rd241;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r282,%r283,%r284,%r285}, [%rd240];
	// inline asm
	mov.b32 	 %f911, %r282;
	mov.b32 	 %f912, %r283;
	mov.b32 	 %f913, %r284;
	add.s64 	%rd244, %rd241, 16;
	// inline asm
	cvta.to.global.u64 %rd243, %rd244;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r286,%r287,%r288,%r289}, [%rd243];
	// inline asm
	mov.b32 	 %f908, %r286;
	mov.b32 	 %f909, %r287;
	mov.b32 	 %f910, %r288;
	add.s64 	%rd247, %rd241, 32;
	// inline asm
	cvta.to.global.u64 %rd246, %rd247;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r290,%r291,%r292,%r293}, [%rd246];
	// inline asm
	sub.f32 	%f249, %f680, %f681;
	mov.b32 	 %f905, %r290;
	mov.b32 	 %f906, %r291;
	mov.b32 	 %f907, %r292;
	setp.leu.f32	%p16, %f249, 0f00000000;
	@%p16 bra 	BB2_36;

	mul.lo.s64 	%rd259, %rd17, 48;
	add.s64 	%rd260, %rd214, %rd259;
	add.s64 	%rd251, %rd260, 80;
	// inline asm
	cvta.to.global.u64 %rd250, %rd251;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r297,%r298,%r299,%r300}, [%rd250];
	// inline asm
	mov.b32 	 %f682, %r297;
	mov.b32 	 %f683, %r298;
	mov.b32 	 %f684, %r299;
	add.s64 	%rd254, %rd260, 96;
	// inline asm
	cvta.to.global.u64 %rd253, %rd254;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r301,%r302,%r303,%r304}, [%rd253];
	// inline asm
	mov.b32 	 %f685, %r301;
	mov.b32 	 %f686, %r302;
	mov.b32 	 %f687, %r303;
	add.s64 	%rd257, %rd260, 112;
	// inline asm
	cvta.to.global.u64 %rd256, %rd257;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r305,%r306,%r307,%r308}, [%rd256];
	// inline asm
	mov.f32 	%f688, 0f3F800000;
	sub.f32 	%f689, %f688, %f249;
	mul.f32 	%f690, %f249, %f682;
	mul.f32 	%f691, %f249, %f683;
	mul.f32 	%f692, %f249, %f684;
	fma.rn.f32 	%f911, %f689, %f911, %f690;
	fma.rn.f32 	%f912, %f689, %f912, %f691;
	fma.rn.f32 	%f913, %f689, %f913, %f692;
	mul.f32 	%f693, %f249, %f685;
	mul.f32 	%f694, %f249, %f686;
	mul.f32 	%f695, %f249, %f687;
	fma.rn.f32 	%f908, %f689, %f908, %f693;
	fma.rn.f32 	%f909, %f689, %f909, %f694;
	fma.rn.f32 	%f910, %f689, %f910, %f695;
	mov.b32 	 %f696, %r305;
	mov.b32 	 %f697, %r306;
	mov.b32 	 %f698, %r307;
	mul.f32 	%f699, %f249, %f696;
	mul.f32 	%f700, %f249, %f697;
	mul.f32 	%f701, %f249, %f698;
	fma.rn.f32 	%f905, %f689, %f905, %f699;
	fma.rn.f32 	%f906, %f689, %f906, %f700;
	fma.rn.f32 	%f907, %f689, %f907, %f701;
	bra.uni 	BB2_36;

BB2_25:
	mov.f32 	%f914, 0f00000000;
	mov.f32 	%f916, 0f3F800000;
	setp.eq.s32	%p12, %r161, 4;
	@%p12 bra 	BB2_28;
	bra.uni 	BB2_26;

BB2_28:
	// inline asm
	call (%rd264), _optix_get_instance_inverse_transform_from_handle, (%rd140);
	// inline asm
	bra.uni 	BB2_29;

BB2_31:
	// inline asm
	call (%rd155), _optix_get_srt_motion_transform_from_handle, (%rd140);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd157, %rd155;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r175,%r176,%r177,%r178}, [%rd157];
	// inline asm
	mov.b32	{%rs5, %rs6}, %r177;
	add.s64 	%rd161, %rd155, 16;
	// inline asm
	cvta.to.global.u64 %rd160, %rd161;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r179,%r180,%r181,%r182}, [%rd160];
	// inline asm
	add.s64 	%rd164, %rd155, 32;
	// inline asm
	cvta.to.global.u64 %rd163, %rd164;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r183,%r184,%r185,%r186}, [%rd163];
	// inline asm
	add.s64 	%rd167, %rd155, 48;
	// inline asm
	cvta.to.global.u64 %rd166, %rd167;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r187,%r188,%r189,%r190}, [%rd166];
	// inline asm
	add.s64 	%rd170, %rd155, 64;
	// inline asm
	cvta.to.global.u64 %rd169, %rd170;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r191,%r192,%r193,%r194}, [%rd169];
	// inline asm
	add.s64 	%rd173, %rd155, 80;
	// inline asm
	cvta.to.global.u64 %rd172, %rd173;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r195,%r196,%r197,%r198}, [%rd172];
	// inline asm
	add.s64 	%rd176, %rd155, 96;
	// inline asm
	cvta.to.global.u64 %rd175, %rd176;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r199,%r200,%r201,%r202}, [%rd175];
	// inline asm
	add.s64 	%rd179, %rd155, 112;
	// inline asm
	cvta.to.global.u64 %rd178, %rd179;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r203,%r204,%r205,%r206}, [%rd178];
	// inline asm
	add.s64 	%rd182, %rd155, 128;
	// inline asm
	cvta.to.global.u64 %rd181, %rd182;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r207,%r208,%r209,%r210}, [%rd181];
	// inline asm
	add.s64 	%rd185, %rd155, 144;
	// inline asm
	cvta.to.global.u64 %rd184, %rd185;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r211,%r212,%r213,%r214}, [%rd184];
	// inline asm
	mov.b32 	 %f579, %r178;
	mov.b32 	 %f580, %r179;
	cvt.u32.u16	%r231, %rs5;
	add.s32 	%r232, %r231, -1;
	cvt.rn.f32.s32	%f581, %r232;
	sub.f32 	%f582, %f568, %f579;
	mul.f32 	%f583, %f582, %f581;
	sub.f32 	%f584, %f580, %f579;
	div.rn.f32 	%f585, %f583, %f584;
	min.f32 	%f586, %f581, %f585;
	mov.f32 	%f587, 0f00000000;
	max.f32 	%f588, %f587, %f586;
	cvt.rmi.f32.f32	%f589, %f588;
	cvt.rzi.s32.f32	%r233, %f589;
	cvt.s64.s32	%rd15, %r233;
	mul.wide.s32 	%rd199, %r233, 64;
	add.s64 	%rd188, %rd164, %rd199;
	// inline asm
	cvta.to.global.u64 %rd187, %rd188;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r215,%r216,%r217,%r218}, [%rd187];
	// inline asm
	mov.b32 	 %f895, %r215;
	mov.b32 	 %f896, %r216;
	mov.b32 	 %f897, %r217;
	add.s64 	%rd191, %rd188, 16;
	// inline asm
	cvta.to.global.u64 %rd190, %rd191;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r219,%r220,%r221,%r222}, [%rd190];
	// inline asm
	mov.b32 	 %f898, %r219;
	mov.b32 	 %f899, %r220;
	mov.b32 	 %f900, %r222;
	add.s64 	%rd194, %rd188, 32;
	// inline asm
	cvta.to.global.u64 %rd193, %rd194;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r223,%r224,%r225,%r226}, [%rd193];
	// inline asm
	sub.f32 	%f209, %f588, %f589;
	mov.b32 	 %f901, %r224;
	mov.b32 	 %f902, %r225;
	mov.b32 	 %f903, %r226;
	add.s64 	%rd197, %rd188, 48;
	// inline asm
	cvta.to.global.u64 %rd196, %rd197;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r227,%r228,%r229,%r230}, [%rd196];
	// inline asm
	mov.b32 	 %f904, %r227;
	setp.leu.f32	%p15, %f209, 0f00000000;
	@%p15 bra 	BB2_33;

	shl.b64 	%rd212, %rd15, 6;
	add.s64 	%rd213, %rd212, %rd155;
	add.s64 	%rd201, %rd213, 96;
	// inline asm
	cvta.to.global.u64 %rd200, %rd201;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r234,%r235,%r236,%r237}, [%rd200];
	// inline asm
	mov.b32 	 %f590, %r234;
	mov.b32 	 %f591, %r235;
	mov.b32 	 %f592, %r236;
	add.s64 	%rd204, %rd213, 112;
	// inline asm
	cvta.to.global.u64 %rd203, %rd204;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r238,%r239,%r240,%r241}, [%rd203];
	// inline asm
	mov.b32 	 %f593, %r238;
	mov.b32 	 %f594, %r239;
	mov.b32 	 %f595, %r241;
	add.s64 	%rd207, %rd213, 128;
	// inline asm
	cvta.to.global.u64 %rd206, %rd207;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r242,%r243,%r244,%r245}, [%rd206];
	// inline asm
	mov.b32 	 %f596, %r243;
	mov.b32 	 %f597, %r244;
	mov.b32 	 %f598, %r245;
	add.s64 	%rd210, %rd213, 144;
	// inline asm
	cvta.to.global.u64 %rd209, %rd210;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r246,%r247,%r248,%r249}, [%rd209];
	// inline asm
	mov.f32 	%f599, 0f3F800000;
	sub.f32 	%f600, %f599, %f209;
	mul.f32 	%f601, %f209, %f590;
	mul.f32 	%f602, %f209, %f591;
	mul.f32 	%f603, %f209, %f592;
	fma.rn.f32 	%f895, %f600, %f895, %f601;
	fma.rn.f32 	%f896, %f600, %f896, %f602;
	fma.rn.f32 	%f897, %f600, %f897, %f603;
	mul.f32 	%f604, %f209, %f593;
	mul.f32 	%f605, %f209, %f594;
	mul.f32 	%f606, %f209, %f595;
	fma.rn.f32 	%f898, %f600, %f898, %f604;
	fma.rn.f32 	%f899, %f600, %f899, %f605;
	fma.rn.f32 	%f900, %f600, %f900, %f606;
	mul.f32 	%f607, %f209, %f596;
	mul.f32 	%f608, %f209, %f597;
	mul.f32 	%f609, %f209, %f598;
	fma.rn.f32 	%f610, %f600, %f901, %f607;
	fma.rn.f32 	%f611, %f600, %f902, %f608;
	fma.rn.f32 	%f612, %f600, %f903, %f609;
	mov.b32 	 %f613, %r246;
	mul.f32 	%f614, %f209, %f613;
	fma.rn.f32 	%f615, %f600, %f904, %f614;
	mul.f32 	%f616, %f611, %f611;
	fma.rn.f32 	%f617, %f610, %f610, %f616;
	fma.rn.f32 	%f618, %f612, %f612, %f617;
	fma.rn.f32 	%f619, %f615, %f615, %f618;
	sqrt.rn.f32 	%f620, %f619;
	rcp.rn.f32 	%f621, %f620;
	mul.f32 	%f901, %f610, %f621;
	mul.f32 	%f902, %f611, %f621;
	mul.f32 	%f903, %f612, %f621;
	mul.f32 	%f904, %f615, %f621;

BB2_33:
	mul.f32 	%f622, %f902, %f902;
	fma.rn.f32 	%f623, %f901, %f901, %f622;
	fma.rn.f32 	%f624, %f903, %f903, %f623;
	fma.rn.f32 	%f625, %f904, %f904, %f624;
	rcp.rn.f32 	%f626, %f625;
	mul.f32 	%f627, %f901, %f626;
	mul.f32 	%f628, %f902, %f626;
	mul.f32 	%f629, %f903, %f626;
	mul.f32 	%f630, %f904, %f626;
	mul.f32 	%f631, %f901, %f627;
	mul.f32 	%f632, %f902, %f628;
	mul.f32 	%f633, %f903, %f629;
	mul.f32 	%f634, %f901, %f628;
	mul.f32 	%f635, %f903, %f630;
	mul.f32 	%f636, %f901, %f629;
	mul.f32 	%f637, %f902, %f630;
	mul.f32 	%f638, %f902, %f629;
	mul.f32 	%f639, %f901, %f630;
	sub.f32 	%f640, %f631, %f632;
	sub.f32 	%f641, %f640, %f633;
	fma.rn.f32 	%f642, %f904, %f630, %f641;
	sub.f32 	%f643, %f634, %f635;
	add.f32 	%f644, %f643, %f643;
	add.f32 	%f645, %f636, %f637;
	add.f32 	%f646, %f645, %f645;
	add.f32 	%f647, %f634, %f635;
	add.f32 	%f648, %f647, %f647;
	sub.f32 	%f649, %f632, %f631;
	sub.f32 	%f650, %f649, %f633;
	fma.rn.f32 	%f651, %f904, %f630, %f650;
	sub.f32 	%f652, %f638, %f639;
	add.f32 	%f653, %f652, %f652;
	sub.f32 	%f654, %f636, %f637;
	add.f32 	%f655, %f654, %f654;
	add.f32 	%f656, %f638, %f639;
	add.f32 	%f657, %f656, %f656;
	neg.f32 	%f658, %f631;
	sub.f32 	%f659, %f658, %f632;
	add.f32 	%f660, %f633, %f659;
	fma.rn.f32 	%f661, %f904, %f630, %f660;
	mul.f32 	%f662, %f897, %f642;
	fma.rn.f32 	%f663, %f899, %f644, %f662;
	fma.rn.f32 	%f913, %f900, %f646, %f663;
	mul.f32 	%f664, %f899, %f651;
	fma.rn.f32 	%f665, %f897, %f648, %f664;
	fma.rn.f32 	%f910, %f900, %f653, %f665;
	mul.f32 	%f666, %f899, %f657;
	fma.rn.f32 	%f667, %f897, %f655, %f666;
	fma.rn.f32 	%f907, %f900, %f661, %f667;
	mul.f32 	%f668, %f896, %f642;
	fma.rn.f32 	%f912, %f898, %f644, %f668;
	mul.f32 	%f669, %f898, %f651;
	fma.rn.f32 	%f909, %f896, %f648, %f669;
	mul.f32 	%f670, %f898, %f657;
	fma.rn.f32 	%f906, %f896, %f655, %f670;
	mul.f32 	%f911, %f895, %f642;
	mul.f32 	%f908, %f895, %f648;
	mul.f32 	%f905, %f895, %f655;

BB2_36:
	mul.f32 	%f702, %f906, %f910;
	mul.f32 	%f703, %f907, %f909;
	sub.f32 	%f704, %f703, %f702;
	mul.f32 	%f705, %f911, %f704;
	mul.f32 	%f706, %f905, %f910;
	mul.f32 	%f707, %f907, %f908;
	sub.f32 	%f708, %f707, %f706;
	mul.f32 	%f709, %f708, %f912;
	sub.f32 	%f710, %f705, %f709;
	mul.f32 	%f711, %f905, %f909;
	mul.f32 	%f712, %f906, %f908;
	sub.f32 	%f713, %f712, %f711;
	fma.rn.f32 	%f714, %f713, %f913, %f710;
	rcp.rn.f32 	%f715, %f714;
	mul.f32 	%f920, %f704, %f715;
	mul.f32 	%f716, %f907, %f912;
	mul.f32 	%f717, %f906, %f913;
	sub.f32 	%f718, %f717, %f716;
	mul.f32 	%f921, %f715, %f718;
	mul.f32 	%f719, %f909, %f913;
	mul.f32 	%f720, %f910, %f912;
	sub.f32 	%f721, %f720, %f719;
	mul.f32 	%f922, %f715, %f721;
	sub.f32 	%f722, %f706, %f707;
	mul.f32 	%f917, %f722, %f715;
	mul.f32 	%f723, %f905, %f913;
	mul.f32 	%f724, %f907, %f911;
	sub.f32 	%f725, %f724, %f723;
	mul.f32 	%f918, %f715, %f725;
	mul.f32 	%f726, %f910, %f911;
	mul.f32 	%f727, %f908, %f913;
	sub.f32 	%f728, %f727, %f726;
	mul.f32 	%f919, %f715, %f728;
	mul.f32 	%f914, %f713, %f715;
	mul.f32 	%f729, %f906, %f911;
	mul.f32 	%f730, %f905, %f912;
	sub.f32 	%f731, %f730, %f729;
	mul.f32 	%f915, %f731, %f715;
	mul.f32 	%f732, %f908, %f912;
	mul.f32 	%f733, %f909, %f911;
	sub.f32 	%f734, %f733, %f732;
	mul.f32 	%f916, %f734, %f715;
	bra.uni 	BB2_37;

BB2_26:
	setp.ne.s32	%p13, %r161, 1;
	mov.f32 	%f915, %f914;
	mov.f32 	%f917, %f914;
	mov.f32 	%f918, %f916;
	mov.f32 	%f919, %f914;
	mov.f32 	%f920, %f916;
	mov.f32 	%f921, %f914;
	mov.f32 	%f922, %f914;
	@%p13 bra 	BB2_37;

	// inline asm
	call (%rd142), _optix_get_static_transform_from_handle, (%rd140);
	// inline asm
	add.s64 	%rd264, %rd142, 64;

BB2_29:
	// inline asm
	cvta.to.global.u64 %rd146, %rd264;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r163,%r164,%r165,%r166}, [%rd146];
	// inline asm
	mov.b32 	 %f920, %r163;
	mov.b32 	 %f921, %r164;
	mov.b32 	 %f922, %r165;
	add.s64 	%rd150, %rd264, 16;
	// inline asm
	cvta.to.global.u64 %rd149, %rd150;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r167,%r168,%r169,%r170}, [%rd149];
	// inline asm
	mov.b32 	 %f917, %r167;
	mov.b32 	 %f918, %r168;
	mov.b32 	 %f919, %r169;
	add.s64 	%rd153, %rd264, 32;
	// inline asm
	cvta.to.global.u64 %rd152, %rd153;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r171,%r172,%r173,%r174}, [%rd152];
	// inline asm
	mov.b32 	 %f914, %r171;
	mov.b32 	 %f915, %r172;
	mov.b32 	 %f916, %r173;

BB2_37:
	setp.eq.s32	%p17, %r314, 0;
	@%p17 bra 	BB2_38;
	bra.uni 	BB2_39;

BB2_38:
	mov.f32 	%f894, %f914;
	mov.f32 	%f893, %f915;
	mov.f32 	%f892, %f916;
	mov.f32 	%f891, %f917;
	mov.f32 	%f890, %f918;
	mov.f32 	%f889, %f919;
	mov.f32 	%f888, %f920;
	mov.f32 	%f887, %f921;
	mov.f32 	%f886, %f922;
	bra.uni 	BB2_40;

BB2_39:
	mul.f32 	%f735, %f891, %f921;
	fma.rn.f32 	%f736, %f888, %f920, %f735;
	fma.rn.f32 	%f289, %f894, %f922, %f736;
	mul.f32 	%f737, %f890, %f921;
	fma.rn.f32 	%f738, %f887, %f920, %f737;
	fma.rn.f32 	%f290, %f893, %f922, %f738;
	mul.f32 	%f739, %f889, %f921;
	fma.rn.f32 	%f740, %f886, %f920, %f739;
	fma.rn.f32 	%f291, %f892, %f922, %f740;
	mul.f32 	%f741, %f891, %f918;
	fma.rn.f32 	%f742, %f888, %f917, %f741;
	fma.rn.f32 	%f292, %f894, %f919, %f742;
	mul.f32 	%f743, %f890, %f918;
	fma.rn.f32 	%f744, %f887, %f917, %f743;
	fma.rn.f32 	%f293, %f893, %f919, %f744;
	mul.f32 	%f745, %f889, %f918;
	fma.rn.f32 	%f746, %f886, %f917, %f745;
	fma.rn.f32 	%f294, %f892, %f919, %f746;
	mul.f32 	%f747, %f891, %f915;
	fma.rn.f32 	%f748, %f888, %f914, %f747;
	fma.rn.f32 	%f894, %f894, %f916, %f748;
	mul.f32 	%f749, %f890, %f915;
	fma.rn.f32 	%f750, %f887, %f914, %f749;
	fma.rn.f32 	%f893, %f893, %f916, %f750;
	mul.f32 	%f751, %f889, %f915;
	fma.rn.f32 	%f752, %f886, %f914, %f751;
	fma.rn.f32 	%f892, %f892, %f916, %f752;
	mov.f32 	%f891, %f292;
	mov.f32 	%f890, %f293;
	mov.f32 	%f889, %f294;
	mov.f32 	%f888, %f289;
	mov.f32 	%f887, %f290;
	mov.f32 	%f886, %f291;

BB2_40:
	add.s32 	%r314, %r314, 1;
	setp.lt.u32	%p18, %r314, %r8;
	@%p18 bra 	BB2_24;

	mul.f32 	%f753, %f566, %f887;
	fma.rn.f32 	%f754, %f565, %f888, %f753;
	fma.rn.f32 	%f932, %f934, %f886, %f754;
	mul.f32 	%f755, %f566, %f890;
	fma.rn.f32 	%f756, %f565, %f891, %f755;
	fma.rn.f32 	%f933, %f934, %f889, %f756;
	mul.f32 	%f757, %f566, %f893;
	fma.rn.f32 	%f758, %f565, %f894, %f757;
	fma.rn.f32 	%f934, %f934, %f892, %f758;
	bra.uni 	BB2_42;

BB2_22:
	mov.f32 	%f932, %f565;
	mov.f32 	%f933, %f566;

BB2_42:
	// inline asm
	call (%f759), _optix_get_ray_tmin, ();
	// inline asm
	fma.rn.f32 	%f762, %f932, %f759, %f885;
	fma.rn.f32 	%f763, %f933, %f759, %f884;
	fma.rn.f32 	%f764, %f934, %f759, %f883;
	ld.v4.f32 	{%f765, %f766, %f767, %f768}, [%rd1+80];
	ld.v4.f32 	{%f772, %f773, %f774, %f775}, [%rd1+32];
	fma.rn.f32 	%f777, %f762, %f772, %f765;
	fma.rn.f32 	%f779, %f762, %f773, %f766;
	fma.rn.f32 	%f781, %f762, %f774, %f767;
	ld.v4.f32 	{%f782, %f783, %f784, %f785}, [%rd1+48];
	fma.rn.f32 	%f787, %f763, %f782, %f777;
	fma.rn.f32 	%f789, %f763, %f783, %f779;
	fma.rn.f32 	%f791, %f763, %f784, %f781;
	ld.v4.f32 	{%f792, %f793, %f794, %f795}, [%rd1+64];
	fma.rn.f32 	%f797, %f764, %f792, %f787;
	fma.rn.f32 	%f799, %f764, %f793, %f789;
	fma.rn.f32 	%f801, %f764, %f794, %f791;
	mul.f32 	%f802, %f932, %f772;
	mul.f32 	%f803, %f932, %f773;
	mul.f32 	%f804, %f932, %f774;
	fma.rn.f32 	%f805, %f933, %f782, %f802;
	fma.rn.f32 	%f806, %f933, %f783, %f803;
	fma.rn.f32 	%f807, %f933, %f784, %f804;
	fma.rn.f32 	%f808, %f934, %f792, %f805;
	fma.rn.f32 	%f809, %f934, %f793, %f806;
	fma.rn.f32 	%f810, %f934, %f794, %f807;
	neg.f32 	%f811, %f801;
	div.rn.f32 	%f313, %f811, %f810;
	fma.rn.f32 	%f812, %f313, %f808, %f797;
	fma.rn.f32 	%f813, %f313, %f809, %f799;
	mul.f32 	%f814, %f813, %f813;
	fma.rn.f32 	%f815, %f812, %f812, %f814;
	setp.gtu.f32	%p19, %f815, 0f3F800000;
	@%p19 bra 	BB2_44;

	mov.u32 	%r310, 254;
	// inline asm
	call (%r309), _optix_report_intersection_0, (%f313, %r310);
	// inline asm

BB2_44:
	ret;
}

	// .globl	__closesthit__disk
.visible .entry __closesthit__disk(

)
{
	.reg .pred 	%p<21>;
	.reg .b16 	%rs<9>;
	.reg .f32 	%f<932>;
	.reg .b32 	%r<328>;
	.reg .b64 	%rd<266>;


	// inline asm
	call (%rd19), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.u64 	%rd2, [%rd19+8];
	// inline asm
	call (%f313), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f314), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f880), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%r8), _optix_get_transform_list_size, ();
	// inline asm
	setp.eq.s32	%p1, %r8, 0;
	@%p1 bra 	BB3_1;

	mov.u32 	%r326, 0;
	// inline asm
	call (%f316), _optix_get_ray_time, ();
	// inline asm

BB3_3:
	.pragma "nounroll";
	// inline asm
	call (%rd20), _optix_get_transform_list_handle, (%r326);
	// inline asm
	// inline asm
	call (%r11), _optix_get_transform_type_from_handle, (%rd20);
	// inline asm
	and.b32  	%r12, %r11, -2;
	setp.eq.s32	%p2, %r12, 2;
	@%p2 bra 	BB3_9;
	bra.uni 	BB3_4;

BB3_9:
	setp.eq.s32	%p5, %r11, 2;
	@%p5 bra 	BB3_13;
	bra.uni 	BB3_10;

BB3_13:
	// inline asm
	call (%rd94), _optix_get_matrix_motion_transform_from_handle, (%rd20);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd96, %rd94;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r100,%r101,%r102,%r103}, [%rd96];
	// inline asm
	mov.b32	{%rs3, %rs4}, %r102;
	add.s64 	%rd100, %rd94, 16;
	// inline asm
	cvta.to.global.u64 %rd99, %rd100;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r104,%r105,%r106,%r107}, [%rd99];
	// inline asm
	add.s64 	%rd103, %rd94, 32;
	// inline asm
	cvta.to.global.u64 %rd102, %rd103;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r108,%r109,%r110,%r111}, [%rd102];
	// inline asm
	add.s64 	%rd106, %rd94, 48;
	// inline asm
	cvta.to.global.u64 %rd105, %rd106;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r112,%r113,%r114,%r115}, [%rd105];
	// inline asm
	add.s64 	%rd109, %rd94, 64;
	// inline asm
	cvta.to.global.u64 %rd108, %rd109;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r116,%r117,%r118,%r119}, [%rd108];
	// inline asm
	add.s64 	%rd112, %rd94, 80;
	// inline asm
	cvta.to.global.u64 %rd111, %rd112;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r120,%r121,%r122,%r123}, [%rd111];
	// inline asm
	add.s64 	%rd115, %rd94, 96;
	// inline asm
	cvta.to.global.u64 %rd114, %rd115;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r124,%r125,%r126,%r127}, [%rd114];
	// inline asm
	add.s64 	%rd118, %rd94, 112;
	// inline asm
	cvta.to.global.u64 %rd117, %rd118;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r128,%r129,%r130,%r131}, [%rd117];
	// inline asm
	mov.b32 	 %f443, %r103;
	mov.b32 	 %f444, %r104;
	cvt.u32.u16	%r144, %rs3;
	add.s32 	%r145, %r144, -1;
	cvt.rn.f32.s32	%f445, %r145;
	sub.f32 	%f446, %f316, %f443;
	mul.f32 	%f447, %f446, %f445;
	sub.f32 	%f448, %f444, %f443;
	div.rn.f32 	%f449, %f447, %f448;
	min.f32 	%f450, %f445, %f449;
	mov.f32 	%f451, 0f00000000;
	max.f32 	%f452, %f451, %f450;
	cvt.rmi.f32.f32	%f453, %f452;
	cvt.rzi.s32.f32	%r146, %f453;
	mul.wide.s32 	%rd129, %r146, 48;
	add.s64 	%rd121, %rd103, %rd129;
	// inline asm
	cvta.to.global.u64 %rd120, %rd121;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r132,%r133,%r134,%r135}, [%rd120];
	// inline asm
	mov.b32 	 %f852, %r132;
	mov.b32 	 %f853, %r133;
	mov.b32 	 %f854, %r134;
	mov.b32 	 %f855, %r135;
	add.s64 	%rd124, %rd121, 16;
	// inline asm
	cvta.to.global.u64 %rd123, %rd124;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r136,%r137,%r138,%r139}, [%rd123];
	// inline asm
	mov.b32 	 %f848, %r136;
	mov.b32 	 %f849, %r137;
	mov.b32 	 %f850, %r138;
	mov.b32 	 %f851, %r139;
	add.s64 	%rd127, %rd121, 32;
	// inline asm
	cvta.to.global.u64 %rd126, %rd127;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r140,%r141,%r142,%r143}, [%rd126];
	// inline asm
	sub.f32 	%f98, %f452, %f453;
	mov.b32 	 %f844, %r140;
	mov.b32 	 %f845, %r141;
	mov.b32 	 %f846, %r142;
	mov.b32 	 %f847, %r143;
	setp.leu.f32	%p7, %f98, 0f00000000;
	@%p7 bra 	BB3_15;

	cvt.rmi.f32.f32	%f815, %f452;
	cvt.rzi.s32.f32	%r325, %f815;
	cvt.s64.s32	%rd263, %r325;
	mul.lo.s64 	%rd139, %rd263, 48;
	add.s64 	%rd140, %rd94, %rd139;
	add.s64 	%rd131, %rd140, 80;
	// inline asm
	cvta.to.global.u64 %rd130, %rd131;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r147,%r148,%r149,%r150}, [%rd130];
	// inline asm
	mov.b32 	 %f454, %r147;
	mov.b32 	 %f455, %r148;
	mov.b32 	 %f456, %r149;
	mov.b32 	 %f457, %r150;
	add.s64 	%rd134, %rd140, 96;
	// inline asm
	cvta.to.global.u64 %rd133, %rd134;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r151,%r152,%r153,%r154}, [%rd133];
	// inline asm
	mov.b32 	 %f458, %r151;
	mov.b32 	 %f459, %r152;
	mov.b32 	 %f460, %r153;
	mov.b32 	 %f461, %r154;
	add.s64 	%rd137, %rd140, 112;
	// inline asm
	cvta.to.global.u64 %rd136, %rd137;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r155,%r156,%r157,%r158}, [%rd136];
	// inline asm
	mov.f32 	%f462, 0f3F800000;
	sub.f32 	%f463, %f462, %f98;
	mul.f32 	%f464, %f98, %f454;
	mul.f32 	%f465, %f98, %f455;
	mul.f32 	%f466, %f98, %f456;
	mul.f32 	%f467, %f98, %f457;
	fma.rn.f32 	%f852, %f463, %f852, %f464;
	fma.rn.f32 	%f853, %f463, %f853, %f465;
	fma.rn.f32 	%f854, %f463, %f854, %f466;
	fma.rn.f32 	%f855, %f463, %f855, %f467;
	mul.f32 	%f468, %f98, %f458;
	mul.f32 	%f469, %f98, %f459;
	mul.f32 	%f470, %f98, %f460;
	mul.f32 	%f471, %f98, %f461;
	fma.rn.f32 	%f848, %f463, %f848, %f468;
	fma.rn.f32 	%f849, %f463, %f849, %f469;
	fma.rn.f32 	%f850, %f463, %f850, %f470;
	fma.rn.f32 	%f851, %f463, %f851, %f471;
	mov.b32 	 %f472, %r155;
	mov.b32 	 %f473, %r156;
	mov.b32 	 %f474, %r157;
	mov.b32 	 %f475, %r158;
	mul.f32 	%f476, %f98, %f472;
	mul.f32 	%f477, %f98, %f473;
	mul.f32 	%f478, %f98, %f474;
	mul.f32 	%f479, %f98, %f475;
	fma.rn.f32 	%f844, %f463, %f844, %f476;
	fma.rn.f32 	%f845, %f463, %f845, %f477;
	fma.rn.f32 	%f846, %f463, %f846, %f478;
	fma.rn.f32 	%f847, %f463, %f847, %f479;
	bra.uni 	BB3_15;

BB3_4:
	mov.f32 	%f856, 0f00000000;
	mov.f32 	%f858, 0f3F800000;
	setp.eq.s32	%p3, %r11, 4;
	@%p3 bra 	BB3_7;
	bra.uni 	BB3_5;

BB3_7:
	// inline asm
	call (%rd264), _optix_get_instance_inverse_transform_from_handle, (%rd20);
	// inline asm
	bra.uni 	BB3_8;

BB3_10:
	// inline asm
	call (%rd35), _optix_get_srt_motion_transform_from_handle, (%rd20);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd37, %rd35;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r25,%r26,%r27,%r28}, [%rd37];
	// inline asm
	mov.b32	{%rs1, %rs2}, %r27;
	add.s64 	%rd41, %rd35, 16;
	// inline asm
	cvta.to.global.u64 %rd40, %rd41;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r29,%r30,%r31,%r32}, [%rd40];
	// inline asm
	add.s64 	%rd44, %rd35, 32;
	// inline asm
	cvta.to.global.u64 %rd43, %rd44;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r33,%r34,%r35,%r36}, [%rd43];
	// inline asm
	add.s64 	%rd47, %rd35, 48;
	// inline asm
	cvta.to.global.u64 %rd46, %rd47;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r37,%r38,%r39,%r40}, [%rd46];
	// inline asm
	add.s64 	%rd50, %rd35, 64;
	// inline asm
	cvta.to.global.u64 %rd49, %rd50;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r41,%r42,%r43,%r44}, [%rd49];
	// inline asm
	add.s64 	%rd53, %rd35, 80;
	// inline asm
	cvta.to.global.u64 %rd52, %rd53;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r45,%r46,%r47,%r48}, [%rd52];
	// inline asm
	add.s64 	%rd56, %rd35, 96;
	// inline asm
	cvta.to.global.u64 %rd55, %rd56;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r49,%r50,%r51,%r52}, [%rd55];
	// inline asm
	add.s64 	%rd59, %rd35, 112;
	// inline asm
	cvta.to.global.u64 %rd58, %rd59;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r53,%r54,%r55,%r56}, [%rd58];
	// inline asm
	add.s64 	%rd62, %rd35, 128;
	// inline asm
	cvta.to.global.u64 %rd61, %rd62;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r57,%r58,%r59,%r60}, [%rd61];
	// inline asm
	add.s64 	%rd65, %rd35, 144;
	// inline asm
	cvta.to.global.u64 %rd64, %rd65;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r61,%r62,%r63,%r64}, [%rd64];
	// inline asm
	mov.b32 	 %f330, %r28;
	mov.b32 	 %f331, %r29;
	cvt.u32.u16	%r81, %rs1;
	add.s32 	%r82, %r81, -1;
	cvt.rn.f32.s32	%f332, %r82;
	sub.f32 	%f333, %f316, %f330;
	mul.f32 	%f334, %f333, %f332;
	sub.f32 	%f335, %f331, %f330;
	div.rn.f32 	%f336, %f334, %f335;
	min.f32 	%f337, %f332, %f336;
	mov.f32 	%f338, 0f00000000;
	max.f32 	%f339, %f338, %f337;
	cvt.rmi.f32.f32	%f340, %f339;
	cvt.rzi.s32.f32	%r83, %f340;
	mul.wide.s32 	%rd79, %r83, 64;
	add.s64 	%rd68, %rd44, %rd79;
	// inline asm
	cvta.to.global.u64 %rd67, %rd68;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r65,%r66,%r67,%r68}, [%rd67];
	// inline asm
	mov.b32 	 %f828, %r65;
	mov.b32 	 %f829, %r66;
	mov.b32 	 %f830, %r67;
	mov.b32 	 %f831, %r68;
	add.s64 	%rd71, %rd68, 16;
	// inline asm
	cvta.to.global.u64 %rd70, %rd71;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r69,%r70,%r71,%r72}, [%rd70];
	// inline asm
	mov.b32 	 %f832, %r69;
	mov.b32 	 %f833, %r70;
	mov.b32 	 %f834, %r71;
	mov.b32 	 %f835, %r72;
	add.s64 	%rd74, %rd68, 32;
	// inline asm
	cvta.to.global.u64 %rd73, %rd74;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r73,%r74,%r75,%r76}, [%rd73];
	// inline asm
	sub.f32 	%f37, %f339, %f340;
	mov.b32 	 %f836, %r73;
	mov.b32 	 %f837, %r74;
	mov.b32 	 %f838, %r75;
	mov.b32 	 %f839, %r76;
	add.s64 	%rd77, %rd68, 48;
	// inline asm
	cvta.to.global.u64 %rd76, %rd77;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r77,%r78,%r79,%r80}, [%rd76];
	// inline asm
	mov.b32 	 %f840, %r77;
	mov.b32 	 %f841, %r78;
	mov.b32 	 %f842, %r79;
	mov.b32 	 %f843, %r80;
	setp.leu.f32	%p6, %f37, 0f00000000;
	@%p6 bra 	BB3_12;

	cvt.rmi.f32.f32	%f814, %f339;
	cvt.rzi.s32.f32	%r324, %f814;
	cvt.s64.s32	%rd262, %r324;
	shl.b64 	%rd92, %rd262, 6;
	add.s64 	%rd93, %rd92, %rd35;
	add.s64 	%rd81, %rd93, 96;
	// inline asm
	cvta.to.global.u64 %rd80, %rd81;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r84,%r85,%r86,%r87}, [%rd80];
	// inline asm
	mov.b32 	 %f341, %r84;
	mov.b32 	 %f342, %r85;
	mov.b32 	 %f343, %r86;
	mov.b32 	 %f344, %r87;
	add.s64 	%rd84, %rd93, 112;
	// inline asm
	cvta.to.global.u64 %rd83, %rd84;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r88,%r89,%r90,%r91}, [%rd83];
	// inline asm
	mov.b32 	 %f345, %r88;
	mov.b32 	 %f346, %r89;
	mov.b32 	 %f347, %r90;
	mov.b32 	 %f348, %r91;
	add.s64 	%rd87, %rd93, 128;
	// inline asm
	cvta.to.global.u64 %rd86, %rd87;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r92,%r93,%r94,%r95}, [%rd86];
	// inline asm
	mov.b32 	 %f349, %r92;
	mov.b32 	 %f350, %r93;
	mov.b32 	 %f351, %r94;
	mov.b32 	 %f352, %r95;
	add.s64 	%rd90, %rd93, 144;
	// inline asm
	cvta.to.global.u64 %rd89, %rd90;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r96,%r97,%r98,%r99}, [%rd89];
	// inline asm
	mov.f32 	%f353, 0f3F800000;
	sub.f32 	%f354, %f353, %f37;
	mul.f32 	%f355, %f37, %f341;
	mul.f32 	%f356, %f37, %f342;
	mul.f32 	%f357, %f37, %f343;
	mul.f32 	%f358, %f37, %f344;
	fma.rn.f32 	%f828, %f354, %f828, %f355;
	fma.rn.f32 	%f829, %f354, %f829, %f356;
	fma.rn.f32 	%f830, %f354, %f830, %f357;
	fma.rn.f32 	%f831, %f354, %f831, %f358;
	mul.f32 	%f359, %f37, %f345;
	mul.f32 	%f360, %f37, %f346;
	mul.f32 	%f361, %f37, %f347;
	mul.f32 	%f362, %f37, %f348;
	fma.rn.f32 	%f832, %f354, %f832, %f359;
	fma.rn.f32 	%f833, %f354, %f833, %f360;
	fma.rn.f32 	%f834, %f354, %f834, %f361;
	fma.rn.f32 	%f835, %f354, %f835, %f362;
	mul.f32 	%f363, %f37, %f349;
	mul.f32 	%f364, %f37, %f350;
	mul.f32 	%f365, %f37, %f351;
	mul.f32 	%f366, %f37, %f352;
	fma.rn.f32 	%f836, %f354, %f836, %f363;
	fma.rn.f32 	%f367, %f354, %f837, %f364;
	fma.rn.f32 	%f368, %f354, %f838, %f365;
	fma.rn.f32 	%f369, %f354, %f839, %f366;
	mov.b32 	 %f370, %r96;
	mov.b32 	 %f371, %r97;
	mov.b32 	 %f372, %r98;
	mov.b32 	 %f373, %r99;
	mul.f32 	%f374, %f37, %f370;
	mul.f32 	%f375, %f37, %f371;
	mul.f32 	%f376, %f37, %f372;
	mul.f32 	%f377, %f37, %f373;
	fma.rn.f32 	%f378, %f354, %f840, %f374;
	fma.rn.f32 	%f841, %f354, %f841, %f375;
	fma.rn.f32 	%f842, %f354, %f842, %f376;
	fma.rn.f32 	%f843, %f354, %f843, %f377;
	mul.f32 	%f379, %f368, %f368;
	fma.rn.f32 	%f380, %f367, %f367, %f379;
	fma.rn.f32 	%f381, %f369, %f369, %f380;
	fma.rn.f32 	%f382, %f378, %f378, %f381;
	sqrt.rn.f32 	%f383, %f382;
	rcp.rn.f32 	%f384, %f383;
	mul.f32 	%f837, %f367, %f384;
	mul.f32 	%f838, %f368, %f384;
	mul.f32 	%f839, %f369, %f384;
	mul.f32 	%f840, %f378, %f384;

BB3_12:
	mul.f32 	%f385, %f838, %f838;
	fma.rn.f32 	%f386, %f837, %f837, %f385;
	fma.rn.f32 	%f387, %f839, %f839, %f386;
	fma.rn.f32 	%f388, %f840, %f840, %f387;
	rcp.rn.f32 	%f389, %f388;
	mul.f32 	%f390, %f837, %f389;
	mul.f32 	%f391, %f838, %f389;
	mul.f32 	%f392, %f839, %f389;
	mul.f32 	%f393, %f840, %f389;
	mul.f32 	%f394, %f837, %f390;
	mul.f32 	%f395, %f838, %f391;
	mul.f32 	%f396, %f839, %f392;
	mul.f32 	%f397, %f837, %f391;
	mul.f32 	%f398, %f839, %f393;
	mul.f32 	%f399, %f837, %f392;
	mul.f32 	%f400, %f838, %f393;
	mul.f32 	%f401, %f838, %f392;
	mul.f32 	%f402, %f837, %f393;
	sub.f32 	%f403, %f394, %f395;
	sub.f32 	%f404, %f403, %f396;
	fma.rn.f32 	%f405, %f840, %f393, %f404;
	sub.f32 	%f406, %f397, %f398;
	add.f32 	%f407, %f406, %f406;
	add.f32 	%f408, %f399, %f400;
	add.f32 	%f409, %f408, %f408;
	add.f32 	%f410, %f397, %f398;
	add.f32 	%f411, %f410, %f410;
	sub.f32 	%f412, %f395, %f394;
	sub.f32 	%f413, %f412, %f396;
	fma.rn.f32 	%f414, %f840, %f393, %f413;
	sub.f32 	%f415, %f401, %f402;
	add.f32 	%f416, %f415, %f415;
	sub.f32 	%f417, %f399, %f400;
	add.f32 	%f418, %f417, %f417;
	add.f32 	%f419, %f401, %f402;
	add.f32 	%f420, %f419, %f419;
	neg.f32 	%f421, %f394;
	sub.f32 	%f422, %f421, %f395;
	add.f32 	%f423, %f396, %f422;
	fma.rn.f32 	%f424, %f840, %f393, %f423;
	mul.f32 	%f425, %f831, %f405;
	fma.rn.f32 	%f426, %f834, %f407, %f425;
	fma.rn.f32 	%f427, %f836, %f409, %f426;
	add.f32 	%f855, %f841, %f427;
	mul.f32 	%f428, %f834, %f414;
	fma.rn.f32 	%f429, %f831, %f411, %f428;
	fma.rn.f32 	%f430, %f836, %f416, %f429;
	add.f32 	%f851, %f842, %f430;
	mul.f32 	%f431, %f834, %f420;
	fma.rn.f32 	%f432, %f831, %f418, %f431;
	fma.rn.f32 	%f433, %f836, %f424, %f432;
	add.f32 	%f847, %f843, %f433;
	mul.f32 	%f434, %f830, %f405;
	fma.rn.f32 	%f435, %f833, %f407, %f434;
	fma.rn.f32 	%f854, %f835, %f409, %f435;
	mul.f32 	%f436, %f833, %f414;
	fma.rn.f32 	%f437, %f830, %f411, %f436;
	fma.rn.f32 	%f850, %f835, %f416, %f437;
	mul.f32 	%f438, %f833, %f420;
	fma.rn.f32 	%f439, %f830, %f418, %f438;
	fma.rn.f32 	%f846, %f835, %f424, %f439;
	mul.f32 	%f440, %f829, %f405;
	fma.rn.f32 	%f853, %f832, %f407, %f440;
	mul.f32 	%f441, %f832, %f414;
	fma.rn.f32 	%f849, %f829, %f411, %f441;
	mul.f32 	%f442, %f832, %f420;
	fma.rn.f32 	%f845, %f829, %f418, %f442;
	mul.f32 	%f852, %f828, %f405;
	mul.f32 	%f848, %f828, %f411;
	mul.f32 	%f844, %f828, %f418;

BB3_15:
	mul.f32 	%f480, %f845, %f850;
	mul.f32 	%f481, %f846, %f849;
	sub.f32 	%f482, %f481, %f480;
	mul.f32 	%f483, %f852, %f482;
	mul.f32 	%f484, %f844, %f850;
	mul.f32 	%f485, %f846, %f848;
	sub.f32 	%f486, %f485, %f484;
	mul.f32 	%f487, %f486, %f853;
	sub.f32 	%f488, %f483, %f487;
	mul.f32 	%f489, %f844, %f849;
	mul.f32 	%f490, %f845, %f848;
	sub.f32 	%f491, %f490, %f489;
	fma.rn.f32 	%f492, %f491, %f854, %f488;
	rcp.rn.f32 	%f493, %f492;
	mul.f32 	%f864, %f482, %f493;
	mul.f32 	%f494, %f846, %f853;
	mul.f32 	%f495, %f845, %f854;
	sub.f32 	%f496, %f495, %f494;
	mul.f32 	%f865, %f493, %f496;
	mul.f32 	%f497, %f849, %f854;
	mul.f32 	%f498, %f850, %f853;
	sub.f32 	%f499, %f498, %f497;
	mul.f32 	%f866, %f493, %f499;
	sub.f32 	%f500, %f484, %f485;
	mul.f32 	%f860, %f500, %f493;
	mul.f32 	%f501, %f844, %f854;
	mul.f32 	%f502, %f846, %f852;
	sub.f32 	%f503, %f502, %f501;
	mul.f32 	%f861, %f493, %f503;
	mul.f32 	%f504, %f850, %f852;
	mul.f32 	%f505, %f848, %f854;
	sub.f32 	%f506, %f505, %f504;
	mul.f32 	%f862, %f493, %f506;
	mul.f32 	%f856, %f491, %f493;
	mul.f32 	%f507, %f845, %f852;
	mul.f32 	%f508, %f844, %f853;
	sub.f32 	%f509, %f508, %f507;
	mul.f32 	%f857, %f509, %f493;
	mul.f32 	%f510, %f848, %f853;
	mul.f32 	%f511, %f849, %f852;
	sub.f32 	%f512, %f511, %f510;
	mul.f32 	%f858, %f512, %f493;
	mul.f32 	%f513, %f855, %f864;
	neg.f32 	%f514, %f513;
	mul.f32 	%f515, %f851, %f865;
	sub.f32 	%f516, %f514, %f515;
	mul.f32 	%f517, %f847, %f866;
	sub.f32 	%f867, %f516, %f517;
	mul.f32 	%f518, %f855, %f860;
	neg.f32 	%f519, %f518;
	mul.f32 	%f520, %f851, %f861;
	sub.f32 	%f521, %f519, %f520;
	mul.f32 	%f522, %f847, %f862;
	sub.f32 	%f863, %f521, %f522;
	mul.f32 	%f523, %f855, %f856;
	neg.f32 	%f524, %f523;
	mul.f32 	%f525, %f851, %f857;
	sub.f32 	%f526, %f524, %f525;
	mul.f32 	%f527, %f847, %f858;
	sub.f32 	%f859, %f526, %f527;
	bra.uni 	BB3_16;

BB3_5:
	setp.ne.s32	%p4, %r11, 1;
	mov.f32 	%f857, %f856;
	mov.f32 	%f859, %f856;
	mov.f32 	%f860, %f856;
	mov.f32 	%f861, %f858;
	mov.f32 	%f862, %f856;
	mov.f32 	%f863, %f856;
	mov.f32 	%f864, %f858;
	mov.f32 	%f865, %f856;
	mov.f32 	%f866, %f856;
	mov.f32 	%f867, %f856;
	@%p4 bra 	BB3_16;

	// inline asm
	call (%rd22), _optix_get_static_transform_from_handle, (%rd20);
	// inline asm
	add.s64 	%rd264, %rd22, 64;

BB3_8:
	// inline asm
	cvta.to.global.u64 %rd26, %rd264;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r13,%r14,%r15,%r16}, [%rd26];
	// inline asm
	mov.b32 	 %f864, %r13;
	mov.b32 	 %f865, %r14;
	mov.b32 	 %f866, %r15;
	mov.b32 	 %f867, %r16;
	add.s64 	%rd30, %rd264, 16;
	// inline asm
	cvta.to.global.u64 %rd29, %rd30;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r17,%r18,%r19,%r20}, [%rd29];
	// inline asm
	mov.b32 	 %f860, %r17;
	mov.b32 	 %f861, %r18;
	mov.b32 	 %f862, %r19;
	mov.b32 	 %f863, %r20;
	add.s64 	%rd33, %rd264, 32;
	// inline asm
	cvta.to.global.u64 %rd32, %rd33;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r21,%r22,%r23,%r24}, [%rd32];
	// inline asm
	mov.b32 	 %f856, %r21;
	mov.b32 	 %f857, %r22;
	mov.b32 	 %f858, %r23;
	mov.b32 	 %f859, %r24;

BB3_16:
	setp.eq.s32	%p8, %r326, 0;
	@%p8 bra 	BB3_17;
	bra.uni 	BB3_18;

BB3_17:
	mov.f32 	%f827, %f867;
	mov.f32 	%f826, %f866;
	mov.f32 	%f825, %f865;
	mov.f32 	%f824, %f864;
	mov.f32 	%f823, %f863;
	mov.f32 	%f822, %f862;
	mov.f32 	%f821, %f861;
	mov.f32 	%f820, %f860;
	mov.f32 	%f819, %f859;
	mov.f32 	%f818, %f858;
	mov.f32 	%f817, %f857;
	mov.f32 	%f816, %f856;
	bra.uni 	BB3_19;

BB3_18:
	mul.f32 	%f528, %f820, %f865;
	fma.rn.f32 	%f529, %f824, %f864, %f528;
	fma.rn.f32 	%f151, %f816, %f866, %f529;
	mul.f32 	%f530, %f821, %f865;
	fma.rn.f32 	%f531, %f825, %f864, %f530;
	fma.rn.f32 	%f152, %f817, %f866, %f531;
	mul.f32 	%f532, %f822, %f865;
	fma.rn.f32 	%f533, %f826, %f864, %f532;
	fma.rn.f32 	%f153, %f818, %f866, %f533;
	mul.f32 	%f534, %f823, %f865;
	fma.rn.f32 	%f535, %f827, %f864, %f534;
	fma.rn.f32 	%f536, %f819, %f866, %f535;
	add.f32 	%f154, %f867, %f536;
	mul.f32 	%f537, %f820, %f861;
	fma.rn.f32 	%f538, %f824, %f860, %f537;
	fma.rn.f32 	%f155, %f816, %f862, %f538;
	mul.f32 	%f539, %f821, %f861;
	fma.rn.f32 	%f540, %f825, %f860, %f539;
	fma.rn.f32 	%f156, %f817, %f862, %f540;
	mul.f32 	%f541, %f822, %f861;
	fma.rn.f32 	%f542, %f826, %f860, %f541;
	fma.rn.f32 	%f157, %f818, %f862, %f542;
	mul.f32 	%f543, %f823, %f861;
	fma.rn.f32 	%f544, %f827, %f860, %f543;
	fma.rn.f32 	%f545, %f819, %f862, %f544;
	add.f32 	%f158, %f863, %f545;
	mul.f32 	%f546, %f820, %f857;
	fma.rn.f32 	%f547, %f824, %f856, %f546;
	fma.rn.f32 	%f816, %f816, %f858, %f547;
	mul.f32 	%f548, %f821, %f857;
	fma.rn.f32 	%f549, %f825, %f856, %f548;
	fma.rn.f32 	%f817, %f817, %f858, %f549;
	mul.f32 	%f550, %f822, %f857;
	fma.rn.f32 	%f551, %f826, %f856, %f550;
	fma.rn.f32 	%f818, %f818, %f858, %f551;
	mul.f32 	%f552, %f823, %f857;
	fma.rn.f32 	%f553, %f827, %f856, %f552;
	fma.rn.f32 	%f554, %f819, %f858, %f553;
	add.f32 	%f819, %f859, %f554;
	mov.f32 	%f827, %f154;
	mov.f32 	%f826, %f153;
	mov.f32 	%f825, %f152;
	mov.f32 	%f824, %f151;
	mov.f32 	%f823, %f158;
	mov.f32 	%f822, %f157;
	mov.f32 	%f821, %f156;
	mov.f32 	%f820, %f155;

BB3_19:
	add.s32 	%r326, %r326, 1;
	setp.lt.u32	%p9, %r326, %r8;
	@%p9 bra 	BB3_3;

	mul.f32 	%f555, %f313, %f824;
	fma.rn.f32 	%f556, %f314, %f825, %f555;
	fma.rn.f32 	%f557, %f880, %f826, %f556;
	add.f32 	%f882, %f827, %f557;
	mul.f32 	%f558, %f313, %f820;
	fma.rn.f32 	%f559, %f314, %f821, %f558;
	fma.rn.f32 	%f560, %f880, %f822, %f559;
	add.f32 	%f881, %f823, %f560;
	mul.f32 	%f561, %f313, %f816;
	fma.rn.f32 	%f562, %f314, %f817, %f561;
	fma.rn.f32 	%f563, %f880, %f818, %f562;
	add.f32 	%f880, %f819, %f563;
	bra.uni 	BB3_21;

BB3_1:
	mov.f32 	%f881, %f314;
	mov.f32 	%f882, %f313;

BB3_21:
	setp.eq.s32	%p20, %r8, 0;
	// inline asm
	call (%f564), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f565), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f931), _optix_get_world_ray_direction_z, ();
	// inline asm
	@%p20 bra 	BB3_22;

	mov.u32 	%r327, 0;
	// inline asm
	call (%f567), _optix_get_ray_time, ();
	// inline asm

BB3_24:
	.pragma "nounroll";
	// inline asm
	call (%rd141), _optix_get_transform_list_handle, (%r327);
	// inline asm
	// inline asm
	call (%r161), _optix_get_transform_type_from_handle, (%rd141);
	// inline asm
	and.b32  	%r162, %r161, -2;
	setp.eq.s32	%p11, %r162, 2;
	@%p11 bra 	BB3_30;
	bra.uni 	BB3_25;

BB3_30:
	setp.eq.s32	%p14, %r161, 2;
	@%p14 bra 	BB3_34;
	bra.uni 	BB3_31;

BB3_34:
	// inline asm
	call (%rd215), _optix_get_matrix_motion_transform_from_handle, (%rd141);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd217, %rd215;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r250,%r251,%r252,%r253}, [%rd217];
	// inline asm
	mov.b32	{%rs7, %rs8}, %r252;
	add.s64 	%rd221, %rd215, 16;
	// inline asm
	cvta.to.global.u64 %rd220, %rd221;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r254,%r255,%r256,%r257}, [%rd220];
	// inline asm
	add.s64 	%rd224, %rd215, 32;
	// inline asm
	cvta.to.global.u64 %rd223, %rd224;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r258,%r259,%r260,%r261}, [%rd223];
	// inline asm
	add.s64 	%rd227, %rd215, 48;
	// inline asm
	cvta.to.global.u64 %rd226, %rd227;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r262,%r263,%r264,%r265}, [%rd226];
	// inline asm
	add.s64 	%rd230, %rd215, 64;
	// inline asm
	cvta.to.global.u64 %rd229, %rd230;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r266,%r267,%r268,%r269}, [%rd229];
	// inline asm
	add.s64 	%rd233, %rd215, 80;
	// inline asm
	cvta.to.global.u64 %rd232, %rd233;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r270,%r271,%r272,%r273}, [%rd232];
	// inline asm
	add.s64 	%rd236, %rd215, 96;
	// inline asm
	cvta.to.global.u64 %rd235, %rd236;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r274,%r275,%r276,%r277}, [%rd235];
	// inline asm
	add.s64 	%rd239, %rd215, 112;
	// inline asm
	cvta.to.global.u64 %rd238, %rd239;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r278,%r279,%r280,%r281}, [%rd238];
	// inline asm
	mov.b32 	 %f670, %r253;
	mov.b32 	 %f671, %r254;
	cvt.u32.u16	%r294, %rs7;
	add.s32 	%r295, %r294, -1;
	cvt.rn.f32.s32	%f672, %r295;
	sub.f32 	%f673, %f567, %f670;
	mul.f32 	%f674, %f673, %f672;
	sub.f32 	%f675, %f671, %f670;
	div.rn.f32 	%f676, %f674, %f675;
	min.f32 	%f677, %f672, %f676;
	mov.f32 	%f678, 0f00000000;
	max.f32 	%f679, %f678, %f677;
	cvt.rmi.f32.f32	%f680, %f679;
	cvt.rzi.s32.f32	%r296, %f680;
	cvt.s64.s32	%rd18, %r296;
	mul.wide.s32 	%rd250, %r296, 48;
	add.s64 	%rd242, %rd224, %rd250;
	// inline asm
	cvta.to.global.u64 %rd241, %rd242;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r282,%r283,%r284,%r285}, [%rd241];
	// inline asm
	mov.b32 	 %f908, %r282;
	mov.b32 	 %f909, %r283;
	mov.b32 	 %f910, %r284;
	add.s64 	%rd245, %rd242, 16;
	// inline asm
	cvta.to.global.u64 %rd244, %rd245;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r286,%r287,%r288,%r289}, [%rd244];
	// inline asm
	mov.b32 	 %f905, %r286;
	mov.b32 	 %f906, %r287;
	mov.b32 	 %f907, %r288;
	add.s64 	%rd248, %rd242, 32;
	// inline asm
	cvta.to.global.u64 %rd247, %rd248;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r290,%r291,%r292,%r293}, [%rd247];
	// inline asm
	sub.f32 	%f249, %f679, %f680;
	mov.b32 	 %f902, %r290;
	mov.b32 	 %f903, %r291;
	mov.b32 	 %f904, %r292;
	setp.leu.f32	%p16, %f249, 0f00000000;
	@%p16 bra 	BB3_36;

	mul.lo.s64 	%rd260, %rd18, 48;
	add.s64 	%rd261, %rd215, %rd260;
	add.s64 	%rd252, %rd261, 80;
	// inline asm
	cvta.to.global.u64 %rd251, %rd252;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r297,%r298,%r299,%r300}, [%rd251];
	// inline asm
	mov.b32 	 %f681, %r297;
	mov.b32 	 %f682, %r298;
	mov.b32 	 %f683, %r299;
	add.s64 	%rd255, %rd261, 96;
	// inline asm
	cvta.to.global.u64 %rd254, %rd255;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r301,%r302,%r303,%r304}, [%rd254];
	// inline asm
	mov.b32 	 %f684, %r301;
	mov.b32 	 %f685, %r302;
	mov.b32 	 %f686, %r303;
	add.s64 	%rd258, %rd261, 112;
	// inline asm
	cvta.to.global.u64 %rd257, %rd258;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r305,%r306,%r307,%r308}, [%rd257];
	// inline asm
	mov.f32 	%f687, 0f3F800000;
	sub.f32 	%f688, %f687, %f249;
	mul.f32 	%f689, %f249, %f681;
	mul.f32 	%f690, %f249, %f682;
	mul.f32 	%f691, %f249, %f683;
	fma.rn.f32 	%f908, %f688, %f908, %f689;
	fma.rn.f32 	%f909, %f688, %f909, %f690;
	fma.rn.f32 	%f910, %f688, %f910, %f691;
	mul.f32 	%f692, %f249, %f684;
	mul.f32 	%f693, %f249, %f685;
	mul.f32 	%f694, %f249, %f686;
	fma.rn.f32 	%f905, %f688, %f905, %f692;
	fma.rn.f32 	%f906, %f688, %f906, %f693;
	fma.rn.f32 	%f907, %f688, %f907, %f694;
	mov.b32 	 %f695, %r305;
	mov.b32 	 %f696, %r306;
	mov.b32 	 %f697, %r307;
	mul.f32 	%f698, %f249, %f695;
	mul.f32 	%f699, %f249, %f696;
	mul.f32 	%f700, %f249, %f697;
	fma.rn.f32 	%f902, %f688, %f902, %f698;
	fma.rn.f32 	%f903, %f688, %f903, %f699;
	fma.rn.f32 	%f904, %f688, %f904, %f700;
	bra.uni 	BB3_36;

BB3_25:
	mov.f32 	%f911, 0f00000000;
	mov.f32 	%f913, 0f3F800000;
	setp.eq.s32	%p12, %r161, 4;
	@%p12 bra 	BB3_28;
	bra.uni 	BB3_26;

BB3_28:
	// inline asm
	call (%rd265), _optix_get_instance_inverse_transform_from_handle, (%rd141);
	// inline asm
	bra.uni 	BB3_29;

BB3_31:
	// inline asm
	call (%rd156), _optix_get_srt_motion_transform_from_handle, (%rd141);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd158, %rd156;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r175,%r176,%r177,%r178}, [%rd158];
	// inline asm
	mov.b32	{%rs5, %rs6}, %r177;
	add.s64 	%rd162, %rd156, 16;
	// inline asm
	cvta.to.global.u64 %rd161, %rd162;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r179,%r180,%r181,%r182}, [%rd161];
	// inline asm
	add.s64 	%rd165, %rd156, 32;
	// inline asm
	cvta.to.global.u64 %rd164, %rd165;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r183,%r184,%r185,%r186}, [%rd164];
	// inline asm
	add.s64 	%rd168, %rd156, 48;
	// inline asm
	cvta.to.global.u64 %rd167, %rd168;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r187,%r188,%r189,%r190}, [%rd167];
	// inline asm
	add.s64 	%rd171, %rd156, 64;
	// inline asm
	cvta.to.global.u64 %rd170, %rd171;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r191,%r192,%r193,%r194}, [%rd170];
	// inline asm
	add.s64 	%rd174, %rd156, 80;
	// inline asm
	cvta.to.global.u64 %rd173, %rd174;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r195,%r196,%r197,%r198}, [%rd173];
	// inline asm
	add.s64 	%rd177, %rd156, 96;
	// inline asm
	cvta.to.global.u64 %rd176, %rd177;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r199,%r200,%r201,%r202}, [%rd176];
	// inline asm
	add.s64 	%rd180, %rd156, 112;
	// inline asm
	cvta.to.global.u64 %rd179, %rd180;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r203,%r204,%r205,%r206}, [%rd179];
	// inline asm
	add.s64 	%rd183, %rd156, 128;
	// inline asm
	cvta.to.global.u64 %rd182, %rd183;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r207,%r208,%r209,%r210}, [%rd182];
	// inline asm
	add.s64 	%rd186, %rd156, 144;
	// inline asm
	cvta.to.global.u64 %rd185, %rd186;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r211,%r212,%r213,%r214}, [%rd185];
	// inline asm
	mov.b32 	 %f578, %r178;
	mov.b32 	 %f579, %r179;
	cvt.u32.u16	%r231, %rs5;
	add.s32 	%r232, %r231, -1;
	cvt.rn.f32.s32	%f580, %r232;
	sub.f32 	%f581, %f567, %f578;
	mul.f32 	%f582, %f581, %f580;
	sub.f32 	%f583, %f579, %f578;
	div.rn.f32 	%f584, %f582, %f583;
	min.f32 	%f585, %f580, %f584;
	mov.f32 	%f586, 0f00000000;
	max.f32 	%f587, %f586, %f585;
	cvt.rmi.f32.f32	%f588, %f587;
	cvt.rzi.s32.f32	%r233, %f588;
	cvt.s64.s32	%rd16, %r233;
	mul.wide.s32 	%rd200, %r233, 64;
	add.s64 	%rd189, %rd165, %rd200;
	// inline asm
	cvta.to.global.u64 %rd188, %rd189;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r215,%r216,%r217,%r218}, [%rd188];
	// inline asm
	mov.b32 	 %f892, %r215;
	mov.b32 	 %f893, %r216;
	mov.b32 	 %f894, %r217;
	add.s64 	%rd192, %rd189, 16;
	// inline asm
	cvta.to.global.u64 %rd191, %rd192;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r219,%r220,%r221,%r222}, [%rd191];
	// inline asm
	mov.b32 	 %f895, %r219;
	mov.b32 	 %f896, %r220;
	mov.b32 	 %f897, %r222;
	add.s64 	%rd195, %rd189, 32;
	// inline asm
	cvta.to.global.u64 %rd194, %rd195;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r223,%r224,%r225,%r226}, [%rd194];
	// inline asm
	sub.f32 	%f209, %f587, %f588;
	mov.b32 	 %f898, %r224;
	mov.b32 	 %f899, %r225;
	mov.b32 	 %f900, %r226;
	add.s64 	%rd198, %rd189, 48;
	// inline asm
	cvta.to.global.u64 %rd197, %rd198;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r227,%r228,%r229,%r230}, [%rd197];
	// inline asm
	mov.b32 	 %f901, %r227;
	setp.leu.f32	%p15, %f209, 0f00000000;
	@%p15 bra 	BB3_33;

	shl.b64 	%rd213, %rd16, 6;
	add.s64 	%rd214, %rd213, %rd156;
	add.s64 	%rd202, %rd214, 96;
	// inline asm
	cvta.to.global.u64 %rd201, %rd202;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r234,%r235,%r236,%r237}, [%rd201];
	// inline asm
	mov.b32 	 %f589, %r234;
	mov.b32 	 %f590, %r235;
	mov.b32 	 %f591, %r236;
	add.s64 	%rd205, %rd214, 112;
	// inline asm
	cvta.to.global.u64 %rd204, %rd205;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r238,%r239,%r240,%r241}, [%rd204];
	// inline asm
	mov.b32 	 %f592, %r238;
	mov.b32 	 %f593, %r239;
	mov.b32 	 %f594, %r241;
	add.s64 	%rd208, %rd214, 128;
	// inline asm
	cvta.to.global.u64 %rd207, %rd208;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r242,%r243,%r244,%r245}, [%rd207];
	// inline asm
	mov.b32 	 %f595, %r243;
	mov.b32 	 %f596, %r244;
	mov.b32 	 %f597, %r245;
	add.s64 	%rd211, %rd214, 144;
	// inline asm
	cvta.to.global.u64 %rd210, %rd211;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r246,%r247,%r248,%r249}, [%rd210];
	// inline asm
	mov.f32 	%f598, 0f3F800000;
	sub.f32 	%f599, %f598, %f209;
	mul.f32 	%f600, %f209, %f589;
	mul.f32 	%f601, %f209, %f590;
	mul.f32 	%f602, %f209, %f591;
	fma.rn.f32 	%f892, %f599, %f892, %f600;
	fma.rn.f32 	%f893, %f599, %f893, %f601;
	fma.rn.f32 	%f894, %f599, %f894, %f602;
	mul.f32 	%f603, %f209, %f592;
	mul.f32 	%f604, %f209, %f593;
	mul.f32 	%f605, %f209, %f594;
	fma.rn.f32 	%f895, %f599, %f895, %f603;
	fma.rn.f32 	%f896, %f599, %f896, %f604;
	fma.rn.f32 	%f897, %f599, %f897, %f605;
	mul.f32 	%f606, %f209, %f595;
	mul.f32 	%f607, %f209, %f596;
	mul.f32 	%f608, %f209, %f597;
	fma.rn.f32 	%f609, %f599, %f898, %f606;
	fma.rn.f32 	%f610, %f599, %f899, %f607;
	fma.rn.f32 	%f611, %f599, %f900, %f608;
	mov.b32 	 %f612, %r246;
	mul.f32 	%f613, %f209, %f612;
	fma.rn.f32 	%f614, %f599, %f901, %f613;
	mul.f32 	%f615, %f610, %f610;
	fma.rn.f32 	%f616, %f609, %f609, %f615;
	fma.rn.f32 	%f617, %f611, %f611, %f616;
	fma.rn.f32 	%f618, %f614, %f614, %f617;
	sqrt.rn.f32 	%f619, %f618;
	rcp.rn.f32 	%f620, %f619;
	mul.f32 	%f898, %f609, %f620;
	mul.f32 	%f899, %f610, %f620;
	mul.f32 	%f900, %f611, %f620;
	mul.f32 	%f901, %f614, %f620;

BB3_33:
	mul.f32 	%f621, %f899, %f899;
	fma.rn.f32 	%f622, %f898, %f898, %f621;
	fma.rn.f32 	%f623, %f900, %f900, %f622;
	fma.rn.f32 	%f624, %f901, %f901, %f623;
	rcp.rn.f32 	%f625, %f624;
	mul.f32 	%f626, %f898, %f625;
	mul.f32 	%f627, %f899, %f625;
	mul.f32 	%f628, %f900, %f625;
	mul.f32 	%f629, %f901, %f625;
	mul.f32 	%f630, %f898, %f626;
	mul.f32 	%f631, %f899, %f627;
	mul.f32 	%f632, %f900, %f628;
	mul.f32 	%f633, %f898, %f627;
	mul.f32 	%f634, %f900, %f629;
	mul.f32 	%f635, %f898, %f628;
	mul.f32 	%f636, %f899, %f629;
	mul.f32 	%f637, %f899, %f628;
	mul.f32 	%f638, %f898, %f629;
	sub.f32 	%f639, %f630, %f631;
	sub.f32 	%f640, %f639, %f632;
	fma.rn.f32 	%f641, %f901, %f629, %f640;
	sub.f32 	%f642, %f633, %f634;
	add.f32 	%f643, %f642, %f642;
	add.f32 	%f644, %f635, %f636;
	add.f32 	%f645, %f644, %f644;
	add.f32 	%f646, %f633, %f634;
	add.f32 	%f647, %f646, %f646;
	sub.f32 	%f648, %f631, %f630;
	sub.f32 	%f649, %f648, %f632;
	fma.rn.f32 	%f650, %f901, %f629, %f649;
	sub.f32 	%f651, %f637, %f638;
	add.f32 	%f652, %f651, %f651;
	sub.f32 	%f653, %f635, %f636;
	add.f32 	%f654, %f653, %f653;
	add.f32 	%f655, %f637, %f638;
	add.f32 	%f656, %f655, %f655;
	neg.f32 	%f657, %f630;
	sub.f32 	%f658, %f657, %f631;
	add.f32 	%f659, %f632, %f658;
	fma.rn.f32 	%f660, %f901, %f629, %f659;
	mul.f32 	%f661, %f894, %f641;
	fma.rn.f32 	%f662, %f896, %f643, %f661;
	fma.rn.f32 	%f910, %f897, %f645, %f662;
	mul.f32 	%f663, %f896, %f650;
	fma.rn.f32 	%f664, %f894, %f647, %f663;
	fma.rn.f32 	%f907, %f897, %f652, %f664;
	mul.f32 	%f665, %f896, %f656;
	fma.rn.f32 	%f666, %f894, %f654, %f665;
	fma.rn.f32 	%f904, %f897, %f660, %f666;
	mul.f32 	%f667, %f893, %f641;
	fma.rn.f32 	%f909, %f895, %f643, %f667;
	mul.f32 	%f668, %f895, %f650;
	fma.rn.f32 	%f906, %f893, %f647, %f668;
	mul.f32 	%f669, %f895, %f656;
	fma.rn.f32 	%f903, %f893, %f654, %f669;
	mul.f32 	%f908, %f892, %f641;
	mul.f32 	%f905, %f892, %f647;
	mul.f32 	%f902, %f892, %f654;

BB3_36:
	mul.f32 	%f701, %f903, %f907;
	mul.f32 	%f702, %f904, %f906;
	sub.f32 	%f703, %f702, %f701;
	mul.f32 	%f704, %f908, %f703;
	mul.f32 	%f705, %f902, %f907;
	mul.f32 	%f706, %f904, %f905;
	sub.f32 	%f707, %f706, %f705;
	mul.f32 	%f708, %f707, %f909;
	sub.f32 	%f709, %f704, %f708;
	mul.f32 	%f710, %f902, %f906;
	mul.f32 	%f711, %f903, %f905;
	sub.f32 	%f712, %f711, %f710;
	fma.rn.f32 	%f713, %f712, %f910, %f709;
	rcp.rn.f32 	%f714, %f713;
	mul.f32 	%f917, %f703, %f714;
	mul.f32 	%f715, %f904, %f909;
	mul.f32 	%f716, %f903, %f910;
	sub.f32 	%f717, %f716, %f715;
	mul.f32 	%f918, %f714, %f717;
	mul.f32 	%f718, %f906, %f910;
	mul.f32 	%f719, %f907, %f909;
	sub.f32 	%f720, %f719, %f718;
	mul.f32 	%f919, %f714, %f720;
	sub.f32 	%f721, %f705, %f706;
	mul.f32 	%f914, %f721, %f714;
	mul.f32 	%f722, %f902, %f910;
	mul.f32 	%f723, %f904, %f908;
	sub.f32 	%f724, %f723, %f722;
	mul.f32 	%f915, %f714, %f724;
	mul.f32 	%f725, %f907, %f908;
	mul.f32 	%f726, %f905, %f910;
	sub.f32 	%f727, %f726, %f725;
	mul.f32 	%f916, %f714, %f727;
	mul.f32 	%f911, %f712, %f714;
	mul.f32 	%f728, %f903, %f908;
	mul.f32 	%f729, %f902, %f909;
	sub.f32 	%f730, %f729, %f728;
	mul.f32 	%f912, %f730, %f714;
	mul.f32 	%f731, %f905, %f909;
	mul.f32 	%f732, %f906, %f908;
	sub.f32 	%f733, %f732, %f731;
	mul.f32 	%f913, %f733, %f714;
	bra.uni 	BB3_37;

BB3_26:
	setp.ne.s32	%p13, %r161, 1;
	mov.f32 	%f912, %f911;
	mov.f32 	%f914, %f911;
	mov.f32 	%f915, %f913;
	mov.f32 	%f916, %f911;
	mov.f32 	%f917, %f913;
	mov.f32 	%f918, %f911;
	mov.f32 	%f919, %f911;
	@%p13 bra 	BB3_37;

	// inline asm
	call (%rd143), _optix_get_static_transform_from_handle, (%rd141);
	// inline asm
	add.s64 	%rd265, %rd143, 64;

BB3_29:
	// inline asm
	cvta.to.global.u64 %rd147, %rd265;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r163,%r164,%r165,%r166}, [%rd147];
	// inline asm
	mov.b32 	 %f917, %r163;
	mov.b32 	 %f918, %r164;
	mov.b32 	 %f919, %r165;
	add.s64 	%rd151, %rd265, 16;
	// inline asm
	cvta.to.global.u64 %rd150, %rd151;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r167,%r168,%r169,%r170}, [%rd150];
	// inline asm
	mov.b32 	 %f914, %r167;
	mov.b32 	 %f915, %r168;
	mov.b32 	 %f916, %r169;
	add.s64 	%rd154, %rd265, 32;
	// inline asm
	cvta.to.global.u64 %rd153, %rd154;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r171,%r172,%r173,%r174}, [%rd153];
	// inline asm
	mov.b32 	 %f911, %r171;
	mov.b32 	 %f912, %r172;
	mov.b32 	 %f913, %r173;

BB3_37:
	setp.eq.s32	%p17, %r327, 0;
	@%p17 bra 	BB3_38;
	bra.uni 	BB3_39;

BB3_38:
	mov.f32 	%f891, %f911;
	mov.f32 	%f890, %f912;
	mov.f32 	%f889, %f913;
	mov.f32 	%f888, %f914;
	mov.f32 	%f887, %f915;
	mov.f32 	%f886, %f916;
	mov.f32 	%f885, %f917;
	mov.f32 	%f884, %f918;
	mov.f32 	%f883, %f919;
	bra.uni 	BB3_40;

BB3_39:
	mul.f32 	%f734, %f888, %f918;
	fma.rn.f32 	%f735, %f885, %f917, %f734;
	fma.rn.f32 	%f289, %f891, %f919, %f735;
	mul.f32 	%f736, %f887, %f918;
	fma.rn.f32 	%f737, %f884, %f917, %f736;
	fma.rn.f32 	%f290, %f890, %f919, %f737;
	mul.f32 	%f738, %f886, %f918;
	fma.rn.f32 	%f739, %f883, %f917, %f738;
	fma.rn.f32 	%f291, %f889, %f919, %f739;
	mul.f32 	%f740, %f888, %f915;
	fma.rn.f32 	%f741, %f885, %f914, %f740;
	fma.rn.f32 	%f292, %f891, %f916, %f741;
	mul.f32 	%f742, %f887, %f915;
	fma.rn.f32 	%f743, %f884, %f914, %f742;
	fma.rn.f32 	%f293, %f890, %f916, %f743;
	mul.f32 	%f744, %f886, %f915;
	fma.rn.f32 	%f745, %f883, %f914, %f744;
	fma.rn.f32 	%f294, %f889, %f916, %f745;
	mul.f32 	%f746, %f888, %f912;
	fma.rn.f32 	%f747, %f885, %f911, %f746;
	fma.rn.f32 	%f891, %f891, %f913, %f747;
	mul.f32 	%f748, %f887, %f912;
	fma.rn.f32 	%f749, %f884, %f911, %f748;
	fma.rn.f32 	%f890, %f890, %f913, %f749;
	mul.f32 	%f750, %f886, %f912;
	fma.rn.f32 	%f751, %f883, %f911, %f750;
	fma.rn.f32 	%f889, %f889, %f913, %f751;
	mov.f32 	%f888, %f292;
	mov.f32 	%f887, %f293;
	mov.f32 	%f886, %f294;
	mov.f32 	%f885, %f289;
	mov.f32 	%f884, %f290;
	mov.f32 	%f883, %f291;

BB3_40:
	add.s32 	%r327, %r327, 1;
	setp.lt.u32	%p18, %r327, %r8;
	@%p18 bra 	BB3_24;

	mul.f32 	%f752, %f565, %f884;
	fma.rn.f32 	%f753, %f564, %f885, %f752;
	fma.rn.f32 	%f929, %f931, %f883, %f753;
	mul.f32 	%f754, %f565, %f887;
	fma.rn.f32 	%f755, %f564, %f888, %f754;
	fma.rn.f32 	%f930, %f931, %f886, %f755;
	mul.f32 	%f756, %f565, %f890;
	fma.rn.f32 	%f757, %f564, %f891, %f756;
	fma.rn.f32 	%f931, %f931, %f889, %f757;
	bra.uni 	BB3_42;

BB3_22:
	mov.f32 	%f929, %f564;
	mov.f32 	%f930, %f565;

BB3_42:
	// inline asm
	call (%f758), _optix_get_ray_tmin, ();
	// inline asm
	fma.rn.f32 	%f761, %f929, %f758, %f882;
	fma.rn.f32 	%f762, %f930, %f758, %f881;
	fma.rn.f32 	%f763, %f931, %f758, %f880;
	ld.v4.f32 	{%f764, %f765, %f766, %f767}, [%rd2+80];
	mov.u32 	%r316, 0;
	mov.u32 	%r311, 1;
	mov.u32 	%r313, 2;
	ld.v4.f32 	{%f771, %f772, %f773, %f774}, [%rd2+32];
	fma.rn.f32 	%f776, %f761, %f771, %f764;
	fma.rn.f32 	%f778, %f761, %f772, %f765;
	fma.rn.f32 	%f780, %f761, %f773, %f766;
	ld.v4.f32 	{%f781, %f782, %f783, %f784}, [%rd2+48];
	fma.rn.f32 	%f786, %f762, %f781, %f776;
	fma.rn.f32 	%f788, %f762, %f782, %f778;
	fma.rn.f32 	%f790, %f762, %f783, %f780;
	ld.v4.f32 	{%f791, %f792, %f793, %f794}, [%rd2+64];
	fma.rn.f32 	%f796, %f763, %f791, %f786;
	fma.rn.f32 	%f798, %f763, %f792, %f788;
	fma.rn.f32 	%f800, %f763, %f793, %f790;
	mul.f32 	%f801, %f929, %f771;
	mul.f32 	%f802, %f929, %f772;
	mul.f32 	%f803, %f929, %f773;
	fma.rn.f32 	%f804, %f930, %f781, %f801;
	fma.rn.f32 	%f805, %f930, %f782, %f802;
	fma.rn.f32 	%f806, %f930, %f783, %f803;
	fma.rn.f32 	%f807, %f931, %f791, %f804;
	fma.rn.f32 	%f808, %f931, %f792, %f805;
	fma.rn.f32 	%f809, %f931, %f793, %f806;
	neg.f32 	%f810, %f800;
	div.rn.f32 	%f811, %f810, %f809;
	fma.rn.f32 	%f812, %f811, %f807, %f796;
	fma.rn.f32 	%f813, %f811, %f808, %f798;
	ld.u32 	%r318, [%rd19];
	mov.b32 	 %r310, %f811;
	// inline asm
	call _optix_set_payload, (%r316, %r310);
	// inline asm
	mov.b32 	 %r312, %f812;
	// inline asm
	call _optix_set_payload, (%r311, %r312);
	// inline asm
	mov.b32 	 %r314, %f813;
	// inline asm
	call _optix_set_payload, (%r313, %r314);
	// inline asm
	mov.u32 	%r315, 3;
	// inline asm
	call _optix_set_payload, (%r315, %r316);
	// inline asm
	mov.u32 	%r317, 4;
	// inline asm
	call _optix_set_payload, (%r317, %r318);
	// inline asm
	mov.u32 	%r320, 5;
	// inline asm
	call (%r319), _optix_get_payload, (%r320);
	// inline asm
	setp.eq.s32	%p19, %r319, 0;
	@%p19 bra 	BB3_44;

	// inline asm
	call (%r321), _optix_read_instance_id, ();
	// inline asm
	// inline asm
	call _optix_set_payload, (%r320, %r321);
	// inline asm

BB3_44:
	ret;
}

	// .globl	__closesthit__mesh
.visible .entry __closesthit__mesh(

)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<2>;


	// inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r1), _optix_read_primitive_idx, ();
	// inline asm
	// inline asm
	call (%f1), _optix_get_ray_tmax, ();
	// inline asm
	// inline asm
	call (%f2, %f3), _optix_get_triangle_barycentrics, ();
	// inline asm
	ld.u32 	%r11, [%rd1];
	mov.b32 	 %r3, %f1;
	mov.u32 	%r2, 0;
	// inline asm
	call _optix_set_payload, (%r2, %r3);
	// inline asm
	mov.b32 	 %r5, %f2;
	mov.u32 	%r4, 1;
	// inline asm
	call _optix_set_payload, (%r4, %r5);
	// inline asm
	mov.b32 	 %r7, %f3;
	mov.u32 	%r6, 2;
	// inline asm
	call _optix_set_payload, (%r6, %r7);
	// inline asm
	mov.u32 	%r8, 3;
	// inline asm
	call _optix_set_payload, (%r8, %r1);
	// inline asm
	mov.u32 	%r10, 4;
	// inline asm
	call _optix_set_payload, (%r10, %r11);
	// inline asm
	mov.u32 	%r13, 5;
	// inline asm
	call (%r12), _optix_get_payload, (%r13);
	// inline asm
	setp.eq.s32	%p1, %r12, 0;
	@%p1 bra 	BB4_2;

	// inline asm
	call (%r14), _optix_read_instance_id, ();
	// inline asm
	// inline asm
	call _optix_set_payload, (%r13, %r14);
	// inline asm

BB4_2:
	ret;
}

	// .globl	__intersection__rectangle
.visible .entry __intersection__rectangle(

)
{
	.reg .pred 	%p<22>;
	.reg .b16 	%rs<9>;
	.reg .f32 	%f<935>;
	.reg .b32 	%r<315>;
	.reg .b64 	%rd<265>;


	// inline asm
	call (%rd18), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.u64 	%rd1, [%rd18+8];
	// inline asm
	call (%f315), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f316), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f883), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%r8), _optix_get_transform_list_size, ();
	// inline asm
	setp.eq.s32	%p1, %r8, 0;
	@%p1 bra 	BB5_1;

	mov.u32 	%r313, 0;
	// inline asm
	call (%f318), _optix_get_ray_time, ();
	// inline asm

BB5_3:
	.pragma "nounroll";
	// inline asm
	call (%rd19), _optix_get_transform_list_handle, (%r313);
	// inline asm
	// inline asm
	call (%r11), _optix_get_transform_type_from_handle, (%rd19);
	// inline asm
	and.b32  	%r12, %r11, -2;
	setp.eq.s32	%p2, %r12, 2;
	@%p2 bra 	BB5_9;
	bra.uni 	BB5_4;

BB5_9:
	setp.eq.s32	%p5, %r11, 2;
	@%p5 bra 	BB5_13;
	bra.uni 	BB5_10;

BB5_13:
	// inline asm
	call (%rd93), _optix_get_matrix_motion_transform_from_handle, (%rd19);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd95, %rd93;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r100,%r101,%r102,%r103}, [%rd95];
	// inline asm
	mov.b32	{%rs3, %rs4}, %r102;
	add.s64 	%rd99, %rd93, 16;
	// inline asm
	cvta.to.global.u64 %rd98, %rd99;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r104,%r105,%r106,%r107}, [%rd98];
	// inline asm
	add.s64 	%rd102, %rd93, 32;
	// inline asm
	cvta.to.global.u64 %rd101, %rd102;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r108,%r109,%r110,%r111}, [%rd101];
	// inline asm
	add.s64 	%rd105, %rd93, 48;
	// inline asm
	cvta.to.global.u64 %rd104, %rd105;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r112,%r113,%r114,%r115}, [%rd104];
	// inline asm
	add.s64 	%rd108, %rd93, 64;
	// inline asm
	cvta.to.global.u64 %rd107, %rd108;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r116,%r117,%r118,%r119}, [%rd107];
	// inline asm
	add.s64 	%rd111, %rd93, 80;
	// inline asm
	cvta.to.global.u64 %rd110, %rd111;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r120,%r121,%r122,%r123}, [%rd110];
	// inline asm
	add.s64 	%rd114, %rd93, 96;
	// inline asm
	cvta.to.global.u64 %rd113, %rd114;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r124,%r125,%r126,%r127}, [%rd113];
	// inline asm
	add.s64 	%rd117, %rd93, 112;
	// inline asm
	cvta.to.global.u64 %rd116, %rd117;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r128,%r129,%r130,%r131}, [%rd116];
	// inline asm
	mov.b32 	 %f445, %r103;
	mov.b32 	 %f446, %r104;
	cvt.u32.u16	%r144, %rs3;
	add.s32 	%r145, %r144, -1;
	cvt.rn.f32.s32	%f447, %r145;
	sub.f32 	%f448, %f318, %f445;
	mul.f32 	%f449, %f448, %f447;
	sub.f32 	%f450, %f446, %f445;
	div.rn.f32 	%f451, %f449, %f450;
	min.f32 	%f452, %f447, %f451;
	mov.f32 	%f453, 0f00000000;
	max.f32 	%f454, %f453, %f452;
	cvt.rmi.f32.f32	%f455, %f454;
	cvt.rzi.s32.f32	%r146, %f455;
	mul.wide.s32 	%rd128, %r146, 48;
	add.s64 	%rd120, %rd102, %rd128;
	// inline asm
	cvta.to.global.u64 %rd119, %rd120;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r132,%r133,%r134,%r135}, [%rd119];
	// inline asm
	mov.b32 	 %f855, %r132;
	mov.b32 	 %f856, %r133;
	mov.b32 	 %f857, %r134;
	mov.b32 	 %f858, %r135;
	add.s64 	%rd123, %rd120, 16;
	// inline asm
	cvta.to.global.u64 %rd122, %rd123;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r136,%r137,%r138,%r139}, [%rd122];
	// inline asm
	mov.b32 	 %f851, %r136;
	mov.b32 	 %f852, %r137;
	mov.b32 	 %f853, %r138;
	mov.b32 	 %f854, %r139;
	add.s64 	%rd126, %rd120, 32;
	// inline asm
	cvta.to.global.u64 %rd125, %rd126;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r140,%r141,%r142,%r143}, [%rd125];
	// inline asm
	sub.f32 	%f98, %f454, %f455;
	mov.b32 	 %f847, %r140;
	mov.b32 	 %f848, %r141;
	mov.b32 	 %f849, %r142;
	mov.b32 	 %f850, %r143;
	setp.leu.f32	%p7, %f98, 0f00000000;
	@%p7 bra 	BB5_15;

	cvt.rmi.f32.f32	%f818, %f454;
	cvt.rzi.s32.f32	%r312, %f818;
	cvt.s64.s32	%rd262, %r312;
	mul.lo.s64 	%rd138, %rd262, 48;
	add.s64 	%rd139, %rd93, %rd138;
	add.s64 	%rd130, %rd139, 80;
	// inline asm
	cvta.to.global.u64 %rd129, %rd130;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r147,%r148,%r149,%r150}, [%rd129];
	// inline asm
	mov.b32 	 %f456, %r147;
	mov.b32 	 %f457, %r148;
	mov.b32 	 %f458, %r149;
	mov.b32 	 %f459, %r150;
	add.s64 	%rd133, %rd139, 96;
	// inline asm
	cvta.to.global.u64 %rd132, %rd133;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r151,%r152,%r153,%r154}, [%rd132];
	// inline asm
	mov.b32 	 %f460, %r151;
	mov.b32 	 %f461, %r152;
	mov.b32 	 %f462, %r153;
	mov.b32 	 %f463, %r154;
	add.s64 	%rd136, %rd139, 112;
	// inline asm
	cvta.to.global.u64 %rd135, %rd136;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r155,%r156,%r157,%r158}, [%rd135];
	// inline asm
	mov.f32 	%f464, 0f3F800000;
	sub.f32 	%f465, %f464, %f98;
	mul.f32 	%f466, %f98, %f456;
	mul.f32 	%f467, %f98, %f457;
	mul.f32 	%f468, %f98, %f458;
	mul.f32 	%f469, %f98, %f459;
	fma.rn.f32 	%f855, %f465, %f855, %f466;
	fma.rn.f32 	%f856, %f465, %f856, %f467;
	fma.rn.f32 	%f857, %f465, %f857, %f468;
	fma.rn.f32 	%f858, %f465, %f858, %f469;
	mul.f32 	%f470, %f98, %f460;
	mul.f32 	%f471, %f98, %f461;
	mul.f32 	%f472, %f98, %f462;
	mul.f32 	%f473, %f98, %f463;
	fma.rn.f32 	%f851, %f465, %f851, %f470;
	fma.rn.f32 	%f852, %f465, %f852, %f471;
	fma.rn.f32 	%f853, %f465, %f853, %f472;
	fma.rn.f32 	%f854, %f465, %f854, %f473;
	mov.b32 	 %f474, %r155;
	mov.b32 	 %f475, %r156;
	mov.b32 	 %f476, %r157;
	mov.b32 	 %f477, %r158;
	mul.f32 	%f478, %f98, %f474;
	mul.f32 	%f479, %f98, %f475;
	mul.f32 	%f480, %f98, %f476;
	mul.f32 	%f481, %f98, %f477;
	fma.rn.f32 	%f847, %f465, %f847, %f478;
	fma.rn.f32 	%f848, %f465, %f848, %f479;
	fma.rn.f32 	%f849, %f465, %f849, %f480;
	fma.rn.f32 	%f850, %f465, %f850, %f481;
	bra.uni 	BB5_15;

BB5_4:
	mov.f32 	%f859, 0f00000000;
	mov.f32 	%f861, 0f3F800000;
	setp.eq.s32	%p3, %r11, 4;
	@%p3 bra 	BB5_7;
	bra.uni 	BB5_5;

BB5_7:
	// inline asm
	call (%rd263), _optix_get_instance_inverse_transform_from_handle, (%rd19);
	// inline asm
	bra.uni 	BB5_8;

BB5_10:
	// inline asm
	call (%rd34), _optix_get_srt_motion_transform_from_handle, (%rd19);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd36, %rd34;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r25,%r26,%r27,%r28}, [%rd36];
	// inline asm
	mov.b32	{%rs1, %rs2}, %r27;
	add.s64 	%rd40, %rd34, 16;
	// inline asm
	cvta.to.global.u64 %rd39, %rd40;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r29,%r30,%r31,%r32}, [%rd39];
	// inline asm
	add.s64 	%rd43, %rd34, 32;
	// inline asm
	cvta.to.global.u64 %rd42, %rd43;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r33,%r34,%r35,%r36}, [%rd42];
	// inline asm
	add.s64 	%rd46, %rd34, 48;
	// inline asm
	cvta.to.global.u64 %rd45, %rd46;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r37,%r38,%r39,%r40}, [%rd45];
	// inline asm
	add.s64 	%rd49, %rd34, 64;
	// inline asm
	cvta.to.global.u64 %rd48, %rd49;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r41,%r42,%r43,%r44}, [%rd48];
	// inline asm
	add.s64 	%rd52, %rd34, 80;
	// inline asm
	cvta.to.global.u64 %rd51, %rd52;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r45,%r46,%r47,%r48}, [%rd51];
	// inline asm
	add.s64 	%rd55, %rd34, 96;
	// inline asm
	cvta.to.global.u64 %rd54, %rd55;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r49,%r50,%r51,%r52}, [%rd54];
	// inline asm
	add.s64 	%rd58, %rd34, 112;
	// inline asm
	cvta.to.global.u64 %rd57, %rd58;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r53,%r54,%r55,%r56}, [%rd57];
	// inline asm
	add.s64 	%rd61, %rd34, 128;
	// inline asm
	cvta.to.global.u64 %rd60, %rd61;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r57,%r58,%r59,%r60}, [%rd60];
	// inline asm
	add.s64 	%rd64, %rd34, 144;
	// inline asm
	cvta.to.global.u64 %rd63, %rd64;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r61,%r62,%r63,%r64}, [%rd63];
	// inline asm
	mov.b32 	 %f332, %r28;
	mov.b32 	 %f333, %r29;
	cvt.u32.u16	%r81, %rs1;
	add.s32 	%r82, %r81, -1;
	cvt.rn.f32.s32	%f334, %r82;
	sub.f32 	%f335, %f318, %f332;
	mul.f32 	%f336, %f335, %f334;
	sub.f32 	%f337, %f333, %f332;
	div.rn.f32 	%f338, %f336, %f337;
	min.f32 	%f339, %f334, %f338;
	mov.f32 	%f340, 0f00000000;
	max.f32 	%f341, %f340, %f339;
	cvt.rmi.f32.f32	%f342, %f341;
	cvt.rzi.s32.f32	%r83, %f342;
	mul.wide.s32 	%rd78, %r83, 64;
	add.s64 	%rd67, %rd43, %rd78;
	// inline asm
	cvta.to.global.u64 %rd66, %rd67;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r65,%r66,%r67,%r68}, [%rd66];
	// inline asm
	mov.b32 	 %f831, %r65;
	mov.b32 	 %f832, %r66;
	mov.b32 	 %f833, %r67;
	mov.b32 	 %f834, %r68;
	add.s64 	%rd70, %rd67, 16;
	// inline asm
	cvta.to.global.u64 %rd69, %rd70;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r69,%r70,%r71,%r72}, [%rd69];
	// inline asm
	mov.b32 	 %f835, %r69;
	mov.b32 	 %f836, %r70;
	mov.b32 	 %f837, %r71;
	mov.b32 	 %f838, %r72;
	add.s64 	%rd73, %rd67, 32;
	// inline asm
	cvta.to.global.u64 %rd72, %rd73;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r73,%r74,%r75,%r76}, [%rd72];
	// inline asm
	sub.f32 	%f37, %f341, %f342;
	mov.b32 	 %f839, %r73;
	mov.b32 	 %f840, %r74;
	mov.b32 	 %f841, %r75;
	mov.b32 	 %f842, %r76;
	add.s64 	%rd76, %rd67, 48;
	// inline asm
	cvta.to.global.u64 %rd75, %rd76;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r77,%r78,%r79,%r80}, [%rd75];
	// inline asm
	mov.b32 	 %f843, %r77;
	mov.b32 	 %f844, %r78;
	mov.b32 	 %f845, %r79;
	mov.b32 	 %f846, %r80;
	setp.leu.f32	%p6, %f37, 0f00000000;
	@%p6 bra 	BB5_12;

	cvt.rmi.f32.f32	%f817, %f341;
	cvt.rzi.s32.f32	%r311, %f817;
	cvt.s64.s32	%rd261, %r311;
	shl.b64 	%rd91, %rd261, 6;
	add.s64 	%rd92, %rd91, %rd34;
	add.s64 	%rd80, %rd92, 96;
	// inline asm
	cvta.to.global.u64 %rd79, %rd80;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r84,%r85,%r86,%r87}, [%rd79];
	// inline asm
	mov.b32 	 %f343, %r84;
	mov.b32 	 %f344, %r85;
	mov.b32 	 %f345, %r86;
	mov.b32 	 %f346, %r87;
	add.s64 	%rd83, %rd92, 112;
	// inline asm
	cvta.to.global.u64 %rd82, %rd83;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r88,%r89,%r90,%r91}, [%rd82];
	// inline asm
	mov.b32 	 %f347, %r88;
	mov.b32 	 %f348, %r89;
	mov.b32 	 %f349, %r90;
	mov.b32 	 %f350, %r91;
	add.s64 	%rd86, %rd92, 128;
	// inline asm
	cvta.to.global.u64 %rd85, %rd86;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r92,%r93,%r94,%r95}, [%rd85];
	// inline asm
	mov.b32 	 %f351, %r92;
	mov.b32 	 %f352, %r93;
	mov.b32 	 %f353, %r94;
	mov.b32 	 %f354, %r95;
	add.s64 	%rd89, %rd92, 144;
	// inline asm
	cvta.to.global.u64 %rd88, %rd89;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r96,%r97,%r98,%r99}, [%rd88];
	// inline asm
	mov.f32 	%f355, 0f3F800000;
	sub.f32 	%f356, %f355, %f37;
	mul.f32 	%f357, %f37, %f343;
	mul.f32 	%f358, %f37, %f344;
	mul.f32 	%f359, %f37, %f345;
	mul.f32 	%f360, %f37, %f346;
	fma.rn.f32 	%f831, %f356, %f831, %f357;
	fma.rn.f32 	%f832, %f356, %f832, %f358;
	fma.rn.f32 	%f833, %f356, %f833, %f359;
	fma.rn.f32 	%f834, %f356, %f834, %f360;
	mul.f32 	%f361, %f37, %f347;
	mul.f32 	%f362, %f37, %f348;
	mul.f32 	%f363, %f37, %f349;
	mul.f32 	%f364, %f37, %f350;
	fma.rn.f32 	%f835, %f356, %f835, %f361;
	fma.rn.f32 	%f836, %f356, %f836, %f362;
	fma.rn.f32 	%f837, %f356, %f837, %f363;
	fma.rn.f32 	%f838, %f356, %f838, %f364;
	mul.f32 	%f365, %f37, %f351;
	mul.f32 	%f366, %f37, %f352;
	mul.f32 	%f367, %f37, %f353;
	mul.f32 	%f368, %f37, %f354;
	fma.rn.f32 	%f839, %f356, %f839, %f365;
	fma.rn.f32 	%f369, %f356, %f840, %f366;
	fma.rn.f32 	%f370, %f356, %f841, %f367;
	fma.rn.f32 	%f371, %f356, %f842, %f368;
	mov.b32 	 %f372, %r96;
	mov.b32 	 %f373, %r97;
	mov.b32 	 %f374, %r98;
	mov.b32 	 %f375, %r99;
	mul.f32 	%f376, %f37, %f372;
	mul.f32 	%f377, %f37, %f373;
	mul.f32 	%f378, %f37, %f374;
	mul.f32 	%f379, %f37, %f375;
	fma.rn.f32 	%f380, %f356, %f843, %f376;
	fma.rn.f32 	%f844, %f356, %f844, %f377;
	fma.rn.f32 	%f845, %f356, %f845, %f378;
	fma.rn.f32 	%f846, %f356, %f846, %f379;
	mul.f32 	%f381, %f370, %f370;
	fma.rn.f32 	%f382, %f369, %f369, %f381;
	fma.rn.f32 	%f383, %f371, %f371, %f382;
	fma.rn.f32 	%f384, %f380, %f380, %f383;
	sqrt.rn.f32 	%f385, %f384;
	rcp.rn.f32 	%f386, %f385;
	mul.f32 	%f840, %f369, %f386;
	mul.f32 	%f841, %f370, %f386;
	mul.f32 	%f842, %f371, %f386;
	mul.f32 	%f843, %f380, %f386;

BB5_12:
	mul.f32 	%f387, %f841, %f841;
	fma.rn.f32 	%f388, %f840, %f840, %f387;
	fma.rn.f32 	%f389, %f842, %f842, %f388;
	fma.rn.f32 	%f390, %f843, %f843, %f389;
	rcp.rn.f32 	%f391, %f390;
	mul.f32 	%f392, %f840, %f391;
	mul.f32 	%f393, %f841, %f391;
	mul.f32 	%f394, %f842, %f391;
	mul.f32 	%f395, %f843, %f391;
	mul.f32 	%f396, %f840, %f392;
	mul.f32 	%f397, %f841, %f393;
	mul.f32 	%f398, %f842, %f394;
	mul.f32 	%f399, %f840, %f393;
	mul.f32 	%f400, %f842, %f395;
	mul.f32 	%f401, %f840, %f394;
	mul.f32 	%f402, %f841, %f395;
	mul.f32 	%f403, %f841, %f394;
	mul.f32 	%f404, %f840, %f395;
	sub.f32 	%f405, %f396, %f397;
	sub.f32 	%f406, %f405, %f398;
	fma.rn.f32 	%f407, %f843, %f395, %f406;
	sub.f32 	%f408, %f399, %f400;
	add.f32 	%f409, %f408, %f408;
	add.f32 	%f410, %f401, %f402;
	add.f32 	%f411, %f410, %f410;
	add.f32 	%f412, %f399, %f400;
	add.f32 	%f413, %f412, %f412;
	sub.f32 	%f414, %f397, %f396;
	sub.f32 	%f415, %f414, %f398;
	fma.rn.f32 	%f416, %f843, %f395, %f415;
	sub.f32 	%f417, %f403, %f404;
	add.f32 	%f418, %f417, %f417;
	sub.f32 	%f419, %f401, %f402;
	add.f32 	%f420, %f419, %f419;
	add.f32 	%f421, %f403, %f404;
	add.f32 	%f422, %f421, %f421;
	neg.f32 	%f423, %f396;
	sub.f32 	%f424, %f423, %f397;
	add.f32 	%f425, %f398, %f424;
	fma.rn.f32 	%f426, %f843, %f395, %f425;
	mul.f32 	%f427, %f834, %f407;
	fma.rn.f32 	%f428, %f837, %f409, %f427;
	fma.rn.f32 	%f429, %f839, %f411, %f428;
	add.f32 	%f858, %f844, %f429;
	mul.f32 	%f430, %f837, %f416;
	fma.rn.f32 	%f431, %f834, %f413, %f430;
	fma.rn.f32 	%f432, %f839, %f418, %f431;
	add.f32 	%f854, %f845, %f432;
	mul.f32 	%f433, %f837, %f422;
	fma.rn.f32 	%f434, %f834, %f420, %f433;
	fma.rn.f32 	%f435, %f839, %f426, %f434;
	add.f32 	%f850, %f846, %f435;
	mul.f32 	%f436, %f833, %f407;
	fma.rn.f32 	%f437, %f836, %f409, %f436;
	fma.rn.f32 	%f857, %f838, %f411, %f437;
	mul.f32 	%f438, %f836, %f416;
	fma.rn.f32 	%f439, %f833, %f413, %f438;
	fma.rn.f32 	%f853, %f838, %f418, %f439;
	mul.f32 	%f440, %f836, %f422;
	fma.rn.f32 	%f441, %f833, %f420, %f440;
	fma.rn.f32 	%f849, %f838, %f426, %f441;
	mul.f32 	%f442, %f832, %f407;
	fma.rn.f32 	%f856, %f835, %f409, %f442;
	mul.f32 	%f443, %f835, %f416;
	fma.rn.f32 	%f852, %f832, %f413, %f443;
	mul.f32 	%f444, %f835, %f422;
	fma.rn.f32 	%f848, %f832, %f420, %f444;
	mul.f32 	%f855, %f831, %f407;
	mul.f32 	%f851, %f831, %f413;
	mul.f32 	%f847, %f831, %f420;

BB5_15:
	mul.f32 	%f482, %f848, %f853;
	mul.f32 	%f483, %f849, %f852;
	sub.f32 	%f484, %f483, %f482;
	mul.f32 	%f485, %f855, %f484;
	mul.f32 	%f486, %f847, %f853;
	mul.f32 	%f487, %f849, %f851;
	sub.f32 	%f488, %f487, %f486;
	mul.f32 	%f489, %f488, %f856;
	sub.f32 	%f490, %f485, %f489;
	mul.f32 	%f491, %f847, %f852;
	mul.f32 	%f492, %f848, %f851;
	sub.f32 	%f493, %f492, %f491;
	fma.rn.f32 	%f494, %f493, %f857, %f490;
	rcp.rn.f32 	%f495, %f494;
	mul.f32 	%f867, %f484, %f495;
	mul.f32 	%f496, %f849, %f856;
	mul.f32 	%f497, %f848, %f857;
	sub.f32 	%f498, %f497, %f496;
	mul.f32 	%f868, %f495, %f498;
	mul.f32 	%f499, %f852, %f857;
	mul.f32 	%f500, %f853, %f856;
	sub.f32 	%f501, %f500, %f499;
	mul.f32 	%f869, %f495, %f501;
	sub.f32 	%f502, %f486, %f487;
	mul.f32 	%f863, %f502, %f495;
	mul.f32 	%f503, %f847, %f857;
	mul.f32 	%f504, %f849, %f855;
	sub.f32 	%f505, %f504, %f503;
	mul.f32 	%f864, %f495, %f505;
	mul.f32 	%f506, %f853, %f855;
	mul.f32 	%f507, %f851, %f857;
	sub.f32 	%f508, %f507, %f506;
	mul.f32 	%f865, %f495, %f508;
	mul.f32 	%f859, %f493, %f495;
	mul.f32 	%f509, %f848, %f855;
	mul.f32 	%f510, %f847, %f856;
	sub.f32 	%f511, %f510, %f509;
	mul.f32 	%f860, %f511, %f495;
	mul.f32 	%f512, %f851, %f856;
	mul.f32 	%f513, %f852, %f855;
	sub.f32 	%f514, %f513, %f512;
	mul.f32 	%f861, %f514, %f495;
	mul.f32 	%f515, %f858, %f867;
	neg.f32 	%f516, %f515;
	mul.f32 	%f517, %f854, %f868;
	sub.f32 	%f518, %f516, %f517;
	mul.f32 	%f519, %f850, %f869;
	sub.f32 	%f870, %f518, %f519;
	mul.f32 	%f520, %f858, %f863;
	neg.f32 	%f521, %f520;
	mul.f32 	%f522, %f854, %f864;
	sub.f32 	%f523, %f521, %f522;
	mul.f32 	%f524, %f850, %f865;
	sub.f32 	%f866, %f523, %f524;
	mul.f32 	%f525, %f858, %f859;
	neg.f32 	%f526, %f525;
	mul.f32 	%f527, %f854, %f860;
	sub.f32 	%f528, %f526, %f527;
	mul.f32 	%f529, %f850, %f861;
	sub.f32 	%f862, %f528, %f529;
	bra.uni 	BB5_16;

BB5_5:
	setp.ne.s32	%p4, %r11, 1;
	mov.f32 	%f860, %f859;
	mov.f32 	%f862, %f859;
	mov.f32 	%f863, %f859;
	mov.f32 	%f864, %f861;
	mov.f32 	%f865, %f859;
	mov.f32 	%f866, %f859;
	mov.f32 	%f867, %f861;
	mov.f32 	%f868, %f859;
	mov.f32 	%f869, %f859;
	mov.f32 	%f870, %f859;
	@%p4 bra 	BB5_16;

	// inline asm
	call (%rd21), _optix_get_static_transform_from_handle, (%rd19);
	// inline asm
	add.s64 	%rd263, %rd21, 64;

BB5_8:
	// inline asm
	cvta.to.global.u64 %rd25, %rd263;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r13,%r14,%r15,%r16}, [%rd25];
	// inline asm
	mov.b32 	 %f867, %r13;
	mov.b32 	 %f868, %r14;
	mov.b32 	 %f869, %r15;
	mov.b32 	 %f870, %r16;
	add.s64 	%rd29, %rd263, 16;
	// inline asm
	cvta.to.global.u64 %rd28, %rd29;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r17,%r18,%r19,%r20}, [%rd28];
	// inline asm
	mov.b32 	 %f863, %r17;
	mov.b32 	 %f864, %r18;
	mov.b32 	 %f865, %r19;
	mov.b32 	 %f866, %r20;
	add.s64 	%rd32, %rd263, 32;
	// inline asm
	cvta.to.global.u64 %rd31, %rd32;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r21,%r22,%r23,%r24}, [%rd31];
	// inline asm
	mov.b32 	 %f859, %r21;
	mov.b32 	 %f860, %r22;
	mov.b32 	 %f861, %r23;
	mov.b32 	 %f862, %r24;

BB5_16:
	setp.eq.s32	%p8, %r313, 0;
	@%p8 bra 	BB5_17;
	bra.uni 	BB5_18;

BB5_17:
	mov.f32 	%f830, %f870;
	mov.f32 	%f829, %f869;
	mov.f32 	%f828, %f868;
	mov.f32 	%f827, %f867;
	mov.f32 	%f826, %f866;
	mov.f32 	%f825, %f865;
	mov.f32 	%f824, %f864;
	mov.f32 	%f823, %f863;
	mov.f32 	%f822, %f862;
	mov.f32 	%f821, %f861;
	mov.f32 	%f820, %f860;
	mov.f32 	%f819, %f859;
	bra.uni 	BB5_19;

BB5_18:
	mul.f32 	%f530, %f823, %f868;
	fma.rn.f32 	%f531, %f827, %f867, %f530;
	fma.rn.f32 	%f151, %f819, %f869, %f531;
	mul.f32 	%f532, %f824, %f868;
	fma.rn.f32 	%f533, %f828, %f867, %f532;
	fma.rn.f32 	%f152, %f820, %f869, %f533;
	mul.f32 	%f534, %f825, %f868;
	fma.rn.f32 	%f535, %f829, %f867, %f534;
	fma.rn.f32 	%f153, %f821, %f869, %f535;
	mul.f32 	%f536, %f826, %f868;
	fma.rn.f32 	%f537, %f830, %f867, %f536;
	fma.rn.f32 	%f538, %f822, %f869, %f537;
	add.f32 	%f154, %f870, %f538;
	mul.f32 	%f539, %f823, %f864;
	fma.rn.f32 	%f540, %f827, %f863, %f539;
	fma.rn.f32 	%f155, %f819, %f865, %f540;
	mul.f32 	%f541, %f824, %f864;
	fma.rn.f32 	%f542, %f828, %f863, %f541;
	fma.rn.f32 	%f156, %f820, %f865, %f542;
	mul.f32 	%f543, %f825, %f864;
	fma.rn.f32 	%f544, %f829, %f863, %f543;
	fma.rn.f32 	%f157, %f821, %f865, %f544;
	mul.f32 	%f545, %f826, %f864;
	fma.rn.f32 	%f546, %f830, %f863, %f545;
	fma.rn.f32 	%f547, %f822, %f865, %f546;
	add.f32 	%f158, %f866, %f547;
	mul.f32 	%f548, %f823, %f860;
	fma.rn.f32 	%f549, %f827, %f859, %f548;
	fma.rn.f32 	%f819, %f819, %f861, %f549;
	mul.f32 	%f550, %f824, %f860;
	fma.rn.f32 	%f551, %f828, %f859, %f550;
	fma.rn.f32 	%f820, %f820, %f861, %f551;
	mul.f32 	%f552, %f825, %f860;
	fma.rn.f32 	%f553, %f829, %f859, %f552;
	fma.rn.f32 	%f821, %f821, %f861, %f553;
	mul.f32 	%f554, %f826, %f860;
	fma.rn.f32 	%f555, %f830, %f859, %f554;
	fma.rn.f32 	%f556, %f822, %f861, %f555;
	add.f32 	%f822, %f862, %f556;
	mov.f32 	%f830, %f154;
	mov.f32 	%f829, %f153;
	mov.f32 	%f828, %f152;
	mov.f32 	%f827, %f151;
	mov.f32 	%f826, %f158;
	mov.f32 	%f825, %f157;
	mov.f32 	%f824, %f156;
	mov.f32 	%f823, %f155;

BB5_19:
	add.s32 	%r313, %r313, 1;
	setp.lt.u32	%p9, %r313, %r8;
	@%p9 bra 	BB5_3;

	mul.f32 	%f557, %f315, %f827;
	fma.rn.f32 	%f558, %f316, %f828, %f557;
	fma.rn.f32 	%f559, %f883, %f829, %f558;
	add.f32 	%f885, %f830, %f559;
	mul.f32 	%f560, %f315, %f823;
	fma.rn.f32 	%f561, %f316, %f824, %f560;
	fma.rn.f32 	%f562, %f883, %f825, %f561;
	add.f32 	%f884, %f826, %f562;
	mul.f32 	%f563, %f315, %f819;
	fma.rn.f32 	%f564, %f316, %f820, %f563;
	fma.rn.f32 	%f565, %f883, %f821, %f564;
	add.f32 	%f883, %f822, %f565;
	bra.uni 	BB5_21;

BB5_1:
	mov.f32 	%f884, %f316;
	mov.f32 	%f885, %f315;

BB5_21:
	setp.eq.s32	%p21, %r8, 0;
	// inline asm
	call (%f566), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f567), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f934), _optix_get_world_ray_direction_z, ();
	// inline asm
	@%p21 bra 	BB5_22;

	mov.u32 	%r314, 0;
	// inline asm
	call (%f569), _optix_get_ray_time, ();
	// inline asm

BB5_24:
	.pragma "nounroll";
	// inline asm
	call (%rd140), _optix_get_transform_list_handle, (%r314);
	// inline asm
	// inline asm
	call (%r161), _optix_get_transform_type_from_handle, (%rd140);
	// inline asm
	and.b32  	%r162, %r161, -2;
	setp.eq.s32	%p11, %r162, 2;
	@%p11 bra 	BB5_30;
	bra.uni 	BB5_25;

BB5_30:
	setp.eq.s32	%p14, %r161, 2;
	@%p14 bra 	BB5_34;
	bra.uni 	BB5_31;

BB5_34:
	// inline asm
	call (%rd214), _optix_get_matrix_motion_transform_from_handle, (%rd140);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd216, %rd214;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r250,%r251,%r252,%r253}, [%rd216];
	// inline asm
	mov.b32	{%rs7, %rs8}, %r252;
	add.s64 	%rd220, %rd214, 16;
	// inline asm
	cvta.to.global.u64 %rd219, %rd220;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r254,%r255,%r256,%r257}, [%rd219];
	// inline asm
	add.s64 	%rd223, %rd214, 32;
	// inline asm
	cvta.to.global.u64 %rd222, %rd223;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r258,%r259,%r260,%r261}, [%rd222];
	// inline asm
	add.s64 	%rd226, %rd214, 48;
	// inline asm
	cvta.to.global.u64 %rd225, %rd226;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r262,%r263,%r264,%r265}, [%rd225];
	// inline asm
	add.s64 	%rd229, %rd214, 64;
	// inline asm
	cvta.to.global.u64 %rd228, %rd229;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r266,%r267,%r268,%r269}, [%rd228];
	// inline asm
	add.s64 	%rd232, %rd214, 80;
	// inline asm
	cvta.to.global.u64 %rd231, %rd232;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r270,%r271,%r272,%r273}, [%rd231];
	// inline asm
	add.s64 	%rd235, %rd214, 96;
	// inline asm
	cvta.to.global.u64 %rd234, %rd235;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r274,%r275,%r276,%r277}, [%rd234];
	// inline asm
	add.s64 	%rd238, %rd214, 112;
	// inline asm
	cvta.to.global.u64 %rd237, %rd238;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r278,%r279,%r280,%r281}, [%rd237];
	// inline asm
	mov.b32 	 %f672, %r253;
	mov.b32 	 %f673, %r254;
	cvt.u32.u16	%r294, %rs7;
	add.s32 	%r295, %r294, -1;
	cvt.rn.f32.s32	%f674, %r295;
	sub.f32 	%f675, %f569, %f672;
	mul.f32 	%f676, %f675, %f674;
	sub.f32 	%f677, %f673, %f672;
	div.rn.f32 	%f678, %f676, %f677;
	min.f32 	%f679, %f674, %f678;
	mov.f32 	%f680, 0f00000000;
	max.f32 	%f681, %f680, %f679;
	cvt.rmi.f32.f32	%f682, %f681;
	cvt.rzi.s32.f32	%r296, %f682;
	cvt.s64.s32	%rd17, %r296;
	mul.wide.s32 	%rd249, %r296, 48;
	add.s64 	%rd241, %rd223, %rd249;
	// inline asm
	cvta.to.global.u64 %rd240, %rd241;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r282,%r283,%r284,%r285}, [%rd240];
	// inline asm
	mov.b32 	 %f911, %r282;
	mov.b32 	 %f912, %r283;
	mov.b32 	 %f913, %r284;
	add.s64 	%rd244, %rd241, 16;
	// inline asm
	cvta.to.global.u64 %rd243, %rd244;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r286,%r287,%r288,%r289}, [%rd243];
	// inline asm
	mov.b32 	 %f908, %r286;
	mov.b32 	 %f909, %r287;
	mov.b32 	 %f910, %r288;
	add.s64 	%rd247, %rd241, 32;
	// inline asm
	cvta.to.global.u64 %rd246, %rd247;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r290,%r291,%r292,%r293}, [%rd246];
	// inline asm
	sub.f32 	%f249, %f681, %f682;
	mov.b32 	 %f905, %r290;
	mov.b32 	 %f906, %r291;
	mov.b32 	 %f907, %r292;
	setp.leu.f32	%p16, %f249, 0f00000000;
	@%p16 bra 	BB5_36;

	mul.lo.s64 	%rd259, %rd17, 48;
	add.s64 	%rd260, %rd214, %rd259;
	add.s64 	%rd251, %rd260, 80;
	// inline asm
	cvta.to.global.u64 %rd250, %rd251;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r297,%r298,%r299,%r300}, [%rd250];
	// inline asm
	mov.b32 	 %f683, %r297;
	mov.b32 	 %f684, %r298;
	mov.b32 	 %f685, %r299;
	add.s64 	%rd254, %rd260, 96;
	// inline asm
	cvta.to.global.u64 %rd253, %rd254;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r301,%r302,%r303,%r304}, [%rd253];
	// inline asm
	mov.b32 	 %f686, %r301;
	mov.b32 	 %f687, %r302;
	mov.b32 	 %f688, %r303;
	add.s64 	%rd257, %rd260, 112;
	// inline asm
	cvta.to.global.u64 %rd256, %rd257;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r305,%r306,%r307,%r308}, [%rd256];
	// inline asm
	mov.f32 	%f689, 0f3F800000;
	sub.f32 	%f690, %f689, %f249;
	mul.f32 	%f691, %f249, %f683;
	mul.f32 	%f692, %f249, %f684;
	mul.f32 	%f693, %f249, %f685;
	fma.rn.f32 	%f911, %f690, %f911, %f691;
	fma.rn.f32 	%f912, %f690, %f912, %f692;
	fma.rn.f32 	%f913, %f690, %f913, %f693;
	mul.f32 	%f694, %f249, %f686;
	mul.f32 	%f695, %f249, %f687;
	mul.f32 	%f696, %f249, %f688;
	fma.rn.f32 	%f908, %f690, %f908, %f694;
	fma.rn.f32 	%f909, %f690, %f909, %f695;
	fma.rn.f32 	%f910, %f690, %f910, %f696;
	mov.b32 	 %f697, %r305;
	mov.b32 	 %f698, %r306;
	mov.b32 	 %f699, %r307;
	mul.f32 	%f700, %f249, %f697;
	mul.f32 	%f701, %f249, %f698;
	mul.f32 	%f702, %f249, %f699;
	fma.rn.f32 	%f905, %f690, %f905, %f700;
	fma.rn.f32 	%f906, %f690, %f906, %f701;
	fma.rn.f32 	%f907, %f690, %f907, %f702;
	bra.uni 	BB5_36;

BB5_25:
	mov.f32 	%f914, 0f00000000;
	mov.f32 	%f916, 0f3F800000;
	setp.eq.s32	%p12, %r161, 4;
	@%p12 bra 	BB5_28;
	bra.uni 	BB5_26;

BB5_28:
	// inline asm
	call (%rd264), _optix_get_instance_inverse_transform_from_handle, (%rd140);
	// inline asm
	bra.uni 	BB5_29;

BB5_31:
	// inline asm
	call (%rd155), _optix_get_srt_motion_transform_from_handle, (%rd140);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd157, %rd155;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r175,%r176,%r177,%r178}, [%rd157];
	// inline asm
	mov.b32	{%rs5, %rs6}, %r177;
	add.s64 	%rd161, %rd155, 16;
	// inline asm
	cvta.to.global.u64 %rd160, %rd161;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r179,%r180,%r181,%r182}, [%rd160];
	// inline asm
	add.s64 	%rd164, %rd155, 32;
	// inline asm
	cvta.to.global.u64 %rd163, %rd164;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r183,%r184,%r185,%r186}, [%rd163];
	// inline asm
	add.s64 	%rd167, %rd155, 48;
	// inline asm
	cvta.to.global.u64 %rd166, %rd167;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r187,%r188,%r189,%r190}, [%rd166];
	// inline asm
	add.s64 	%rd170, %rd155, 64;
	// inline asm
	cvta.to.global.u64 %rd169, %rd170;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r191,%r192,%r193,%r194}, [%rd169];
	// inline asm
	add.s64 	%rd173, %rd155, 80;
	// inline asm
	cvta.to.global.u64 %rd172, %rd173;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r195,%r196,%r197,%r198}, [%rd172];
	// inline asm
	add.s64 	%rd176, %rd155, 96;
	// inline asm
	cvta.to.global.u64 %rd175, %rd176;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r199,%r200,%r201,%r202}, [%rd175];
	// inline asm
	add.s64 	%rd179, %rd155, 112;
	// inline asm
	cvta.to.global.u64 %rd178, %rd179;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r203,%r204,%r205,%r206}, [%rd178];
	// inline asm
	add.s64 	%rd182, %rd155, 128;
	// inline asm
	cvta.to.global.u64 %rd181, %rd182;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r207,%r208,%r209,%r210}, [%rd181];
	// inline asm
	add.s64 	%rd185, %rd155, 144;
	// inline asm
	cvta.to.global.u64 %rd184, %rd185;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r211,%r212,%r213,%r214}, [%rd184];
	// inline asm
	mov.b32 	 %f580, %r178;
	mov.b32 	 %f581, %r179;
	cvt.u32.u16	%r231, %rs5;
	add.s32 	%r232, %r231, -1;
	cvt.rn.f32.s32	%f582, %r232;
	sub.f32 	%f583, %f569, %f580;
	mul.f32 	%f584, %f583, %f582;
	sub.f32 	%f585, %f581, %f580;
	div.rn.f32 	%f586, %f584, %f585;
	min.f32 	%f587, %f582, %f586;
	mov.f32 	%f588, 0f00000000;
	max.f32 	%f589, %f588, %f587;
	cvt.rmi.f32.f32	%f590, %f589;
	cvt.rzi.s32.f32	%r233, %f590;
	cvt.s64.s32	%rd15, %r233;
	mul.wide.s32 	%rd199, %r233, 64;
	add.s64 	%rd188, %rd164, %rd199;
	// inline asm
	cvta.to.global.u64 %rd187, %rd188;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r215,%r216,%r217,%r218}, [%rd187];
	// inline asm
	mov.b32 	 %f895, %r215;
	mov.b32 	 %f896, %r216;
	mov.b32 	 %f897, %r217;
	add.s64 	%rd191, %rd188, 16;
	// inline asm
	cvta.to.global.u64 %rd190, %rd191;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r219,%r220,%r221,%r222}, [%rd190];
	// inline asm
	mov.b32 	 %f898, %r219;
	mov.b32 	 %f899, %r220;
	mov.b32 	 %f900, %r222;
	add.s64 	%rd194, %rd188, 32;
	// inline asm
	cvta.to.global.u64 %rd193, %rd194;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r223,%r224,%r225,%r226}, [%rd193];
	// inline asm
	sub.f32 	%f209, %f589, %f590;
	mov.b32 	 %f901, %r224;
	mov.b32 	 %f902, %r225;
	mov.b32 	 %f903, %r226;
	add.s64 	%rd197, %rd188, 48;
	// inline asm
	cvta.to.global.u64 %rd196, %rd197;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r227,%r228,%r229,%r230}, [%rd196];
	// inline asm
	mov.b32 	 %f904, %r227;
	setp.leu.f32	%p15, %f209, 0f00000000;
	@%p15 bra 	BB5_33;

	shl.b64 	%rd212, %rd15, 6;
	add.s64 	%rd213, %rd212, %rd155;
	add.s64 	%rd201, %rd213, 96;
	// inline asm
	cvta.to.global.u64 %rd200, %rd201;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r234,%r235,%r236,%r237}, [%rd200];
	// inline asm
	mov.b32 	 %f591, %r234;
	mov.b32 	 %f592, %r235;
	mov.b32 	 %f593, %r236;
	add.s64 	%rd204, %rd213, 112;
	// inline asm
	cvta.to.global.u64 %rd203, %rd204;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r238,%r239,%r240,%r241}, [%rd203];
	// inline asm
	mov.b32 	 %f594, %r238;
	mov.b32 	 %f595, %r239;
	mov.b32 	 %f596, %r241;
	add.s64 	%rd207, %rd213, 128;
	// inline asm
	cvta.to.global.u64 %rd206, %rd207;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r242,%r243,%r244,%r245}, [%rd206];
	// inline asm
	mov.b32 	 %f597, %r243;
	mov.b32 	 %f598, %r244;
	mov.b32 	 %f599, %r245;
	add.s64 	%rd210, %rd213, 144;
	// inline asm
	cvta.to.global.u64 %rd209, %rd210;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r246,%r247,%r248,%r249}, [%rd209];
	// inline asm
	mov.f32 	%f600, 0f3F800000;
	sub.f32 	%f601, %f600, %f209;
	mul.f32 	%f602, %f209, %f591;
	mul.f32 	%f603, %f209, %f592;
	mul.f32 	%f604, %f209, %f593;
	fma.rn.f32 	%f895, %f601, %f895, %f602;
	fma.rn.f32 	%f896, %f601, %f896, %f603;
	fma.rn.f32 	%f897, %f601, %f897, %f604;
	mul.f32 	%f605, %f209, %f594;
	mul.f32 	%f606, %f209, %f595;
	mul.f32 	%f607, %f209, %f596;
	fma.rn.f32 	%f898, %f601, %f898, %f605;
	fma.rn.f32 	%f899, %f601, %f899, %f606;
	fma.rn.f32 	%f900, %f601, %f900, %f607;
	mul.f32 	%f608, %f209, %f597;
	mul.f32 	%f609, %f209, %f598;
	mul.f32 	%f610, %f209, %f599;
	fma.rn.f32 	%f611, %f601, %f901, %f608;
	fma.rn.f32 	%f612, %f601, %f902, %f609;
	fma.rn.f32 	%f613, %f601, %f903, %f610;
	mov.b32 	 %f614, %r246;
	mul.f32 	%f615, %f209, %f614;
	fma.rn.f32 	%f616, %f601, %f904, %f615;
	mul.f32 	%f617, %f612, %f612;
	fma.rn.f32 	%f618, %f611, %f611, %f617;
	fma.rn.f32 	%f619, %f613, %f613, %f618;
	fma.rn.f32 	%f620, %f616, %f616, %f619;
	sqrt.rn.f32 	%f621, %f620;
	rcp.rn.f32 	%f622, %f621;
	mul.f32 	%f901, %f611, %f622;
	mul.f32 	%f902, %f612, %f622;
	mul.f32 	%f903, %f613, %f622;
	mul.f32 	%f904, %f616, %f622;

BB5_33:
	mul.f32 	%f623, %f902, %f902;
	fma.rn.f32 	%f624, %f901, %f901, %f623;
	fma.rn.f32 	%f625, %f903, %f903, %f624;
	fma.rn.f32 	%f626, %f904, %f904, %f625;
	rcp.rn.f32 	%f627, %f626;
	mul.f32 	%f628, %f901, %f627;
	mul.f32 	%f629, %f902, %f627;
	mul.f32 	%f630, %f903, %f627;
	mul.f32 	%f631, %f904, %f627;
	mul.f32 	%f632, %f901, %f628;
	mul.f32 	%f633, %f902, %f629;
	mul.f32 	%f634, %f903, %f630;
	mul.f32 	%f635, %f901, %f629;
	mul.f32 	%f636, %f903, %f631;
	mul.f32 	%f637, %f901, %f630;
	mul.f32 	%f638, %f902, %f631;
	mul.f32 	%f639, %f902, %f630;
	mul.f32 	%f640, %f901, %f631;
	sub.f32 	%f641, %f632, %f633;
	sub.f32 	%f642, %f641, %f634;
	fma.rn.f32 	%f643, %f904, %f631, %f642;
	sub.f32 	%f644, %f635, %f636;
	add.f32 	%f645, %f644, %f644;
	add.f32 	%f646, %f637, %f638;
	add.f32 	%f647, %f646, %f646;
	add.f32 	%f648, %f635, %f636;
	add.f32 	%f649, %f648, %f648;
	sub.f32 	%f650, %f633, %f632;
	sub.f32 	%f651, %f650, %f634;
	fma.rn.f32 	%f652, %f904, %f631, %f651;
	sub.f32 	%f653, %f639, %f640;
	add.f32 	%f654, %f653, %f653;
	sub.f32 	%f655, %f637, %f638;
	add.f32 	%f656, %f655, %f655;
	add.f32 	%f657, %f639, %f640;
	add.f32 	%f658, %f657, %f657;
	neg.f32 	%f659, %f632;
	sub.f32 	%f660, %f659, %f633;
	add.f32 	%f661, %f634, %f660;
	fma.rn.f32 	%f662, %f904, %f631, %f661;
	mul.f32 	%f663, %f897, %f643;
	fma.rn.f32 	%f664, %f899, %f645, %f663;
	fma.rn.f32 	%f913, %f900, %f647, %f664;
	mul.f32 	%f665, %f899, %f652;
	fma.rn.f32 	%f666, %f897, %f649, %f665;
	fma.rn.f32 	%f910, %f900, %f654, %f666;
	mul.f32 	%f667, %f899, %f658;
	fma.rn.f32 	%f668, %f897, %f656, %f667;
	fma.rn.f32 	%f907, %f900, %f662, %f668;
	mul.f32 	%f669, %f896, %f643;
	fma.rn.f32 	%f912, %f898, %f645, %f669;
	mul.f32 	%f670, %f898, %f652;
	fma.rn.f32 	%f909, %f896, %f649, %f670;
	mul.f32 	%f671, %f898, %f658;
	fma.rn.f32 	%f906, %f896, %f656, %f671;
	mul.f32 	%f911, %f895, %f643;
	mul.f32 	%f908, %f895, %f649;
	mul.f32 	%f905, %f895, %f656;

BB5_36:
	mul.f32 	%f703, %f906, %f910;
	mul.f32 	%f704, %f907, %f909;
	sub.f32 	%f705, %f704, %f703;
	mul.f32 	%f706, %f911, %f705;
	mul.f32 	%f707, %f905, %f910;
	mul.f32 	%f708, %f907, %f908;
	sub.f32 	%f709, %f708, %f707;
	mul.f32 	%f710, %f709, %f912;
	sub.f32 	%f711, %f706, %f710;
	mul.f32 	%f712, %f905, %f909;
	mul.f32 	%f713, %f906, %f908;
	sub.f32 	%f714, %f713, %f712;
	fma.rn.f32 	%f715, %f714, %f913, %f711;
	rcp.rn.f32 	%f716, %f715;
	mul.f32 	%f920, %f705, %f716;
	mul.f32 	%f717, %f907, %f912;
	mul.f32 	%f718, %f906, %f913;
	sub.f32 	%f719, %f718, %f717;
	mul.f32 	%f921, %f716, %f719;
	mul.f32 	%f720, %f909, %f913;
	mul.f32 	%f721, %f910, %f912;
	sub.f32 	%f722, %f721, %f720;
	mul.f32 	%f922, %f716, %f722;
	sub.f32 	%f723, %f707, %f708;
	mul.f32 	%f917, %f723, %f716;
	mul.f32 	%f724, %f905, %f913;
	mul.f32 	%f725, %f907, %f911;
	sub.f32 	%f726, %f725, %f724;
	mul.f32 	%f918, %f716, %f726;
	mul.f32 	%f727, %f910, %f911;
	mul.f32 	%f728, %f908, %f913;
	sub.f32 	%f729, %f728, %f727;
	mul.f32 	%f919, %f716, %f729;
	mul.f32 	%f914, %f714, %f716;
	mul.f32 	%f730, %f906, %f911;
	mul.f32 	%f731, %f905, %f912;
	sub.f32 	%f732, %f731, %f730;
	mul.f32 	%f915, %f732, %f716;
	mul.f32 	%f733, %f908, %f912;
	mul.f32 	%f734, %f909, %f911;
	sub.f32 	%f735, %f734, %f733;
	mul.f32 	%f916, %f735, %f716;
	bra.uni 	BB5_37;

BB5_26:
	setp.ne.s32	%p13, %r161, 1;
	mov.f32 	%f915, %f914;
	mov.f32 	%f917, %f914;
	mov.f32 	%f918, %f916;
	mov.f32 	%f919, %f914;
	mov.f32 	%f920, %f916;
	mov.f32 	%f921, %f914;
	mov.f32 	%f922, %f914;
	@%p13 bra 	BB5_37;

	// inline asm
	call (%rd142), _optix_get_static_transform_from_handle, (%rd140);
	// inline asm
	add.s64 	%rd264, %rd142, 64;

BB5_29:
	// inline asm
	cvta.to.global.u64 %rd146, %rd264;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r163,%r164,%r165,%r166}, [%rd146];
	// inline asm
	mov.b32 	 %f920, %r163;
	mov.b32 	 %f921, %r164;
	mov.b32 	 %f922, %r165;
	add.s64 	%rd150, %rd264, 16;
	// inline asm
	cvta.to.global.u64 %rd149, %rd150;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r167,%r168,%r169,%r170}, [%rd149];
	// inline asm
	mov.b32 	 %f917, %r167;
	mov.b32 	 %f918, %r168;
	mov.b32 	 %f919, %r169;
	add.s64 	%rd153, %rd264, 32;
	// inline asm
	cvta.to.global.u64 %rd152, %rd153;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r171,%r172,%r173,%r174}, [%rd152];
	// inline asm
	mov.b32 	 %f914, %r171;
	mov.b32 	 %f915, %r172;
	mov.b32 	 %f916, %r173;

BB5_37:
	setp.eq.s32	%p17, %r314, 0;
	@%p17 bra 	BB5_38;
	bra.uni 	BB5_39;

BB5_38:
	mov.f32 	%f894, %f914;
	mov.f32 	%f893, %f915;
	mov.f32 	%f892, %f916;
	mov.f32 	%f891, %f917;
	mov.f32 	%f890, %f918;
	mov.f32 	%f889, %f919;
	mov.f32 	%f888, %f920;
	mov.f32 	%f887, %f921;
	mov.f32 	%f886, %f922;
	bra.uni 	BB5_40;

BB5_39:
	mul.f32 	%f736, %f891, %f921;
	fma.rn.f32 	%f737, %f888, %f920, %f736;
	fma.rn.f32 	%f289, %f894, %f922, %f737;
	mul.f32 	%f738, %f890, %f921;
	fma.rn.f32 	%f739, %f887, %f920, %f738;
	fma.rn.f32 	%f290, %f893, %f922, %f739;
	mul.f32 	%f740, %f889, %f921;
	fma.rn.f32 	%f741, %f886, %f920, %f740;
	fma.rn.f32 	%f291, %f892, %f922, %f741;
	mul.f32 	%f742, %f891, %f918;
	fma.rn.f32 	%f743, %f888, %f917, %f742;
	fma.rn.f32 	%f292, %f894, %f919, %f743;
	mul.f32 	%f744, %f890, %f918;
	fma.rn.f32 	%f745, %f887, %f917, %f744;
	fma.rn.f32 	%f293, %f893, %f919, %f745;
	mul.f32 	%f746, %f889, %f918;
	fma.rn.f32 	%f747, %f886, %f917, %f746;
	fma.rn.f32 	%f294, %f892, %f919, %f747;
	mul.f32 	%f748, %f891, %f915;
	fma.rn.f32 	%f749, %f888, %f914, %f748;
	fma.rn.f32 	%f894, %f894, %f916, %f749;
	mul.f32 	%f750, %f890, %f915;
	fma.rn.f32 	%f751, %f887, %f914, %f750;
	fma.rn.f32 	%f893, %f893, %f916, %f751;
	mul.f32 	%f752, %f889, %f915;
	fma.rn.f32 	%f753, %f886, %f914, %f752;
	fma.rn.f32 	%f892, %f892, %f916, %f753;
	mov.f32 	%f891, %f292;
	mov.f32 	%f890, %f293;
	mov.f32 	%f889, %f294;
	mov.f32 	%f888, %f289;
	mov.f32 	%f887, %f290;
	mov.f32 	%f886, %f291;

BB5_40:
	add.s32 	%r314, %r314, 1;
	setp.lt.u32	%p18, %r314, %r8;
	@%p18 bra 	BB5_24;

	mul.f32 	%f754, %f567, %f887;
	fma.rn.f32 	%f755, %f566, %f888, %f754;
	fma.rn.f32 	%f932, %f934, %f886, %f755;
	mul.f32 	%f756, %f567, %f890;
	fma.rn.f32 	%f757, %f566, %f891, %f756;
	fma.rn.f32 	%f933, %f934, %f889, %f757;
	mul.f32 	%f758, %f567, %f893;
	fma.rn.f32 	%f759, %f566, %f894, %f758;
	fma.rn.f32 	%f934, %f934, %f892, %f759;
	bra.uni 	BB5_42;

BB5_22:
	mov.f32 	%f932, %f566;
	mov.f32 	%f933, %f567;

BB5_42:
	// inline asm
	call (%f760), _optix_get_ray_tmin, ();
	// inline asm
	fma.rn.f32 	%f763, %f932, %f760, %f885;
	fma.rn.f32 	%f764, %f933, %f760, %f884;
	fma.rn.f32 	%f765, %f934, %f760, %f883;
	ld.v4.f32 	{%f766, %f767, %f768, %f769}, [%rd1+80];
	ld.v4.f32 	{%f773, %f774, %f775, %f776}, [%rd1+32];
	fma.rn.f32 	%f778, %f763, %f773, %f766;
	fma.rn.f32 	%f780, %f763, %f774, %f767;
	fma.rn.f32 	%f782, %f763, %f775, %f768;
	ld.v4.f32 	{%f783, %f784, %f785, %f786}, [%rd1+48];
	fma.rn.f32 	%f788, %f764, %f783, %f778;
	fma.rn.f32 	%f790, %f764, %f784, %f780;
	fma.rn.f32 	%f792, %f764, %f785, %f782;
	ld.v4.f32 	{%f793, %f794, %f795, %f796}, [%rd1+64];
	fma.rn.f32 	%f798, %f765, %f793, %f788;
	fma.rn.f32 	%f800, %f765, %f794, %f790;
	fma.rn.f32 	%f802, %f765, %f795, %f792;
	mul.f32 	%f803, %f932, %f773;
	mul.f32 	%f804, %f932, %f774;
	mul.f32 	%f805, %f932, %f775;
	fma.rn.f32 	%f806, %f933, %f783, %f803;
	fma.rn.f32 	%f807, %f933, %f784, %f804;
	fma.rn.f32 	%f808, %f933, %f785, %f805;
	fma.rn.f32 	%f809, %f934, %f793, %f806;
	fma.rn.f32 	%f810, %f934, %f794, %f807;
	fma.rn.f32 	%f811, %f934, %f795, %f808;
	neg.f32 	%f812, %f802;
	div.rn.f32 	%f313, %f812, %f811;
	fma.rn.f32 	%f813, %f313, %f809, %f798;
	fma.rn.f32 	%f314, %f313, %f810, %f800;
	abs.f32 	%f814, %f813;
	setp.gtu.f32	%p19, %f814, 0f3F800000;
	@%p19 bra 	BB5_45;

	abs.f32 	%f815, %f314;
	setp.gtu.f32	%p20, %f815, 0f3F800000;
	@%p20 bra 	BB5_45;

	mov.u32 	%r310, 254;
	// inline asm
	call (%r309), _optix_report_intersection_0, (%f313, %r310);
	// inline asm

BB5_45:
	ret;
}

	// .globl	__closesthit__rectangle
.visible .entry __closesthit__rectangle(

)
{
	.reg .pred 	%p<21>;
	.reg .b16 	%rs<9>;
	.reg .f32 	%f<932>;
	.reg .b32 	%r<328>;
	.reg .b64 	%rd<266>;


	// inline asm
	call (%rd19), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.u64 	%rd2, [%rd19+8];
	// inline asm
	call (%f313), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f314), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f880), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%r8), _optix_get_transform_list_size, ();
	// inline asm
	setp.eq.s32	%p1, %r8, 0;
	@%p1 bra 	BB6_1;

	mov.u32 	%r326, 0;
	// inline asm
	call (%f316), _optix_get_ray_time, ();
	// inline asm

BB6_3:
	.pragma "nounroll";
	// inline asm
	call (%rd20), _optix_get_transform_list_handle, (%r326);
	// inline asm
	// inline asm
	call (%r11), _optix_get_transform_type_from_handle, (%rd20);
	// inline asm
	and.b32  	%r12, %r11, -2;
	setp.eq.s32	%p2, %r12, 2;
	@%p2 bra 	BB6_9;
	bra.uni 	BB6_4;

BB6_9:
	setp.eq.s32	%p5, %r11, 2;
	@%p5 bra 	BB6_13;
	bra.uni 	BB6_10;

BB6_13:
	// inline asm
	call (%rd94), _optix_get_matrix_motion_transform_from_handle, (%rd20);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd96, %rd94;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r100,%r101,%r102,%r103}, [%rd96];
	// inline asm
	mov.b32	{%rs3, %rs4}, %r102;
	add.s64 	%rd100, %rd94, 16;
	// inline asm
	cvta.to.global.u64 %rd99, %rd100;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r104,%r105,%r106,%r107}, [%rd99];
	// inline asm
	add.s64 	%rd103, %rd94, 32;
	// inline asm
	cvta.to.global.u64 %rd102, %rd103;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r108,%r109,%r110,%r111}, [%rd102];
	// inline asm
	add.s64 	%rd106, %rd94, 48;
	// inline asm
	cvta.to.global.u64 %rd105, %rd106;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r112,%r113,%r114,%r115}, [%rd105];
	// inline asm
	add.s64 	%rd109, %rd94, 64;
	// inline asm
	cvta.to.global.u64 %rd108, %rd109;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r116,%r117,%r118,%r119}, [%rd108];
	// inline asm
	add.s64 	%rd112, %rd94, 80;
	// inline asm
	cvta.to.global.u64 %rd111, %rd112;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r120,%r121,%r122,%r123}, [%rd111];
	// inline asm
	add.s64 	%rd115, %rd94, 96;
	// inline asm
	cvta.to.global.u64 %rd114, %rd115;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r124,%r125,%r126,%r127}, [%rd114];
	// inline asm
	add.s64 	%rd118, %rd94, 112;
	// inline asm
	cvta.to.global.u64 %rd117, %rd118;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r128,%r129,%r130,%r131}, [%rd117];
	// inline asm
	mov.b32 	 %f443, %r103;
	mov.b32 	 %f444, %r104;
	cvt.u32.u16	%r144, %rs3;
	add.s32 	%r145, %r144, -1;
	cvt.rn.f32.s32	%f445, %r145;
	sub.f32 	%f446, %f316, %f443;
	mul.f32 	%f447, %f446, %f445;
	sub.f32 	%f448, %f444, %f443;
	div.rn.f32 	%f449, %f447, %f448;
	min.f32 	%f450, %f445, %f449;
	mov.f32 	%f451, 0f00000000;
	max.f32 	%f452, %f451, %f450;
	cvt.rmi.f32.f32	%f453, %f452;
	cvt.rzi.s32.f32	%r146, %f453;
	mul.wide.s32 	%rd129, %r146, 48;
	add.s64 	%rd121, %rd103, %rd129;
	// inline asm
	cvta.to.global.u64 %rd120, %rd121;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r132,%r133,%r134,%r135}, [%rd120];
	// inline asm
	mov.b32 	 %f852, %r132;
	mov.b32 	 %f853, %r133;
	mov.b32 	 %f854, %r134;
	mov.b32 	 %f855, %r135;
	add.s64 	%rd124, %rd121, 16;
	// inline asm
	cvta.to.global.u64 %rd123, %rd124;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r136,%r137,%r138,%r139}, [%rd123];
	// inline asm
	mov.b32 	 %f848, %r136;
	mov.b32 	 %f849, %r137;
	mov.b32 	 %f850, %r138;
	mov.b32 	 %f851, %r139;
	add.s64 	%rd127, %rd121, 32;
	// inline asm
	cvta.to.global.u64 %rd126, %rd127;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r140,%r141,%r142,%r143}, [%rd126];
	// inline asm
	sub.f32 	%f98, %f452, %f453;
	mov.b32 	 %f844, %r140;
	mov.b32 	 %f845, %r141;
	mov.b32 	 %f846, %r142;
	mov.b32 	 %f847, %r143;
	setp.leu.f32	%p7, %f98, 0f00000000;
	@%p7 bra 	BB6_15;

	cvt.rmi.f32.f32	%f815, %f452;
	cvt.rzi.s32.f32	%r325, %f815;
	cvt.s64.s32	%rd263, %r325;
	mul.lo.s64 	%rd139, %rd263, 48;
	add.s64 	%rd140, %rd94, %rd139;
	add.s64 	%rd131, %rd140, 80;
	// inline asm
	cvta.to.global.u64 %rd130, %rd131;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r147,%r148,%r149,%r150}, [%rd130];
	// inline asm
	mov.b32 	 %f454, %r147;
	mov.b32 	 %f455, %r148;
	mov.b32 	 %f456, %r149;
	mov.b32 	 %f457, %r150;
	add.s64 	%rd134, %rd140, 96;
	// inline asm
	cvta.to.global.u64 %rd133, %rd134;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r151,%r152,%r153,%r154}, [%rd133];
	// inline asm
	mov.b32 	 %f458, %r151;
	mov.b32 	 %f459, %r152;
	mov.b32 	 %f460, %r153;
	mov.b32 	 %f461, %r154;
	add.s64 	%rd137, %rd140, 112;
	// inline asm
	cvta.to.global.u64 %rd136, %rd137;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r155,%r156,%r157,%r158}, [%rd136];
	// inline asm
	mov.f32 	%f462, 0f3F800000;
	sub.f32 	%f463, %f462, %f98;
	mul.f32 	%f464, %f98, %f454;
	mul.f32 	%f465, %f98, %f455;
	mul.f32 	%f466, %f98, %f456;
	mul.f32 	%f467, %f98, %f457;
	fma.rn.f32 	%f852, %f463, %f852, %f464;
	fma.rn.f32 	%f853, %f463, %f853, %f465;
	fma.rn.f32 	%f854, %f463, %f854, %f466;
	fma.rn.f32 	%f855, %f463, %f855, %f467;
	mul.f32 	%f468, %f98, %f458;
	mul.f32 	%f469, %f98, %f459;
	mul.f32 	%f470, %f98, %f460;
	mul.f32 	%f471, %f98, %f461;
	fma.rn.f32 	%f848, %f463, %f848, %f468;
	fma.rn.f32 	%f849, %f463, %f849, %f469;
	fma.rn.f32 	%f850, %f463, %f850, %f470;
	fma.rn.f32 	%f851, %f463, %f851, %f471;
	mov.b32 	 %f472, %r155;
	mov.b32 	 %f473, %r156;
	mov.b32 	 %f474, %r157;
	mov.b32 	 %f475, %r158;
	mul.f32 	%f476, %f98, %f472;
	mul.f32 	%f477, %f98, %f473;
	mul.f32 	%f478, %f98, %f474;
	mul.f32 	%f479, %f98, %f475;
	fma.rn.f32 	%f844, %f463, %f844, %f476;
	fma.rn.f32 	%f845, %f463, %f845, %f477;
	fma.rn.f32 	%f846, %f463, %f846, %f478;
	fma.rn.f32 	%f847, %f463, %f847, %f479;
	bra.uni 	BB6_15;

BB6_4:
	mov.f32 	%f856, 0f00000000;
	mov.f32 	%f858, 0f3F800000;
	setp.eq.s32	%p3, %r11, 4;
	@%p3 bra 	BB6_7;
	bra.uni 	BB6_5;

BB6_7:
	// inline asm
	call (%rd264), _optix_get_instance_inverse_transform_from_handle, (%rd20);
	// inline asm
	bra.uni 	BB6_8;

BB6_10:
	// inline asm
	call (%rd35), _optix_get_srt_motion_transform_from_handle, (%rd20);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd37, %rd35;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r25,%r26,%r27,%r28}, [%rd37];
	// inline asm
	mov.b32	{%rs1, %rs2}, %r27;
	add.s64 	%rd41, %rd35, 16;
	// inline asm
	cvta.to.global.u64 %rd40, %rd41;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r29,%r30,%r31,%r32}, [%rd40];
	// inline asm
	add.s64 	%rd44, %rd35, 32;
	// inline asm
	cvta.to.global.u64 %rd43, %rd44;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r33,%r34,%r35,%r36}, [%rd43];
	// inline asm
	add.s64 	%rd47, %rd35, 48;
	// inline asm
	cvta.to.global.u64 %rd46, %rd47;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r37,%r38,%r39,%r40}, [%rd46];
	// inline asm
	add.s64 	%rd50, %rd35, 64;
	// inline asm
	cvta.to.global.u64 %rd49, %rd50;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r41,%r42,%r43,%r44}, [%rd49];
	// inline asm
	add.s64 	%rd53, %rd35, 80;
	// inline asm
	cvta.to.global.u64 %rd52, %rd53;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r45,%r46,%r47,%r48}, [%rd52];
	// inline asm
	add.s64 	%rd56, %rd35, 96;
	// inline asm
	cvta.to.global.u64 %rd55, %rd56;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r49,%r50,%r51,%r52}, [%rd55];
	// inline asm
	add.s64 	%rd59, %rd35, 112;
	// inline asm
	cvta.to.global.u64 %rd58, %rd59;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r53,%r54,%r55,%r56}, [%rd58];
	// inline asm
	add.s64 	%rd62, %rd35, 128;
	// inline asm
	cvta.to.global.u64 %rd61, %rd62;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r57,%r58,%r59,%r60}, [%rd61];
	// inline asm
	add.s64 	%rd65, %rd35, 144;
	// inline asm
	cvta.to.global.u64 %rd64, %rd65;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r61,%r62,%r63,%r64}, [%rd64];
	// inline asm
	mov.b32 	 %f330, %r28;
	mov.b32 	 %f331, %r29;
	cvt.u32.u16	%r81, %rs1;
	add.s32 	%r82, %r81, -1;
	cvt.rn.f32.s32	%f332, %r82;
	sub.f32 	%f333, %f316, %f330;
	mul.f32 	%f334, %f333, %f332;
	sub.f32 	%f335, %f331, %f330;
	div.rn.f32 	%f336, %f334, %f335;
	min.f32 	%f337, %f332, %f336;
	mov.f32 	%f338, 0f00000000;
	max.f32 	%f339, %f338, %f337;
	cvt.rmi.f32.f32	%f340, %f339;
	cvt.rzi.s32.f32	%r83, %f340;
	mul.wide.s32 	%rd79, %r83, 64;
	add.s64 	%rd68, %rd44, %rd79;
	// inline asm
	cvta.to.global.u64 %rd67, %rd68;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r65,%r66,%r67,%r68}, [%rd67];
	// inline asm
	mov.b32 	 %f828, %r65;
	mov.b32 	 %f829, %r66;
	mov.b32 	 %f830, %r67;
	mov.b32 	 %f831, %r68;
	add.s64 	%rd71, %rd68, 16;
	// inline asm
	cvta.to.global.u64 %rd70, %rd71;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r69,%r70,%r71,%r72}, [%rd70];
	// inline asm
	mov.b32 	 %f832, %r69;
	mov.b32 	 %f833, %r70;
	mov.b32 	 %f834, %r71;
	mov.b32 	 %f835, %r72;
	add.s64 	%rd74, %rd68, 32;
	// inline asm
	cvta.to.global.u64 %rd73, %rd74;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r73,%r74,%r75,%r76}, [%rd73];
	// inline asm
	sub.f32 	%f37, %f339, %f340;
	mov.b32 	 %f836, %r73;
	mov.b32 	 %f837, %r74;
	mov.b32 	 %f838, %r75;
	mov.b32 	 %f839, %r76;
	add.s64 	%rd77, %rd68, 48;
	// inline asm
	cvta.to.global.u64 %rd76, %rd77;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r77,%r78,%r79,%r80}, [%rd76];
	// inline asm
	mov.b32 	 %f840, %r77;
	mov.b32 	 %f841, %r78;
	mov.b32 	 %f842, %r79;
	mov.b32 	 %f843, %r80;
	setp.leu.f32	%p6, %f37, 0f00000000;
	@%p6 bra 	BB6_12;

	cvt.rmi.f32.f32	%f814, %f339;
	cvt.rzi.s32.f32	%r324, %f814;
	cvt.s64.s32	%rd262, %r324;
	shl.b64 	%rd92, %rd262, 6;
	add.s64 	%rd93, %rd92, %rd35;
	add.s64 	%rd81, %rd93, 96;
	// inline asm
	cvta.to.global.u64 %rd80, %rd81;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r84,%r85,%r86,%r87}, [%rd80];
	// inline asm
	mov.b32 	 %f341, %r84;
	mov.b32 	 %f342, %r85;
	mov.b32 	 %f343, %r86;
	mov.b32 	 %f344, %r87;
	add.s64 	%rd84, %rd93, 112;
	// inline asm
	cvta.to.global.u64 %rd83, %rd84;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r88,%r89,%r90,%r91}, [%rd83];
	// inline asm
	mov.b32 	 %f345, %r88;
	mov.b32 	 %f346, %r89;
	mov.b32 	 %f347, %r90;
	mov.b32 	 %f348, %r91;
	add.s64 	%rd87, %rd93, 128;
	// inline asm
	cvta.to.global.u64 %rd86, %rd87;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r92,%r93,%r94,%r95}, [%rd86];
	// inline asm
	mov.b32 	 %f349, %r92;
	mov.b32 	 %f350, %r93;
	mov.b32 	 %f351, %r94;
	mov.b32 	 %f352, %r95;
	add.s64 	%rd90, %rd93, 144;
	// inline asm
	cvta.to.global.u64 %rd89, %rd90;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r96,%r97,%r98,%r99}, [%rd89];
	// inline asm
	mov.f32 	%f353, 0f3F800000;
	sub.f32 	%f354, %f353, %f37;
	mul.f32 	%f355, %f37, %f341;
	mul.f32 	%f356, %f37, %f342;
	mul.f32 	%f357, %f37, %f343;
	mul.f32 	%f358, %f37, %f344;
	fma.rn.f32 	%f828, %f354, %f828, %f355;
	fma.rn.f32 	%f829, %f354, %f829, %f356;
	fma.rn.f32 	%f830, %f354, %f830, %f357;
	fma.rn.f32 	%f831, %f354, %f831, %f358;
	mul.f32 	%f359, %f37, %f345;
	mul.f32 	%f360, %f37, %f346;
	mul.f32 	%f361, %f37, %f347;
	mul.f32 	%f362, %f37, %f348;
	fma.rn.f32 	%f832, %f354, %f832, %f359;
	fma.rn.f32 	%f833, %f354, %f833, %f360;
	fma.rn.f32 	%f834, %f354, %f834, %f361;
	fma.rn.f32 	%f835, %f354, %f835, %f362;
	mul.f32 	%f363, %f37, %f349;
	mul.f32 	%f364, %f37, %f350;
	mul.f32 	%f365, %f37, %f351;
	mul.f32 	%f366, %f37, %f352;
	fma.rn.f32 	%f836, %f354, %f836, %f363;
	fma.rn.f32 	%f367, %f354, %f837, %f364;
	fma.rn.f32 	%f368, %f354, %f838, %f365;
	fma.rn.f32 	%f369, %f354, %f839, %f366;
	mov.b32 	 %f370, %r96;
	mov.b32 	 %f371, %r97;
	mov.b32 	 %f372, %r98;
	mov.b32 	 %f373, %r99;
	mul.f32 	%f374, %f37, %f370;
	mul.f32 	%f375, %f37, %f371;
	mul.f32 	%f376, %f37, %f372;
	mul.f32 	%f377, %f37, %f373;
	fma.rn.f32 	%f378, %f354, %f840, %f374;
	fma.rn.f32 	%f841, %f354, %f841, %f375;
	fma.rn.f32 	%f842, %f354, %f842, %f376;
	fma.rn.f32 	%f843, %f354, %f843, %f377;
	mul.f32 	%f379, %f368, %f368;
	fma.rn.f32 	%f380, %f367, %f367, %f379;
	fma.rn.f32 	%f381, %f369, %f369, %f380;
	fma.rn.f32 	%f382, %f378, %f378, %f381;
	sqrt.rn.f32 	%f383, %f382;
	rcp.rn.f32 	%f384, %f383;
	mul.f32 	%f837, %f367, %f384;
	mul.f32 	%f838, %f368, %f384;
	mul.f32 	%f839, %f369, %f384;
	mul.f32 	%f840, %f378, %f384;

BB6_12:
	mul.f32 	%f385, %f838, %f838;
	fma.rn.f32 	%f386, %f837, %f837, %f385;
	fma.rn.f32 	%f387, %f839, %f839, %f386;
	fma.rn.f32 	%f388, %f840, %f840, %f387;
	rcp.rn.f32 	%f389, %f388;
	mul.f32 	%f390, %f837, %f389;
	mul.f32 	%f391, %f838, %f389;
	mul.f32 	%f392, %f839, %f389;
	mul.f32 	%f393, %f840, %f389;
	mul.f32 	%f394, %f837, %f390;
	mul.f32 	%f395, %f838, %f391;
	mul.f32 	%f396, %f839, %f392;
	mul.f32 	%f397, %f837, %f391;
	mul.f32 	%f398, %f839, %f393;
	mul.f32 	%f399, %f837, %f392;
	mul.f32 	%f400, %f838, %f393;
	mul.f32 	%f401, %f838, %f392;
	mul.f32 	%f402, %f837, %f393;
	sub.f32 	%f403, %f394, %f395;
	sub.f32 	%f404, %f403, %f396;
	fma.rn.f32 	%f405, %f840, %f393, %f404;
	sub.f32 	%f406, %f397, %f398;
	add.f32 	%f407, %f406, %f406;
	add.f32 	%f408, %f399, %f400;
	add.f32 	%f409, %f408, %f408;
	add.f32 	%f410, %f397, %f398;
	add.f32 	%f411, %f410, %f410;
	sub.f32 	%f412, %f395, %f394;
	sub.f32 	%f413, %f412, %f396;
	fma.rn.f32 	%f414, %f840, %f393, %f413;
	sub.f32 	%f415, %f401, %f402;
	add.f32 	%f416, %f415, %f415;
	sub.f32 	%f417, %f399, %f400;
	add.f32 	%f418, %f417, %f417;
	add.f32 	%f419, %f401, %f402;
	add.f32 	%f420, %f419, %f419;
	neg.f32 	%f421, %f394;
	sub.f32 	%f422, %f421, %f395;
	add.f32 	%f423, %f396, %f422;
	fma.rn.f32 	%f424, %f840, %f393, %f423;
	mul.f32 	%f425, %f831, %f405;
	fma.rn.f32 	%f426, %f834, %f407, %f425;
	fma.rn.f32 	%f427, %f836, %f409, %f426;
	add.f32 	%f855, %f841, %f427;
	mul.f32 	%f428, %f834, %f414;
	fma.rn.f32 	%f429, %f831, %f411, %f428;
	fma.rn.f32 	%f430, %f836, %f416, %f429;
	add.f32 	%f851, %f842, %f430;
	mul.f32 	%f431, %f834, %f420;
	fma.rn.f32 	%f432, %f831, %f418, %f431;
	fma.rn.f32 	%f433, %f836, %f424, %f432;
	add.f32 	%f847, %f843, %f433;
	mul.f32 	%f434, %f830, %f405;
	fma.rn.f32 	%f435, %f833, %f407, %f434;
	fma.rn.f32 	%f854, %f835, %f409, %f435;
	mul.f32 	%f436, %f833, %f414;
	fma.rn.f32 	%f437, %f830, %f411, %f436;
	fma.rn.f32 	%f850, %f835, %f416, %f437;
	mul.f32 	%f438, %f833, %f420;
	fma.rn.f32 	%f439, %f830, %f418, %f438;
	fma.rn.f32 	%f846, %f835, %f424, %f439;
	mul.f32 	%f440, %f829, %f405;
	fma.rn.f32 	%f853, %f832, %f407, %f440;
	mul.f32 	%f441, %f832, %f414;
	fma.rn.f32 	%f849, %f829, %f411, %f441;
	mul.f32 	%f442, %f832, %f420;
	fma.rn.f32 	%f845, %f829, %f418, %f442;
	mul.f32 	%f852, %f828, %f405;
	mul.f32 	%f848, %f828, %f411;
	mul.f32 	%f844, %f828, %f418;

BB6_15:
	mul.f32 	%f480, %f845, %f850;
	mul.f32 	%f481, %f846, %f849;
	sub.f32 	%f482, %f481, %f480;
	mul.f32 	%f483, %f852, %f482;
	mul.f32 	%f484, %f844, %f850;
	mul.f32 	%f485, %f846, %f848;
	sub.f32 	%f486, %f485, %f484;
	mul.f32 	%f487, %f486, %f853;
	sub.f32 	%f488, %f483, %f487;
	mul.f32 	%f489, %f844, %f849;
	mul.f32 	%f490, %f845, %f848;
	sub.f32 	%f491, %f490, %f489;
	fma.rn.f32 	%f492, %f491, %f854, %f488;
	rcp.rn.f32 	%f493, %f492;
	mul.f32 	%f864, %f482, %f493;
	mul.f32 	%f494, %f846, %f853;
	mul.f32 	%f495, %f845, %f854;
	sub.f32 	%f496, %f495, %f494;
	mul.f32 	%f865, %f493, %f496;
	mul.f32 	%f497, %f849, %f854;
	mul.f32 	%f498, %f850, %f853;
	sub.f32 	%f499, %f498, %f497;
	mul.f32 	%f866, %f493, %f499;
	sub.f32 	%f500, %f484, %f485;
	mul.f32 	%f860, %f500, %f493;
	mul.f32 	%f501, %f844, %f854;
	mul.f32 	%f502, %f846, %f852;
	sub.f32 	%f503, %f502, %f501;
	mul.f32 	%f861, %f493, %f503;
	mul.f32 	%f504, %f850, %f852;
	mul.f32 	%f505, %f848, %f854;
	sub.f32 	%f506, %f505, %f504;
	mul.f32 	%f862, %f493, %f506;
	mul.f32 	%f856, %f491, %f493;
	mul.f32 	%f507, %f845, %f852;
	mul.f32 	%f508, %f844, %f853;
	sub.f32 	%f509, %f508, %f507;
	mul.f32 	%f857, %f509, %f493;
	mul.f32 	%f510, %f848, %f853;
	mul.f32 	%f511, %f849, %f852;
	sub.f32 	%f512, %f511, %f510;
	mul.f32 	%f858, %f512, %f493;
	mul.f32 	%f513, %f855, %f864;
	neg.f32 	%f514, %f513;
	mul.f32 	%f515, %f851, %f865;
	sub.f32 	%f516, %f514, %f515;
	mul.f32 	%f517, %f847, %f866;
	sub.f32 	%f867, %f516, %f517;
	mul.f32 	%f518, %f855, %f860;
	neg.f32 	%f519, %f518;
	mul.f32 	%f520, %f851, %f861;
	sub.f32 	%f521, %f519, %f520;
	mul.f32 	%f522, %f847, %f862;
	sub.f32 	%f863, %f521, %f522;
	mul.f32 	%f523, %f855, %f856;
	neg.f32 	%f524, %f523;
	mul.f32 	%f525, %f851, %f857;
	sub.f32 	%f526, %f524, %f525;
	mul.f32 	%f527, %f847, %f858;
	sub.f32 	%f859, %f526, %f527;
	bra.uni 	BB6_16;

BB6_5:
	setp.ne.s32	%p4, %r11, 1;
	mov.f32 	%f857, %f856;
	mov.f32 	%f859, %f856;
	mov.f32 	%f860, %f856;
	mov.f32 	%f861, %f858;
	mov.f32 	%f862, %f856;
	mov.f32 	%f863, %f856;
	mov.f32 	%f864, %f858;
	mov.f32 	%f865, %f856;
	mov.f32 	%f866, %f856;
	mov.f32 	%f867, %f856;
	@%p4 bra 	BB6_16;

	// inline asm
	call (%rd22), _optix_get_static_transform_from_handle, (%rd20);
	// inline asm
	add.s64 	%rd264, %rd22, 64;

BB6_8:
	// inline asm
	cvta.to.global.u64 %rd26, %rd264;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r13,%r14,%r15,%r16}, [%rd26];
	// inline asm
	mov.b32 	 %f864, %r13;
	mov.b32 	 %f865, %r14;
	mov.b32 	 %f866, %r15;
	mov.b32 	 %f867, %r16;
	add.s64 	%rd30, %rd264, 16;
	// inline asm
	cvta.to.global.u64 %rd29, %rd30;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r17,%r18,%r19,%r20}, [%rd29];
	// inline asm
	mov.b32 	 %f860, %r17;
	mov.b32 	 %f861, %r18;
	mov.b32 	 %f862, %r19;
	mov.b32 	 %f863, %r20;
	add.s64 	%rd33, %rd264, 32;
	// inline asm
	cvta.to.global.u64 %rd32, %rd33;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r21,%r22,%r23,%r24}, [%rd32];
	// inline asm
	mov.b32 	 %f856, %r21;
	mov.b32 	 %f857, %r22;
	mov.b32 	 %f858, %r23;
	mov.b32 	 %f859, %r24;

BB6_16:
	setp.eq.s32	%p8, %r326, 0;
	@%p8 bra 	BB6_17;
	bra.uni 	BB6_18;

BB6_17:
	mov.f32 	%f827, %f867;
	mov.f32 	%f826, %f866;
	mov.f32 	%f825, %f865;
	mov.f32 	%f824, %f864;
	mov.f32 	%f823, %f863;
	mov.f32 	%f822, %f862;
	mov.f32 	%f821, %f861;
	mov.f32 	%f820, %f860;
	mov.f32 	%f819, %f859;
	mov.f32 	%f818, %f858;
	mov.f32 	%f817, %f857;
	mov.f32 	%f816, %f856;
	bra.uni 	BB6_19;

BB6_18:
	mul.f32 	%f528, %f820, %f865;
	fma.rn.f32 	%f529, %f824, %f864, %f528;
	fma.rn.f32 	%f151, %f816, %f866, %f529;
	mul.f32 	%f530, %f821, %f865;
	fma.rn.f32 	%f531, %f825, %f864, %f530;
	fma.rn.f32 	%f152, %f817, %f866, %f531;
	mul.f32 	%f532, %f822, %f865;
	fma.rn.f32 	%f533, %f826, %f864, %f532;
	fma.rn.f32 	%f153, %f818, %f866, %f533;
	mul.f32 	%f534, %f823, %f865;
	fma.rn.f32 	%f535, %f827, %f864, %f534;
	fma.rn.f32 	%f536, %f819, %f866, %f535;
	add.f32 	%f154, %f867, %f536;
	mul.f32 	%f537, %f820, %f861;
	fma.rn.f32 	%f538, %f824, %f860, %f537;
	fma.rn.f32 	%f155, %f816, %f862, %f538;
	mul.f32 	%f539, %f821, %f861;
	fma.rn.f32 	%f540, %f825, %f860, %f539;
	fma.rn.f32 	%f156, %f817, %f862, %f540;
	mul.f32 	%f541, %f822, %f861;
	fma.rn.f32 	%f542, %f826, %f860, %f541;
	fma.rn.f32 	%f157, %f818, %f862, %f542;
	mul.f32 	%f543, %f823, %f861;
	fma.rn.f32 	%f544, %f827, %f860, %f543;
	fma.rn.f32 	%f545, %f819, %f862, %f544;
	add.f32 	%f158, %f863, %f545;
	mul.f32 	%f546, %f820, %f857;
	fma.rn.f32 	%f547, %f824, %f856, %f546;
	fma.rn.f32 	%f816, %f816, %f858, %f547;
	mul.f32 	%f548, %f821, %f857;
	fma.rn.f32 	%f549, %f825, %f856, %f548;
	fma.rn.f32 	%f817, %f817, %f858, %f549;
	mul.f32 	%f550, %f822, %f857;
	fma.rn.f32 	%f551, %f826, %f856, %f550;
	fma.rn.f32 	%f818, %f818, %f858, %f551;
	mul.f32 	%f552, %f823, %f857;
	fma.rn.f32 	%f553, %f827, %f856, %f552;
	fma.rn.f32 	%f554, %f819, %f858, %f553;
	add.f32 	%f819, %f859, %f554;
	mov.f32 	%f827, %f154;
	mov.f32 	%f826, %f153;
	mov.f32 	%f825, %f152;
	mov.f32 	%f824, %f151;
	mov.f32 	%f823, %f158;
	mov.f32 	%f822, %f157;
	mov.f32 	%f821, %f156;
	mov.f32 	%f820, %f155;

BB6_19:
	add.s32 	%r326, %r326, 1;
	setp.lt.u32	%p9, %r326, %r8;
	@%p9 bra 	BB6_3;

	mul.f32 	%f555, %f313, %f824;
	fma.rn.f32 	%f556, %f314, %f825, %f555;
	fma.rn.f32 	%f557, %f880, %f826, %f556;
	add.f32 	%f882, %f827, %f557;
	mul.f32 	%f558, %f313, %f820;
	fma.rn.f32 	%f559, %f314, %f821, %f558;
	fma.rn.f32 	%f560, %f880, %f822, %f559;
	add.f32 	%f881, %f823, %f560;
	mul.f32 	%f561, %f313, %f816;
	fma.rn.f32 	%f562, %f314, %f817, %f561;
	fma.rn.f32 	%f563, %f880, %f818, %f562;
	add.f32 	%f880, %f819, %f563;
	bra.uni 	BB6_21;

BB6_1:
	mov.f32 	%f881, %f314;
	mov.f32 	%f882, %f313;

BB6_21:
	setp.eq.s32	%p20, %r8, 0;
	// inline asm
	call (%f564), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f565), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f931), _optix_get_world_ray_direction_z, ();
	// inline asm
	@%p20 bra 	BB6_22;

	mov.u32 	%r327, 0;
	// inline asm
	call (%f567), _optix_get_ray_time, ();
	// inline asm

BB6_24:
	.pragma "nounroll";
	// inline asm
	call (%rd141), _optix_get_transform_list_handle, (%r327);
	// inline asm
	// inline asm
	call (%r161), _optix_get_transform_type_from_handle, (%rd141);
	// inline asm
	and.b32  	%r162, %r161, -2;
	setp.eq.s32	%p11, %r162, 2;
	@%p11 bra 	BB6_30;
	bra.uni 	BB6_25;

BB6_30:
	setp.eq.s32	%p14, %r161, 2;
	@%p14 bra 	BB6_34;
	bra.uni 	BB6_31;

BB6_34:
	// inline asm
	call (%rd215), _optix_get_matrix_motion_transform_from_handle, (%rd141);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd217, %rd215;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r250,%r251,%r252,%r253}, [%rd217];
	// inline asm
	mov.b32	{%rs7, %rs8}, %r252;
	add.s64 	%rd221, %rd215, 16;
	// inline asm
	cvta.to.global.u64 %rd220, %rd221;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r254,%r255,%r256,%r257}, [%rd220];
	// inline asm
	add.s64 	%rd224, %rd215, 32;
	// inline asm
	cvta.to.global.u64 %rd223, %rd224;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r258,%r259,%r260,%r261}, [%rd223];
	// inline asm
	add.s64 	%rd227, %rd215, 48;
	// inline asm
	cvta.to.global.u64 %rd226, %rd227;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r262,%r263,%r264,%r265}, [%rd226];
	// inline asm
	add.s64 	%rd230, %rd215, 64;
	// inline asm
	cvta.to.global.u64 %rd229, %rd230;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r266,%r267,%r268,%r269}, [%rd229];
	// inline asm
	add.s64 	%rd233, %rd215, 80;
	// inline asm
	cvta.to.global.u64 %rd232, %rd233;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r270,%r271,%r272,%r273}, [%rd232];
	// inline asm
	add.s64 	%rd236, %rd215, 96;
	// inline asm
	cvta.to.global.u64 %rd235, %rd236;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r274,%r275,%r276,%r277}, [%rd235];
	// inline asm
	add.s64 	%rd239, %rd215, 112;
	// inline asm
	cvta.to.global.u64 %rd238, %rd239;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r278,%r279,%r280,%r281}, [%rd238];
	// inline asm
	mov.b32 	 %f670, %r253;
	mov.b32 	 %f671, %r254;
	cvt.u32.u16	%r294, %rs7;
	add.s32 	%r295, %r294, -1;
	cvt.rn.f32.s32	%f672, %r295;
	sub.f32 	%f673, %f567, %f670;
	mul.f32 	%f674, %f673, %f672;
	sub.f32 	%f675, %f671, %f670;
	div.rn.f32 	%f676, %f674, %f675;
	min.f32 	%f677, %f672, %f676;
	mov.f32 	%f678, 0f00000000;
	max.f32 	%f679, %f678, %f677;
	cvt.rmi.f32.f32	%f680, %f679;
	cvt.rzi.s32.f32	%r296, %f680;
	cvt.s64.s32	%rd18, %r296;
	mul.wide.s32 	%rd250, %r296, 48;
	add.s64 	%rd242, %rd224, %rd250;
	// inline asm
	cvta.to.global.u64 %rd241, %rd242;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r282,%r283,%r284,%r285}, [%rd241];
	// inline asm
	mov.b32 	 %f908, %r282;
	mov.b32 	 %f909, %r283;
	mov.b32 	 %f910, %r284;
	add.s64 	%rd245, %rd242, 16;
	// inline asm
	cvta.to.global.u64 %rd244, %rd245;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r286,%r287,%r288,%r289}, [%rd244];
	// inline asm
	mov.b32 	 %f905, %r286;
	mov.b32 	 %f906, %r287;
	mov.b32 	 %f907, %r288;
	add.s64 	%rd248, %rd242, 32;
	// inline asm
	cvta.to.global.u64 %rd247, %rd248;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r290,%r291,%r292,%r293}, [%rd247];
	// inline asm
	sub.f32 	%f249, %f679, %f680;
	mov.b32 	 %f902, %r290;
	mov.b32 	 %f903, %r291;
	mov.b32 	 %f904, %r292;
	setp.leu.f32	%p16, %f249, 0f00000000;
	@%p16 bra 	BB6_36;

	mul.lo.s64 	%rd260, %rd18, 48;
	add.s64 	%rd261, %rd215, %rd260;
	add.s64 	%rd252, %rd261, 80;
	// inline asm
	cvta.to.global.u64 %rd251, %rd252;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r297,%r298,%r299,%r300}, [%rd251];
	// inline asm
	mov.b32 	 %f681, %r297;
	mov.b32 	 %f682, %r298;
	mov.b32 	 %f683, %r299;
	add.s64 	%rd255, %rd261, 96;
	// inline asm
	cvta.to.global.u64 %rd254, %rd255;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r301,%r302,%r303,%r304}, [%rd254];
	// inline asm
	mov.b32 	 %f684, %r301;
	mov.b32 	 %f685, %r302;
	mov.b32 	 %f686, %r303;
	add.s64 	%rd258, %rd261, 112;
	// inline asm
	cvta.to.global.u64 %rd257, %rd258;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r305,%r306,%r307,%r308}, [%rd257];
	// inline asm
	mov.f32 	%f687, 0f3F800000;
	sub.f32 	%f688, %f687, %f249;
	mul.f32 	%f689, %f249, %f681;
	mul.f32 	%f690, %f249, %f682;
	mul.f32 	%f691, %f249, %f683;
	fma.rn.f32 	%f908, %f688, %f908, %f689;
	fma.rn.f32 	%f909, %f688, %f909, %f690;
	fma.rn.f32 	%f910, %f688, %f910, %f691;
	mul.f32 	%f692, %f249, %f684;
	mul.f32 	%f693, %f249, %f685;
	mul.f32 	%f694, %f249, %f686;
	fma.rn.f32 	%f905, %f688, %f905, %f692;
	fma.rn.f32 	%f906, %f688, %f906, %f693;
	fma.rn.f32 	%f907, %f688, %f907, %f694;
	mov.b32 	 %f695, %r305;
	mov.b32 	 %f696, %r306;
	mov.b32 	 %f697, %r307;
	mul.f32 	%f698, %f249, %f695;
	mul.f32 	%f699, %f249, %f696;
	mul.f32 	%f700, %f249, %f697;
	fma.rn.f32 	%f902, %f688, %f902, %f698;
	fma.rn.f32 	%f903, %f688, %f903, %f699;
	fma.rn.f32 	%f904, %f688, %f904, %f700;
	bra.uni 	BB6_36;

BB6_25:
	mov.f32 	%f911, 0f00000000;
	mov.f32 	%f913, 0f3F800000;
	setp.eq.s32	%p12, %r161, 4;
	@%p12 bra 	BB6_28;
	bra.uni 	BB6_26;

BB6_28:
	// inline asm
	call (%rd265), _optix_get_instance_inverse_transform_from_handle, (%rd141);
	// inline asm
	bra.uni 	BB6_29;

BB6_31:
	// inline asm
	call (%rd156), _optix_get_srt_motion_transform_from_handle, (%rd141);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd158, %rd156;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r175,%r176,%r177,%r178}, [%rd158];
	// inline asm
	mov.b32	{%rs5, %rs6}, %r177;
	add.s64 	%rd162, %rd156, 16;
	// inline asm
	cvta.to.global.u64 %rd161, %rd162;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r179,%r180,%r181,%r182}, [%rd161];
	// inline asm
	add.s64 	%rd165, %rd156, 32;
	// inline asm
	cvta.to.global.u64 %rd164, %rd165;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r183,%r184,%r185,%r186}, [%rd164];
	// inline asm
	add.s64 	%rd168, %rd156, 48;
	// inline asm
	cvta.to.global.u64 %rd167, %rd168;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r187,%r188,%r189,%r190}, [%rd167];
	// inline asm
	add.s64 	%rd171, %rd156, 64;
	// inline asm
	cvta.to.global.u64 %rd170, %rd171;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r191,%r192,%r193,%r194}, [%rd170];
	// inline asm
	add.s64 	%rd174, %rd156, 80;
	// inline asm
	cvta.to.global.u64 %rd173, %rd174;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r195,%r196,%r197,%r198}, [%rd173];
	// inline asm
	add.s64 	%rd177, %rd156, 96;
	// inline asm
	cvta.to.global.u64 %rd176, %rd177;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r199,%r200,%r201,%r202}, [%rd176];
	// inline asm
	add.s64 	%rd180, %rd156, 112;
	// inline asm
	cvta.to.global.u64 %rd179, %rd180;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r203,%r204,%r205,%r206}, [%rd179];
	// inline asm
	add.s64 	%rd183, %rd156, 128;
	// inline asm
	cvta.to.global.u64 %rd182, %rd183;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r207,%r208,%r209,%r210}, [%rd182];
	// inline asm
	add.s64 	%rd186, %rd156, 144;
	// inline asm
	cvta.to.global.u64 %rd185, %rd186;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r211,%r212,%r213,%r214}, [%rd185];
	// inline asm
	mov.b32 	 %f578, %r178;
	mov.b32 	 %f579, %r179;
	cvt.u32.u16	%r231, %rs5;
	add.s32 	%r232, %r231, -1;
	cvt.rn.f32.s32	%f580, %r232;
	sub.f32 	%f581, %f567, %f578;
	mul.f32 	%f582, %f581, %f580;
	sub.f32 	%f583, %f579, %f578;
	div.rn.f32 	%f584, %f582, %f583;
	min.f32 	%f585, %f580, %f584;
	mov.f32 	%f586, 0f00000000;
	max.f32 	%f587, %f586, %f585;
	cvt.rmi.f32.f32	%f588, %f587;
	cvt.rzi.s32.f32	%r233, %f588;
	cvt.s64.s32	%rd16, %r233;
	mul.wide.s32 	%rd200, %r233, 64;
	add.s64 	%rd189, %rd165, %rd200;
	// inline asm
	cvta.to.global.u64 %rd188, %rd189;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r215,%r216,%r217,%r218}, [%rd188];
	// inline asm
	mov.b32 	 %f892, %r215;
	mov.b32 	 %f893, %r216;
	mov.b32 	 %f894, %r217;
	add.s64 	%rd192, %rd189, 16;
	// inline asm
	cvta.to.global.u64 %rd191, %rd192;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r219,%r220,%r221,%r222}, [%rd191];
	// inline asm
	mov.b32 	 %f895, %r219;
	mov.b32 	 %f896, %r220;
	mov.b32 	 %f897, %r222;
	add.s64 	%rd195, %rd189, 32;
	// inline asm
	cvta.to.global.u64 %rd194, %rd195;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r223,%r224,%r225,%r226}, [%rd194];
	// inline asm
	sub.f32 	%f209, %f587, %f588;
	mov.b32 	 %f898, %r224;
	mov.b32 	 %f899, %r225;
	mov.b32 	 %f900, %r226;
	add.s64 	%rd198, %rd189, 48;
	// inline asm
	cvta.to.global.u64 %rd197, %rd198;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r227,%r228,%r229,%r230}, [%rd197];
	// inline asm
	mov.b32 	 %f901, %r227;
	setp.leu.f32	%p15, %f209, 0f00000000;
	@%p15 bra 	BB6_33;

	shl.b64 	%rd213, %rd16, 6;
	add.s64 	%rd214, %rd213, %rd156;
	add.s64 	%rd202, %rd214, 96;
	// inline asm
	cvta.to.global.u64 %rd201, %rd202;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r234,%r235,%r236,%r237}, [%rd201];
	// inline asm
	mov.b32 	 %f589, %r234;
	mov.b32 	 %f590, %r235;
	mov.b32 	 %f591, %r236;
	add.s64 	%rd205, %rd214, 112;
	// inline asm
	cvta.to.global.u64 %rd204, %rd205;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r238,%r239,%r240,%r241}, [%rd204];
	// inline asm
	mov.b32 	 %f592, %r238;
	mov.b32 	 %f593, %r239;
	mov.b32 	 %f594, %r241;
	add.s64 	%rd208, %rd214, 128;
	// inline asm
	cvta.to.global.u64 %rd207, %rd208;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r242,%r243,%r244,%r245}, [%rd207];
	// inline asm
	mov.b32 	 %f595, %r243;
	mov.b32 	 %f596, %r244;
	mov.b32 	 %f597, %r245;
	add.s64 	%rd211, %rd214, 144;
	// inline asm
	cvta.to.global.u64 %rd210, %rd211;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r246,%r247,%r248,%r249}, [%rd210];
	// inline asm
	mov.f32 	%f598, 0f3F800000;
	sub.f32 	%f599, %f598, %f209;
	mul.f32 	%f600, %f209, %f589;
	mul.f32 	%f601, %f209, %f590;
	mul.f32 	%f602, %f209, %f591;
	fma.rn.f32 	%f892, %f599, %f892, %f600;
	fma.rn.f32 	%f893, %f599, %f893, %f601;
	fma.rn.f32 	%f894, %f599, %f894, %f602;
	mul.f32 	%f603, %f209, %f592;
	mul.f32 	%f604, %f209, %f593;
	mul.f32 	%f605, %f209, %f594;
	fma.rn.f32 	%f895, %f599, %f895, %f603;
	fma.rn.f32 	%f896, %f599, %f896, %f604;
	fma.rn.f32 	%f897, %f599, %f897, %f605;
	mul.f32 	%f606, %f209, %f595;
	mul.f32 	%f607, %f209, %f596;
	mul.f32 	%f608, %f209, %f597;
	fma.rn.f32 	%f609, %f599, %f898, %f606;
	fma.rn.f32 	%f610, %f599, %f899, %f607;
	fma.rn.f32 	%f611, %f599, %f900, %f608;
	mov.b32 	 %f612, %r246;
	mul.f32 	%f613, %f209, %f612;
	fma.rn.f32 	%f614, %f599, %f901, %f613;
	mul.f32 	%f615, %f610, %f610;
	fma.rn.f32 	%f616, %f609, %f609, %f615;
	fma.rn.f32 	%f617, %f611, %f611, %f616;
	fma.rn.f32 	%f618, %f614, %f614, %f617;
	sqrt.rn.f32 	%f619, %f618;
	rcp.rn.f32 	%f620, %f619;
	mul.f32 	%f898, %f609, %f620;
	mul.f32 	%f899, %f610, %f620;
	mul.f32 	%f900, %f611, %f620;
	mul.f32 	%f901, %f614, %f620;

BB6_33:
	mul.f32 	%f621, %f899, %f899;
	fma.rn.f32 	%f622, %f898, %f898, %f621;
	fma.rn.f32 	%f623, %f900, %f900, %f622;
	fma.rn.f32 	%f624, %f901, %f901, %f623;
	rcp.rn.f32 	%f625, %f624;
	mul.f32 	%f626, %f898, %f625;
	mul.f32 	%f627, %f899, %f625;
	mul.f32 	%f628, %f900, %f625;
	mul.f32 	%f629, %f901, %f625;
	mul.f32 	%f630, %f898, %f626;
	mul.f32 	%f631, %f899, %f627;
	mul.f32 	%f632, %f900, %f628;
	mul.f32 	%f633, %f898, %f627;
	mul.f32 	%f634, %f900, %f629;
	mul.f32 	%f635, %f898, %f628;
	mul.f32 	%f636, %f899, %f629;
	mul.f32 	%f637, %f899, %f628;
	mul.f32 	%f638, %f898, %f629;
	sub.f32 	%f639, %f630, %f631;
	sub.f32 	%f640, %f639, %f632;
	fma.rn.f32 	%f641, %f901, %f629, %f640;
	sub.f32 	%f642, %f633, %f634;
	add.f32 	%f643, %f642, %f642;
	add.f32 	%f644, %f635, %f636;
	add.f32 	%f645, %f644, %f644;
	add.f32 	%f646, %f633, %f634;
	add.f32 	%f647, %f646, %f646;
	sub.f32 	%f648, %f631, %f630;
	sub.f32 	%f649, %f648, %f632;
	fma.rn.f32 	%f650, %f901, %f629, %f649;
	sub.f32 	%f651, %f637, %f638;
	add.f32 	%f652, %f651, %f651;
	sub.f32 	%f653, %f635, %f636;
	add.f32 	%f654, %f653, %f653;
	add.f32 	%f655, %f637, %f638;
	add.f32 	%f656, %f655, %f655;
	neg.f32 	%f657, %f630;
	sub.f32 	%f658, %f657, %f631;
	add.f32 	%f659, %f632, %f658;
	fma.rn.f32 	%f660, %f901, %f629, %f659;
	mul.f32 	%f661, %f894, %f641;
	fma.rn.f32 	%f662, %f896, %f643, %f661;
	fma.rn.f32 	%f910, %f897, %f645, %f662;
	mul.f32 	%f663, %f896, %f650;
	fma.rn.f32 	%f664, %f894, %f647, %f663;
	fma.rn.f32 	%f907, %f897, %f652, %f664;
	mul.f32 	%f665, %f896, %f656;
	fma.rn.f32 	%f666, %f894, %f654, %f665;
	fma.rn.f32 	%f904, %f897, %f660, %f666;
	mul.f32 	%f667, %f893, %f641;
	fma.rn.f32 	%f909, %f895, %f643, %f667;
	mul.f32 	%f668, %f895, %f650;
	fma.rn.f32 	%f906, %f893, %f647, %f668;
	mul.f32 	%f669, %f895, %f656;
	fma.rn.f32 	%f903, %f893, %f654, %f669;
	mul.f32 	%f908, %f892, %f641;
	mul.f32 	%f905, %f892, %f647;
	mul.f32 	%f902, %f892, %f654;

BB6_36:
	mul.f32 	%f701, %f903, %f907;
	mul.f32 	%f702, %f904, %f906;
	sub.f32 	%f703, %f702, %f701;
	mul.f32 	%f704, %f908, %f703;
	mul.f32 	%f705, %f902, %f907;
	mul.f32 	%f706, %f904, %f905;
	sub.f32 	%f707, %f706, %f705;
	mul.f32 	%f708, %f707, %f909;
	sub.f32 	%f709, %f704, %f708;
	mul.f32 	%f710, %f902, %f906;
	mul.f32 	%f711, %f903, %f905;
	sub.f32 	%f712, %f711, %f710;
	fma.rn.f32 	%f713, %f712, %f910, %f709;
	rcp.rn.f32 	%f714, %f713;
	mul.f32 	%f917, %f703, %f714;
	mul.f32 	%f715, %f904, %f909;
	mul.f32 	%f716, %f903, %f910;
	sub.f32 	%f717, %f716, %f715;
	mul.f32 	%f918, %f714, %f717;
	mul.f32 	%f718, %f906, %f910;
	mul.f32 	%f719, %f907, %f909;
	sub.f32 	%f720, %f719, %f718;
	mul.f32 	%f919, %f714, %f720;
	sub.f32 	%f721, %f705, %f706;
	mul.f32 	%f914, %f721, %f714;
	mul.f32 	%f722, %f902, %f910;
	mul.f32 	%f723, %f904, %f908;
	sub.f32 	%f724, %f723, %f722;
	mul.f32 	%f915, %f714, %f724;
	mul.f32 	%f725, %f907, %f908;
	mul.f32 	%f726, %f905, %f910;
	sub.f32 	%f727, %f726, %f725;
	mul.f32 	%f916, %f714, %f727;
	mul.f32 	%f911, %f712, %f714;
	mul.f32 	%f728, %f903, %f908;
	mul.f32 	%f729, %f902, %f909;
	sub.f32 	%f730, %f729, %f728;
	mul.f32 	%f912, %f730, %f714;
	mul.f32 	%f731, %f905, %f909;
	mul.f32 	%f732, %f906, %f908;
	sub.f32 	%f733, %f732, %f731;
	mul.f32 	%f913, %f733, %f714;
	bra.uni 	BB6_37;

BB6_26:
	setp.ne.s32	%p13, %r161, 1;
	mov.f32 	%f912, %f911;
	mov.f32 	%f914, %f911;
	mov.f32 	%f915, %f913;
	mov.f32 	%f916, %f911;
	mov.f32 	%f917, %f913;
	mov.f32 	%f918, %f911;
	mov.f32 	%f919, %f911;
	@%p13 bra 	BB6_37;

	// inline asm
	call (%rd143), _optix_get_static_transform_from_handle, (%rd141);
	// inline asm
	add.s64 	%rd265, %rd143, 64;

BB6_29:
	// inline asm
	cvta.to.global.u64 %rd147, %rd265;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r163,%r164,%r165,%r166}, [%rd147];
	// inline asm
	mov.b32 	 %f917, %r163;
	mov.b32 	 %f918, %r164;
	mov.b32 	 %f919, %r165;
	add.s64 	%rd151, %rd265, 16;
	// inline asm
	cvta.to.global.u64 %rd150, %rd151;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r167,%r168,%r169,%r170}, [%rd150];
	// inline asm
	mov.b32 	 %f914, %r167;
	mov.b32 	 %f915, %r168;
	mov.b32 	 %f916, %r169;
	add.s64 	%rd154, %rd265, 32;
	// inline asm
	cvta.to.global.u64 %rd153, %rd154;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r171,%r172,%r173,%r174}, [%rd153];
	// inline asm
	mov.b32 	 %f911, %r171;
	mov.b32 	 %f912, %r172;
	mov.b32 	 %f913, %r173;

BB6_37:
	setp.eq.s32	%p17, %r327, 0;
	@%p17 bra 	BB6_38;
	bra.uni 	BB6_39;

BB6_38:
	mov.f32 	%f891, %f911;
	mov.f32 	%f890, %f912;
	mov.f32 	%f889, %f913;
	mov.f32 	%f888, %f914;
	mov.f32 	%f887, %f915;
	mov.f32 	%f886, %f916;
	mov.f32 	%f885, %f917;
	mov.f32 	%f884, %f918;
	mov.f32 	%f883, %f919;
	bra.uni 	BB6_40;

BB6_39:
	mul.f32 	%f734, %f888, %f918;
	fma.rn.f32 	%f735, %f885, %f917, %f734;
	fma.rn.f32 	%f289, %f891, %f919, %f735;
	mul.f32 	%f736, %f887, %f918;
	fma.rn.f32 	%f737, %f884, %f917, %f736;
	fma.rn.f32 	%f290, %f890, %f919, %f737;
	mul.f32 	%f738, %f886, %f918;
	fma.rn.f32 	%f739, %f883, %f917, %f738;
	fma.rn.f32 	%f291, %f889, %f919, %f739;
	mul.f32 	%f740, %f888, %f915;
	fma.rn.f32 	%f741, %f885, %f914, %f740;
	fma.rn.f32 	%f292, %f891, %f916, %f741;
	mul.f32 	%f742, %f887, %f915;
	fma.rn.f32 	%f743, %f884, %f914, %f742;
	fma.rn.f32 	%f293, %f890, %f916, %f743;
	mul.f32 	%f744, %f886, %f915;
	fma.rn.f32 	%f745, %f883, %f914, %f744;
	fma.rn.f32 	%f294, %f889, %f916, %f745;
	mul.f32 	%f746, %f888, %f912;
	fma.rn.f32 	%f747, %f885, %f911, %f746;
	fma.rn.f32 	%f891, %f891, %f913, %f747;
	mul.f32 	%f748, %f887, %f912;
	fma.rn.f32 	%f749, %f884, %f911, %f748;
	fma.rn.f32 	%f890, %f890, %f913, %f749;
	mul.f32 	%f750, %f886, %f912;
	fma.rn.f32 	%f751, %f883, %f911, %f750;
	fma.rn.f32 	%f889, %f889, %f913, %f751;
	mov.f32 	%f888, %f292;
	mov.f32 	%f887, %f293;
	mov.f32 	%f886, %f294;
	mov.f32 	%f885, %f289;
	mov.f32 	%f884, %f290;
	mov.f32 	%f883, %f291;

BB6_40:
	add.s32 	%r327, %r327, 1;
	setp.lt.u32	%p18, %r327, %r8;
	@%p18 bra 	BB6_24;

	mul.f32 	%f752, %f565, %f884;
	fma.rn.f32 	%f753, %f564, %f885, %f752;
	fma.rn.f32 	%f929, %f931, %f883, %f753;
	mul.f32 	%f754, %f565, %f887;
	fma.rn.f32 	%f755, %f564, %f888, %f754;
	fma.rn.f32 	%f930, %f931, %f886, %f755;
	mul.f32 	%f756, %f565, %f890;
	fma.rn.f32 	%f757, %f564, %f891, %f756;
	fma.rn.f32 	%f931, %f931, %f889, %f757;
	bra.uni 	BB6_42;

BB6_22:
	mov.f32 	%f929, %f564;
	mov.f32 	%f930, %f565;

BB6_42:
	// inline asm
	call (%f758), _optix_get_ray_tmin, ();
	// inline asm
	fma.rn.f32 	%f761, %f929, %f758, %f882;
	fma.rn.f32 	%f762, %f930, %f758, %f881;
	fma.rn.f32 	%f763, %f931, %f758, %f880;
	ld.v4.f32 	{%f764, %f765, %f766, %f767}, [%rd2+80];
	mov.u32 	%r316, 0;
	mov.u32 	%r311, 1;
	mov.u32 	%r313, 2;
	ld.v4.f32 	{%f771, %f772, %f773, %f774}, [%rd2+32];
	fma.rn.f32 	%f776, %f761, %f771, %f764;
	fma.rn.f32 	%f778, %f761, %f772, %f765;
	fma.rn.f32 	%f780, %f761, %f773, %f766;
	ld.v4.f32 	{%f781, %f782, %f783, %f784}, [%rd2+48];
	fma.rn.f32 	%f786, %f762, %f781, %f776;
	fma.rn.f32 	%f788, %f762, %f782, %f778;
	fma.rn.f32 	%f790, %f762, %f783, %f780;
	ld.v4.f32 	{%f791, %f792, %f793, %f794}, [%rd2+64];
	fma.rn.f32 	%f796, %f763, %f791, %f786;
	fma.rn.f32 	%f798, %f763, %f792, %f788;
	fma.rn.f32 	%f800, %f763, %f793, %f790;
	mul.f32 	%f801, %f929, %f771;
	mul.f32 	%f802, %f929, %f772;
	mul.f32 	%f803, %f929, %f773;
	fma.rn.f32 	%f804, %f930, %f781, %f801;
	fma.rn.f32 	%f805, %f930, %f782, %f802;
	fma.rn.f32 	%f806, %f930, %f783, %f803;
	fma.rn.f32 	%f807, %f931, %f791, %f804;
	fma.rn.f32 	%f808, %f931, %f792, %f805;
	fma.rn.f32 	%f809, %f931, %f793, %f806;
	neg.f32 	%f810, %f800;
	div.rn.f32 	%f811, %f810, %f809;
	fma.rn.f32 	%f812, %f811, %f807, %f796;
	fma.rn.f32 	%f813, %f811, %f808, %f798;
	ld.u32 	%r318, [%rd19];
	mov.b32 	 %r310, %f811;
	// inline asm
	call _optix_set_payload, (%r316, %r310);
	// inline asm
	mov.b32 	 %r312, %f812;
	// inline asm
	call _optix_set_payload, (%r311, %r312);
	// inline asm
	mov.b32 	 %r314, %f813;
	// inline asm
	call _optix_set_payload, (%r313, %r314);
	// inline asm
	mov.u32 	%r315, 3;
	// inline asm
	call _optix_set_payload, (%r315, %r316);
	// inline asm
	mov.u32 	%r317, 4;
	// inline asm
	call _optix_set_payload, (%r317, %r318);
	// inline asm
	mov.u32 	%r320, 5;
	// inline asm
	call (%r319), _optix_get_payload, (%r320);
	// inline asm
	setp.eq.s32	%p19, %r319, 0;
	@%p19 bra 	BB6_44;

	// inline asm
	call (%r321), _optix_read_instance_id, ();
	// inline asm
	// inline asm
	call _optix_set_payload, (%r320, %r321);
	// inline asm

BB6_44:
	ret;
}

	// .globl	__intersection__sphere
.visible .entry __intersection__sphere(

)
{
	.reg .pred 	%p<39>;
	.reg .b16 	%rs<14>;
	.reg .f32 	%f<924>;
	.reg .b32 	%r<320>;
	.reg .b64 	%rd<265>;


	// inline asm
	call (%rd18), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.u64 	%rd1, [%rd18+8];
	// inline asm
	call (%f324), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f325), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f870), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%r8), _optix_get_transform_list_size, ();
	// inline asm
	setp.eq.s32	%p3, %r8, 0;
	@%p3 bra 	BB7_1;

	mov.u32 	%r318, 0;
	// inline asm
	call (%f327), _optix_get_ray_time, ();
	// inline asm

BB7_3:
	.pragma "nounroll";
	// inline asm
	call (%rd19), _optix_get_transform_list_handle, (%r318);
	// inline asm
	// inline asm
	call (%r11), _optix_get_transform_type_from_handle, (%rd19);
	// inline asm
	and.b32  	%r12, %r11, -2;
	setp.eq.s32	%p4, %r12, 2;
	@%p4 bra 	BB7_9;
	bra.uni 	BB7_4;

BB7_9:
	setp.eq.s32	%p7, %r11, 2;
	@%p7 bra 	BB7_13;
	bra.uni 	BB7_10;

BB7_13:
	// inline asm
	call (%rd93), _optix_get_matrix_motion_transform_from_handle, (%rd19);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd95, %rd93;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r100,%r101,%r102,%r103}, [%rd95];
	// inline asm
	mov.b32	{%rs4, %rs5}, %r102;
	add.s64 	%rd99, %rd93, 16;
	// inline asm
	cvta.to.global.u64 %rd98, %rd99;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r104,%r105,%r106,%r107}, [%rd98];
	// inline asm
	add.s64 	%rd102, %rd93, 32;
	// inline asm
	cvta.to.global.u64 %rd101, %rd102;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r108,%r109,%r110,%r111}, [%rd101];
	// inline asm
	add.s64 	%rd105, %rd93, 48;
	// inline asm
	cvta.to.global.u64 %rd104, %rd105;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r112,%r113,%r114,%r115}, [%rd104];
	// inline asm
	add.s64 	%rd108, %rd93, 64;
	// inline asm
	cvta.to.global.u64 %rd107, %rd108;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r116,%r117,%r118,%r119}, [%rd107];
	// inline asm
	add.s64 	%rd111, %rd93, 80;
	// inline asm
	cvta.to.global.u64 %rd110, %rd111;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r120,%r121,%r122,%r123}, [%rd110];
	// inline asm
	add.s64 	%rd114, %rd93, 96;
	// inline asm
	cvta.to.global.u64 %rd113, %rd114;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r124,%r125,%r126,%r127}, [%rd113];
	// inline asm
	add.s64 	%rd117, %rd93, 112;
	// inline asm
	cvta.to.global.u64 %rd116, %rd117;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r128,%r129,%r130,%r131}, [%rd116];
	// inline asm
	mov.b32 	 %f454, %r103;
	mov.b32 	 %f455, %r104;
	cvt.u32.u16	%r144, %rs4;
	add.s32 	%r145, %r144, -1;
	cvt.rn.f32.s32	%f456, %r145;
	sub.f32 	%f457, %f327, %f454;
	mul.f32 	%f458, %f457, %f456;
	sub.f32 	%f459, %f455, %f454;
	div.rn.f32 	%f460, %f458, %f459;
	min.f32 	%f461, %f456, %f460;
	mov.f32 	%f462, 0f00000000;
	max.f32 	%f463, %f462, %f461;
	cvt.rmi.f32.f32	%f464, %f463;
	cvt.rzi.s32.f32	%r146, %f464;
	mul.wide.s32 	%rd128, %r146, 48;
	add.s64 	%rd120, %rd102, %rd128;
	// inline asm
	cvta.to.global.u64 %rd119, %rd120;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r132,%r133,%r134,%r135}, [%rd119];
	// inline asm
	mov.b32 	 %f842, %r132;
	mov.b32 	 %f843, %r133;
	mov.b32 	 %f844, %r134;
	mov.b32 	 %f845, %r135;
	add.s64 	%rd123, %rd120, 16;
	// inline asm
	cvta.to.global.u64 %rd122, %rd123;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r136,%r137,%r138,%r139}, [%rd122];
	// inline asm
	mov.b32 	 %f838, %r136;
	mov.b32 	 %f839, %r137;
	mov.b32 	 %f840, %r138;
	mov.b32 	 %f841, %r139;
	add.s64 	%rd126, %rd120, 32;
	// inline asm
	cvta.to.global.u64 %rd125, %rd126;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r140,%r141,%r142,%r143}, [%rd125];
	// inline asm
	sub.f32 	%f98, %f463, %f464;
	mov.b32 	 %f834, %r140;
	mov.b32 	 %f835, %r141;
	mov.b32 	 %f836, %r142;
	mov.b32 	 %f837, %r143;
	setp.leu.f32	%p9, %f98, 0f00000000;
	@%p9 bra 	BB7_15;

	cvt.rmi.f32.f32	%f805, %f463;
	cvt.rzi.s32.f32	%r317, %f805;
	cvt.s64.s32	%rd262, %r317;
	mul.lo.s64 	%rd138, %rd262, 48;
	add.s64 	%rd139, %rd93, %rd138;
	add.s64 	%rd130, %rd139, 80;
	// inline asm
	cvta.to.global.u64 %rd129, %rd130;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r147,%r148,%r149,%r150}, [%rd129];
	// inline asm
	mov.b32 	 %f465, %r147;
	mov.b32 	 %f466, %r148;
	mov.b32 	 %f467, %r149;
	mov.b32 	 %f468, %r150;
	add.s64 	%rd133, %rd139, 96;
	// inline asm
	cvta.to.global.u64 %rd132, %rd133;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r151,%r152,%r153,%r154}, [%rd132];
	// inline asm
	mov.b32 	 %f469, %r151;
	mov.b32 	 %f470, %r152;
	mov.b32 	 %f471, %r153;
	mov.b32 	 %f472, %r154;
	add.s64 	%rd136, %rd139, 112;
	// inline asm
	cvta.to.global.u64 %rd135, %rd136;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r155,%r156,%r157,%r158}, [%rd135];
	// inline asm
	mov.f32 	%f473, 0f3F800000;
	sub.f32 	%f474, %f473, %f98;
	mul.f32 	%f475, %f98, %f465;
	mul.f32 	%f476, %f98, %f466;
	mul.f32 	%f477, %f98, %f467;
	mul.f32 	%f478, %f98, %f468;
	fma.rn.f32 	%f842, %f474, %f842, %f475;
	fma.rn.f32 	%f843, %f474, %f843, %f476;
	fma.rn.f32 	%f844, %f474, %f844, %f477;
	fma.rn.f32 	%f845, %f474, %f845, %f478;
	mul.f32 	%f479, %f98, %f469;
	mul.f32 	%f480, %f98, %f470;
	mul.f32 	%f481, %f98, %f471;
	mul.f32 	%f482, %f98, %f472;
	fma.rn.f32 	%f838, %f474, %f838, %f479;
	fma.rn.f32 	%f839, %f474, %f839, %f480;
	fma.rn.f32 	%f840, %f474, %f840, %f481;
	fma.rn.f32 	%f841, %f474, %f841, %f482;
	mov.b32 	 %f483, %r155;
	mov.b32 	 %f484, %r156;
	mov.b32 	 %f485, %r157;
	mov.b32 	 %f486, %r158;
	mul.f32 	%f487, %f98, %f483;
	mul.f32 	%f488, %f98, %f484;
	mul.f32 	%f489, %f98, %f485;
	mul.f32 	%f490, %f98, %f486;
	fma.rn.f32 	%f834, %f474, %f834, %f487;
	fma.rn.f32 	%f835, %f474, %f835, %f488;
	fma.rn.f32 	%f836, %f474, %f836, %f489;
	fma.rn.f32 	%f837, %f474, %f837, %f490;
	bra.uni 	BB7_15;

BB7_4:
	mov.f32 	%f846, 0f00000000;
	mov.f32 	%f848, 0f3F800000;
	setp.eq.s32	%p5, %r11, 4;
	@%p5 bra 	BB7_7;
	bra.uni 	BB7_5;

BB7_7:
	// inline asm
	call (%rd263), _optix_get_instance_inverse_transform_from_handle, (%rd19);
	// inline asm
	bra.uni 	BB7_8;

BB7_10:
	// inline asm
	call (%rd34), _optix_get_srt_motion_transform_from_handle, (%rd19);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd36, %rd34;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r25,%r26,%r27,%r28}, [%rd36];
	// inline asm
	mov.b32	{%rs2, %rs3}, %r27;
	add.s64 	%rd40, %rd34, 16;
	// inline asm
	cvta.to.global.u64 %rd39, %rd40;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r29,%r30,%r31,%r32}, [%rd39];
	// inline asm
	add.s64 	%rd43, %rd34, 32;
	// inline asm
	cvta.to.global.u64 %rd42, %rd43;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r33,%r34,%r35,%r36}, [%rd42];
	// inline asm
	add.s64 	%rd46, %rd34, 48;
	// inline asm
	cvta.to.global.u64 %rd45, %rd46;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r37,%r38,%r39,%r40}, [%rd45];
	// inline asm
	add.s64 	%rd49, %rd34, 64;
	// inline asm
	cvta.to.global.u64 %rd48, %rd49;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r41,%r42,%r43,%r44}, [%rd48];
	// inline asm
	add.s64 	%rd52, %rd34, 80;
	// inline asm
	cvta.to.global.u64 %rd51, %rd52;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r45,%r46,%r47,%r48}, [%rd51];
	// inline asm
	add.s64 	%rd55, %rd34, 96;
	// inline asm
	cvta.to.global.u64 %rd54, %rd55;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r49,%r50,%r51,%r52}, [%rd54];
	// inline asm
	add.s64 	%rd58, %rd34, 112;
	// inline asm
	cvta.to.global.u64 %rd57, %rd58;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r53,%r54,%r55,%r56}, [%rd57];
	// inline asm
	add.s64 	%rd61, %rd34, 128;
	// inline asm
	cvta.to.global.u64 %rd60, %rd61;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r57,%r58,%r59,%r60}, [%rd60];
	// inline asm
	add.s64 	%rd64, %rd34, 144;
	// inline asm
	cvta.to.global.u64 %rd63, %rd64;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r61,%r62,%r63,%r64}, [%rd63];
	// inline asm
	mov.b32 	 %f341, %r28;
	mov.b32 	 %f342, %r29;
	cvt.u32.u16	%r81, %rs2;
	add.s32 	%r82, %r81, -1;
	cvt.rn.f32.s32	%f343, %r82;
	sub.f32 	%f344, %f327, %f341;
	mul.f32 	%f345, %f344, %f343;
	sub.f32 	%f346, %f342, %f341;
	div.rn.f32 	%f347, %f345, %f346;
	min.f32 	%f348, %f343, %f347;
	mov.f32 	%f349, 0f00000000;
	max.f32 	%f350, %f349, %f348;
	cvt.rmi.f32.f32	%f351, %f350;
	cvt.rzi.s32.f32	%r83, %f351;
	mul.wide.s32 	%rd78, %r83, 64;
	add.s64 	%rd67, %rd43, %rd78;
	// inline asm
	cvta.to.global.u64 %rd66, %rd67;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r65,%r66,%r67,%r68}, [%rd66];
	// inline asm
	mov.b32 	 %f818, %r65;
	mov.b32 	 %f819, %r66;
	mov.b32 	 %f820, %r67;
	mov.b32 	 %f821, %r68;
	add.s64 	%rd70, %rd67, 16;
	// inline asm
	cvta.to.global.u64 %rd69, %rd70;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r69,%r70,%r71,%r72}, [%rd69];
	// inline asm
	mov.b32 	 %f822, %r69;
	mov.b32 	 %f823, %r70;
	mov.b32 	 %f824, %r71;
	mov.b32 	 %f825, %r72;
	add.s64 	%rd73, %rd67, 32;
	// inline asm
	cvta.to.global.u64 %rd72, %rd73;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r73,%r74,%r75,%r76}, [%rd72];
	// inline asm
	sub.f32 	%f37, %f350, %f351;
	mov.b32 	 %f826, %r73;
	mov.b32 	 %f827, %r74;
	mov.b32 	 %f828, %r75;
	mov.b32 	 %f829, %r76;
	add.s64 	%rd76, %rd67, 48;
	// inline asm
	cvta.to.global.u64 %rd75, %rd76;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r77,%r78,%r79,%r80}, [%rd75];
	// inline asm
	mov.b32 	 %f830, %r77;
	mov.b32 	 %f831, %r78;
	mov.b32 	 %f832, %r79;
	mov.b32 	 %f833, %r80;
	setp.leu.f32	%p8, %f37, 0f00000000;
	@%p8 bra 	BB7_12;

	cvt.rmi.f32.f32	%f804, %f350;
	cvt.rzi.s32.f32	%r316, %f804;
	cvt.s64.s32	%rd261, %r316;
	shl.b64 	%rd91, %rd261, 6;
	add.s64 	%rd92, %rd91, %rd34;
	add.s64 	%rd80, %rd92, 96;
	// inline asm
	cvta.to.global.u64 %rd79, %rd80;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r84,%r85,%r86,%r87}, [%rd79];
	// inline asm
	mov.b32 	 %f352, %r84;
	mov.b32 	 %f353, %r85;
	mov.b32 	 %f354, %r86;
	mov.b32 	 %f355, %r87;
	add.s64 	%rd83, %rd92, 112;
	// inline asm
	cvta.to.global.u64 %rd82, %rd83;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r88,%r89,%r90,%r91}, [%rd82];
	// inline asm
	mov.b32 	 %f356, %r88;
	mov.b32 	 %f357, %r89;
	mov.b32 	 %f358, %r90;
	mov.b32 	 %f359, %r91;
	add.s64 	%rd86, %rd92, 128;
	// inline asm
	cvta.to.global.u64 %rd85, %rd86;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r92,%r93,%r94,%r95}, [%rd85];
	// inline asm
	mov.b32 	 %f360, %r92;
	mov.b32 	 %f361, %r93;
	mov.b32 	 %f362, %r94;
	mov.b32 	 %f363, %r95;
	add.s64 	%rd89, %rd92, 144;
	// inline asm
	cvta.to.global.u64 %rd88, %rd89;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r96,%r97,%r98,%r99}, [%rd88];
	// inline asm
	mov.f32 	%f364, 0f3F800000;
	sub.f32 	%f365, %f364, %f37;
	mul.f32 	%f366, %f37, %f352;
	mul.f32 	%f367, %f37, %f353;
	mul.f32 	%f368, %f37, %f354;
	mul.f32 	%f369, %f37, %f355;
	fma.rn.f32 	%f818, %f365, %f818, %f366;
	fma.rn.f32 	%f819, %f365, %f819, %f367;
	fma.rn.f32 	%f820, %f365, %f820, %f368;
	fma.rn.f32 	%f821, %f365, %f821, %f369;
	mul.f32 	%f370, %f37, %f356;
	mul.f32 	%f371, %f37, %f357;
	mul.f32 	%f372, %f37, %f358;
	mul.f32 	%f373, %f37, %f359;
	fma.rn.f32 	%f822, %f365, %f822, %f370;
	fma.rn.f32 	%f823, %f365, %f823, %f371;
	fma.rn.f32 	%f824, %f365, %f824, %f372;
	fma.rn.f32 	%f825, %f365, %f825, %f373;
	mul.f32 	%f374, %f37, %f360;
	mul.f32 	%f375, %f37, %f361;
	mul.f32 	%f376, %f37, %f362;
	mul.f32 	%f377, %f37, %f363;
	fma.rn.f32 	%f826, %f365, %f826, %f374;
	fma.rn.f32 	%f378, %f365, %f827, %f375;
	fma.rn.f32 	%f379, %f365, %f828, %f376;
	fma.rn.f32 	%f380, %f365, %f829, %f377;
	mov.b32 	 %f381, %r96;
	mov.b32 	 %f382, %r97;
	mov.b32 	 %f383, %r98;
	mov.b32 	 %f384, %r99;
	mul.f32 	%f385, %f37, %f381;
	mul.f32 	%f386, %f37, %f382;
	mul.f32 	%f387, %f37, %f383;
	mul.f32 	%f388, %f37, %f384;
	fma.rn.f32 	%f389, %f365, %f830, %f385;
	fma.rn.f32 	%f831, %f365, %f831, %f386;
	fma.rn.f32 	%f832, %f365, %f832, %f387;
	fma.rn.f32 	%f833, %f365, %f833, %f388;
	mul.f32 	%f390, %f379, %f379;
	fma.rn.f32 	%f391, %f378, %f378, %f390;
	fma.rn.f32 	%f392, %f380, %f380, %f391;
	fma.rn.f32 	%f393, %f389, %f389, %f392;
	sqrt.rn.f32 	%f394, %f393;
	rcp.rn.f32 	%f395, %f394;
	mul.f32 	%f827, %f378, %f395;
	mul.f32 	%f828, %f379, %f395;
	mul.f32 	%f829, %f380, %f395;
	mul.f32 	%f830, %f389, %f395;

BB7_12:
	mul.f32 	%f396, %f828, %f828;
	fma.rn.f32 	%f397, %f827, %f827, %f396;
	fma.rn.f32 	%f398, %f829, %f829, %f397;
	fma.rn.f32 	%f399, %f830, %f830, %f398;
	rcp.rn.f32 	%f400, %f399;
	mul.f32 	%f401, %f827, %f400;
	mul.f32 	%f402, %f828, %f400;
	mul.f32 	%f403, %f829, %f400;
	mul.f32 	%f404, %f830, %f400;
	mul.f32 	%f405, %f827, %f401;
	mul.f32 	%f406, %f828, %f402;
	mul.f32 	%f407, %f829, %f403;
	mul.f32 	%f408, %f827, %f402;
	mul.f32 	%f409, %f829, %f404;
	mul.f32 	%f410, %f827, %f403;
	mul.f32 	%f411, %f828, %f404;
	mul.f32 	%f412, %f828, %f403;
	mul.f32 	%f413, %f827, %f404;
	sub.f32 	%f414, %f405, %f406;
	sub.f32 	%f415, %f414, %f407;
	fma.rn.f32 	%f416, %f830, %f404, %f415;
	sub.f32 	%f417, %f408, %f409;
	add.f32 	%f418, %f417, %f417;
	add.f32 	%f419, %f410, %f411;
	add.f32 	%f420, %f419, %f419;
	add.f32 	%f421, %f408, %f409;
	add.f32 	%f422, %f421, %f421;
	sub.f32 	%f423, %f406, %f405;
	sub.f32 	%f424, %f423, %f407;
	fma.rn.f32 	%f425, %f830, %f404, %f424;
	sub.f32 	%f426, %f412, %f413;
	add.f32 	%f427, %f426, %f426;
	sub.f32 	%f428, %f410, %f411;
	add.f32 	%f429, %f428, %f428;
	add.f32 	%f430, %f412, %f413;
	add.f32 	%f431, %f430, %f430;
	neg.f32 	%f432, %f405;
	sub.f32 	%f433, %f432, %f406;
	add.f32 	%f434, %f407, %f433;
	fma.rn.f32 	%f435, %f830, %f404, %f434;
	mul.f32 	%f436, %f821, %f416;
	fma.rn.f32 	%f437, %f824, %f418, %f436;
	fma.rn.f32 	%f438, %f826, %f420, %f437;
	add.f32 	%f845, %f831, %f438;
	mul.f32 	%f439, %f824, %f425;
	fma.rn.f32 	%f440, %f821, %f422, %f439;
	fma.rn.f32 	%f441, %f826, %f427, %f440;
	add.f32 	%f841, %f832, %f441;
	mul.f32 	%f442, %f824, %f431;
	fma.rn.f32 	%f443, %f821, %f429, %f442;
	fma.rn.f32 	%f444, %f826, %f435, %f443;
	add.f32 	%f837, %f833, %f444;
	mul.f32 	%f445, %f820, %f416;
	fma.rn.f32 	%f446, %f823, %f418, %f445;
	fma.rn.f32 	%f844, %f825, %f420, %f446;
	mul.f32 	%f447, %f823, %f425;
	fma.rn.f32 	%f448, %f820, %f422, %f447;
	fma.rn.f32 	%f840, %f825, %f427, %f448;
	mul.f32 	%f449, %f823, %f431;
	fma.rn.f32 	%f450, %f820, %f429, %f449;
	fma.rn.f32 	%f836, %f825, %f435, %f450;
	mul.f32 	%f451, %f819, %f416;
	fma.rn.f32 	%f843, %f822, %f418, %f451;
	mul.f32 	%f452, %f822, %f425;
	fma.rn.f32 	%f839, %f819, %f422, %f452;
	mul.f32 	%f453, %f822, %f431;
	fma.rn.f32 	%f835, %f819, %f429, %f453;
	mul.f32 	%f842, %f818, %f416;
	mul.f32 	%f838, %f818, %f422;
	mul.f32 	%f834, %f818, %f429;

BB7_15:
	mul.f32 	%f491, %f835, %f840;
	mul.f32 	%f492, %f836, %f839;
	sub.f32 	%f493, %f492, %f491;
	mul.f32 	%f494, %f842, %f493;
	mul.f32 	%f495, %f834, %f840;
	mul.f32 	%f496, %f836, %f838;
	sub.f32 	%f497, %f496, %f495;
	mul.f32 	%f498, %f497, %f843;
	sub.f32 	%f499, %f494, %f498;
	mul.f32 	%f500, %f834, %f839;
	mul.f32 	%f501, %f835, %f838;
	sub.f32 	%f502, %f501, %f500;
	fma.rn.f32 	%f503, %f502, %f844, %f499;
	rcp.rn.f32 	%f504, %f503;
	mul.f32 	%f854, %f493, %f504;
	mul.f32 	%f505, %f836, %f843;
	mul.f32 	%f506, %f835, %f844;
	sub.f32 	%f507, %f506, %f505;
	mul.f32 	%f855, %f504, %f507;
	mul.f32 	%f508, %f839, %f844;
	mul.f32 	%f509, %f840, %f843;
	sub.f32 	%f510, %f509, %f508;
	mul.f32 	%f856, %f504, %f510;
	sub.f32 	%f511, %f495, %f496;
	mul.f32 	%f850, %f511, %f504;
	mul.f32 	%f512, %f834, %f844;
	mul.f32 	%f513, %f836, %f842;
	sub.f32 	%f514, %f513, %f512;
	mul.f32 	%f851, %f504, %f514;
	mul.f32 	%f515, %f840, %f842;
	mul.f32 	%f516, %f838, %f844;
	sub.f32 	%f517, %f516, %f515;
	mul.f32 	%f852, %f504, %f517;
	mul.f32 	%f846, %f502, %f504;
	mul.f32 	%f518, %f835, %f842;
	mul.f32 	%f519, %f834, %f843;
	sub.f32 	%f520, %f519, %f518;
	mul.f32 	%f847, %f520, %f504;
	mul.f32 	%f521, %f838, %f843;
	mul.f32 	%f522, %f839, %f842;
	sub.f32 	%f523, %f522, %f521;
	mul.f32 	%f848, %f523, %f504;
	mul.f32 	%f524, %f845, %f854;
	neg.f32 	%f525, %f524;
	mul.f32 	%f526, %f841, %f855;
	sub.f32 	%f527, %f525, %f526;
	mul.f32 	%f528, %f837, %f856;
	sub.f32 	%f857, %f527, %f528;
	mul.f32 	%f529, %f845, %f850;
	neg.f32 	%f530, %f529;
	mul.f32 	%f531, %f841, %f851;
	sub.f32 	%f532, %f530, %f531;
	mul.f32 	%f533, %f837, %f852;
	sub.f32 	%f853, %f532, %f533;
	mul.f32 	%f534, %f845, %f846;
	neg.f32 	%f535, %f534;
	mul.f32 	%f536, %f841, %f847;
	sub.f32 	%f537, %f535, %f536;
	mul.f32 	%f538, %f837, %f848;
	sub.f32 	%f849, %f537, %f538;
	bra.uni 	BB7_16;

BB7_5:
	setp.ne.s32	%p6, %r11, 1;
	mov.f32 	%f847, %f846;
	mov.f32 	%f849, %f846;
	mov.f32 	%f850, %f846;
	mov.f32 	%f851, %f848;
	mov.f32 	%f852, %f846;
	mov.f32 	%f853, %f846;
	mov.f32 	%f854, %f848;
	mov.f32 	%f855, %f846;
	mov.f32 	%f856, %f846;
	mov.f32 	%f857, %f846;
	@%p6 bra 	BB7_16;

	// inline asm
	call (%rd21), _optix_get_static_transform_from_handle, (%rd19);
	// inline asm
	add.s64 	%rd263, %rd21, 64;

BB7_8:
	// inline asm
	cvta.to.global.u64 %rd25, %rd263;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r13,%r14,%r15,%r16}, [%rd25];
	// inline asm
	mov.b32 	 %f854, %r13;
	mov.b32 	 %f855, %r14;
	mov.b32 	 %f856, %r15;
	mov.b32 	 %f857, %r16;
	add.s64 	%rd29, %rd263, 16;
	// inline asm
	cvta.to.global.u64 %rd28, %rd29;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r17,%r18,%r19,%r20}, [%rd28];
	// inline asm
	mov.b32 	 %f850, %r17;
	mov.b32 	 %f851, %r18;
	mov.b32 	 %f852, %r19;
	mov.b32 	 %f853, %r20;
	add.s64 	%rd32, %rd263, 32;
	// inline asm
	cvta.to.global.u64 %rd31, %rd32;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r21,%r22,%r23,%r24}, [%rd31];
	// inline asm
	mov.b32 	 %f846, %r21;
	mov.b32 	 %f847, %r22;
	mov.b32 	 %f848, %r23;
	mov.b32 	 %f849, %r24;

BB7_16:
	setp.eq.s32	%p10, %r318, 0;
	@%p10 bra 	BB7_17;
	bra.uni 	BB7_18;

BB7_17:
	mov.f32 	%f817, %f857;
	mov.f32 	%f816, %f856;
	mov.f32 	%f815, %f855;
	mov.f32 	%f814, %f854;
	mov.f32 	%f813, %f853;
	mov.f32 	%f812, %f852;
	mov.f32 	%f811, %f851;
	mov.f32 	%f810, %f850;
	mov.f32 	%f809, %f849;
	mov.f32 	%f808, %f848;
	mov.f32 	%f807, %f847;
	mov.f32 	%f806, %f846;
	bra.uni 	BB7_19;

BB7_18:
	mul.f32 	%f539, %f810, %f855;
	fma.rn.f32 	%f540, %f814, %f854, %f539;
	fma.rn.f32 	%f151, %f806, %f856, %f540;
	mul.f32 	%f541, %f811, %f855;
	fma.rn.f32 	%f542, %f815, %f854, %f541;
	fma.rn.f32 	%f152, %f807, %f856, %f542;
	mul.f32 	%f543, %f812, %f855;
	fma.rn.f32 	%f544, %f816, %f854, %f543;
	fma.rn.f32 	%f153, %f808, %f856, %f544;
	mul.f32 	%f545, %f813, %f855;
	fma.rn.f32 	%f546, %f817, %f854, %f545;
	fma.rn.f32 	%f547, %f809, %f856, %f546;
	add.f32 	%f154, %f857, %f547;
	mul.f32 	%f548, %f810, %f851;
	fma.rn.f32 	%f549, %f814, %f850, %f548;
	fma.rn.f32 	%f155, %f806, %f852, %f549;
	mul.f32 	%f550, %f811, %f851;
	fma.rn.f32 	%f551, %f815, %f850, %f550;
	fma.rn.f32 	%f156, %f807, %f852, %f551;
	mul.f32 	%f552, %f812, %f851;
	fma.rn.f32 	%f553, %f816, %f850, %f552;
	fma.rn.f32 	%f157, %f808, %f852, %f553;
	mul.f32 	%f554, %f813, %f851;
	fma.rn.f32 	%f555, %f817, %f850, %f554;
	fma.rn.f32 	%f556, %f809, %f852, %f555;
	add.f32 	%f158, %f853, %f556;
	mul.f32 	%f557, %f810, %f847;
	fma.rn.f32 	%f558, %f814, %f846, %f557;
	fma.rn.f32 	%f806, %f806, %f848, %f558;
	mul.f32 	%f559, %f811, %f847;
	fma.rn.f32 	%f560, %f815, %f846, %f559;
	fma.rn.f32 	%f807, %f807, %f848, %f560;
	mul.f32 	%f561, %f812, %f847;
	fma.rn.f32 	%f562, %f816, %f846, %f561;
	fma.rn.f32 	%f808, %f808, %f848, %f562;
	mul.f32 	%f563, %f813, %f847;
	fma.rn.f32 	%f564, %f817, %f846, %f563;
	fma.rn.f32 	%f565, %f809, %f848, %f564;
	add.f32 	%f809, %f849, %f565;
	mov.f32 	%f817, %f154;
	mov.f32 	%f816, %f153;
	mov.f32 	%f815, %f152;
	mov.f32 	%f814, %f151;
	mov.f32 	%f813, %f158;
	mov.f32 	%f812, %f157;
	mov.f32 	%f811, %f156;
	mov.f32 	%f810, %f155;

BB7_19:
	add.s32 	%r318, %r318, 1;
	setp.lt.u32	%p11, %r318, %r8;
	@%p11 bra 	BB7_3;

	mul.f32 	%f566, %f324, %f814;
	fma.rn.f32 	%f567, %f325, %f815, %f566;
	fma.rn.f32 	%f568, %f870, %f816, %f567;
	add.f32 	%f872, %f817, %f568;
	mul.f32 	%f569, %f324, %f810;
	fma.rn.f32 	%f570, %f325, %f811, %f569;
	fma.rn.f32 	%f571, %f870, %f812, %f570;
	add.f32 	%f871, %f813, %f571;
	mul.f32 	%f572, %f324, %f806;
	fma.rn.f32 	%f573, %f325, %f807, %f572;
	fma.rn.f32 	%f574, %f870, %f808, %f573;
	add.f32 	%f870, %f809, %f574;
	bra.uni 	BB7_21;

BB7_1:
	mov.f32 	%f871, %f325;
	mov.f32 	%f872, %f324;

BB7_21:
	setp.eq.s32	%p37, %r8, 0;
	// inline asm
	call (%f575), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f576), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f921), _optix_get_world_ray_direction_z, ();
	// inline asm
	@%p37 bra 	BB7_22;

	mov.u32 	%r319, 0;
	// inline asm
	call (%f578), _optix_get_ray_time, ();
	// inline asm

BB7_24:
	.pragma "nounroll";
	// inline asm
	call (%rd140), _optix_get_transform_list_handle, (%r319);
	// inline asm
	// inline asm
	call (%r161), _optix_get_transform_type_from_handle, (%rd140);
	// inline asm
	and.b32  	%r162, %r161, -2;
	setp.eq.s32	%p13, %r162, 2;
	@%p13 bra 	BB7_30;
	bra.uni 	BB7_25;

BB7_30:
	setp.eq.s32	%p16, %r161, 2;
	@%p16 bra 	BB7_34;
	bra.uni 	BB7_31;

BB7_34:
	// inline asm
	call (%rd214), _optix_get_matrix_motion_transform_from_handle, (%rd140);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd216, %rd214;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r250,%r251,%r252,%r253}, [%rd216];
	// inline asm
	mov.b32	{%rs8, %rs9}, %r252;
	add.s64 	%rd220, %rd214, 16;
	// inline asm
	cvta.to.global.u64 %rd219, %rd220;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r254,%r255,%r256,%r257}, [%rd219];
	// inline asm
	add.s64 	%rd223, %rd214, 32;
	// inline asm
	cvta.to.global.u64 %rd222, %rd223;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r258,%r259,%r260,%r261}, [%rd222];
	// inline asm
	add.s64 	%rd226, %rd214, 48;
	// inline asm
	cvta.to.global.u64 %rd225, %rd226;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r262,%r263,%r264,%r265}, [%rd225];
	// inline asm
	add.s64 	%rd229, %rd214, 64;
	// inline asm
	cvta.to.global.u64 %rd228, %rd229;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r266,%r267,%r268,%r269}, [%rd228];
	// inline asm
	add.s64 	%rd232, %rd214, 80;
	// inline asm
	cvta.to.global.u64 %rd231, %rd232;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r270,%r271,%r272,%r273}, [%rd231];
	// inline asm
	add.s64 	%rd235, %rd214, 96;
	// inline asm
	cvta.to.global.u64 %rd234, %rd235;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r274,%r275,%r276,%r277}, [%rd234];
	// inline asm
	add.s64 	%rd238, %rd214, 112;
	// inline asm
	cvta.to.global.u64 %rd237, %rd238;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r278,%r279,%r280,%r281}, [%rd237];
	// inline asm
	mov.b32 	 %f681, %r253;
	mov.b32 	 %f682, %r254;
	cvt.u32.u16	%r294, %rs8;
	add.s32 	%r295, %r294, -1;
	cvt.rn.f32.s32	%f683, %r295;
	sub.f32 	%f684, %f578, %f681;
	mul.f32 	%f685, %f684, %f683;
	sub.f32 	%f686, %f682, %f681;
	div.rn.f32 	%f687, %f685, %f686;
	min.f32 	%f688, %f683, %f687;
	mov.f32 	%f689, 0f00000000;
	max.f32 	%f690, %f689, %f688;
	cvt.rmi.f32.f32	%f691, %f690;
	cvt.rzi.s32.f32	%r296, %f691;
	cvt.s64.s32	%rd17, %r296;
	mul.wide.s32 	%rd249, %r296, 48;
	add.s64 	%rd241, %rd223, %rd249;
	// inline asm
	cvta.to.global.u64 %rd240, %rd241;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r282,%r283,%r284,%r285}, [%rd240];
	// inline asm
	mov.b32 	 %f898, %r282;
	mov.b32 	 %f899, %r283;
	mov.b32 	 %f900, %r284;
	add.s64 	%rd244, %rd241, 16;
	// inline asm
	cvta.to.global.u64 %rd243, %rd244;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r286,%r287,%r288,%r289}, [%rd243];
	// inline asm
	mov.b32 	 %f895, %r286;
	mov.b32 	 %f896, %r287;
	mov.b32 	 %f897, %r288;
	add.s64 	%rd247, %rd241, 32;
	// inline asm
	cvta.to.global.u64 %rd246, %rd247;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r290,%r291,%r292,%r293}, [%rd246];
	// inline asm
	sub.f32 	%f249, %f690, %f691;
	mov.b32 	 %f892, %r290;
	mov.b32 	 %f893, %r291;
	mov.b32 	 %f894, %r292;
	setp.leu.f32	%p18, %f249, 0f00000000;
	@%p18 bra 	BB7_36;

	mul.lo.s64 	%rd259, %rd17, 48;
	add.s64 	%rd260, %rd214, %rd259;
	add.s64 	%rd251, %rd260, 80;
	// inline asm
	cvta.to.global.u64 %rd250, %rd251;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r297,%r298,%r299,%r300}, [%rd250];
	// inline asm
	mov.b32 	 %f692, %r297;
	mov.b32 	 %f693, %r298;
	mov.b32 	 %f694, %r299;
	add.s64 	%rd254, %rd260, 96;
	// inline asm
	cvta.to.global.u64 %rd253, %rd254;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r301,%r302,%r303,%r304}, [%rd253];
	// inline asm
	mov.b32 	 %f695, %r301;
	mov.b32 	 %f696, %r302;
	mov.b32 	 %f697, %r303;
	add.s64 	%rd257, %rd260, 112;
	// inline asm
	cvta.to.global.u64 %rd256, %rd257;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r305,%r306,%r307,%r308}, [%rd256];
	// inline asm
	mov.f32 	%f698, 0f3F800000;
	sub.f32 	%f699, %f698, %f249;
	mul.f32 	%f700, %f249, %f692;
	mul.f32 	%f701, %f249, %f693;
	mul.f32 	%f702, %f249, %f694;
	fma.rn.f32 	%f898, %f699, %f898, %f700;
	fma.rn.f32 	%f899, %f699, %f899, %f701;
	fma.rn.f32 	%f900, %f699, %f900, %f702;
	mul.f32 	%f703, %f249, %f695;
	mul.f32 	%f704, %f249, %f696;
	mul.f32 	%f705, %f249, %f697;
	fma.rn.f32 	%f895, %f699, %f895, %f703;
	fma.rn.f32 	%f896, %f699, %f896, %f704;
	fma.rn.f32 	%f897, %f699, %f897, %f705;
	mov.b32 	 %f706, %r305;
	mov.b32 	 %f707, %r306;
	mov.b32 	 %f708, %r307;
	mul.f32 	%f709, %f249, %f706;
	mul.f32 	%f710, %f249, %f707;
	mul.f32 	%f711, %f249, %f708;
	fma.rn.f32 	%f892, %f699, %f892, %f709;
	fma.rn.f32 	%f893, %f699, %f893, %f710;
	fma.rn.f32 	%f894, %f699, %f894, %f711;
	bra.uni 	BB7_36;

BB7_25:
	mov.f32 	%f901, 0f00000000;
	mov.f32 	%f903, 0f3F800000;
	setp.eq.s32	%p14, %r161, 4;
	@%p14 bra 	BB7_28;
	bra.uni 	BB7_26;

BB7_28:
	// inline asm
	call (%rd264), _optix_get_instance_inverse_transform_from_handle, (%rd140);
	// inline asm
	bra.uni 	BB7_29;

BB7_31:
	// inline asm
	call (%rd155), _optix_get_srt_motion_transform_from_handle, (%rd140);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd157, %rd155;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r175,%r176,%r177,%r178}, [%rd157];
	// inline asm
	mov.b32	{%rs6, %rs7}, %r177;
	add.s64 	%rd161, %rd155, 16;
	// inline asm
	cvta.to.global.u64 %rd160, %rd161;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r179,%r180,%r181,%r182}, [%rd160];
	// inline asm
	add.s64 	%rd164, %rd155, 32;
	// inline asm
	cvta.to.global.u64 %rd163, %rd164;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r183,%r184,%r185,%r186}, [%rd163];
	// inline asm
	add.s64 	%rd167, %rd155, 48;
	// inline asm
	cvta.to.global.u64 %rd166, %rd167;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r187,%r188,%r189,%r190}, [%rd166];
	// inline asm
	add.s64 	%rd170, %rd155, 64;
	// inline asm
	cvta.to.global.u64 %rd169, %rd170;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r191,%r192,%r193,%r194}, [%rd169];
	// inline asm
	add.s64 	%rd173, %rd155, 80;
	// inline asm
	cvta.to.global.u64 %rd172, %rd173;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r195,%r196,%r197,%r198}, [%rd172];
	// inline asm
	add.s64 	%rd176, %rd155, 96;
	// inline asm
	cvta.to.global.u64 %rd175, %rd176;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r199,%r200,%r201,%r202}, [%rd175];
	// inline asm
	add.s64 	%rd179, %rd155, 112;
	// inline asm
	cvta.to.global.u64 %rd178, %rd179;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r203,%r204,%r205,%r206}, [%rd178];
	// inline asm
	add.s64 	%rd182, %rd155, 128;
	// inline asm
	cvta.to.global.u64 %rd181, %rd182;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r207,%r208,%r209,%r210}, [%rd181];
	// inline asm
	add.s64 	%rd185, %rd155, 144;
	// inline asm
	cvta.to.global.u64 %rd184, %rd185;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r211,%r212,%r213,%r214}, [%rd184];
	// inline asm
	mov.b32 	 %f589, %r178;
	mov.b32 	 %f590, %r179;
	cvt.u32.u16	%r231, %rs6;
	add.s32 	%r232, %r231, -1;
	cvt.rn.f32.s32	%f591, %r232;
	sub.f32 	%f592, %f578, %f589;
	mul.f32 	%f593, %f592, %f591;
	sub.f32 	%f594, %f590, %f589;
	div.rn.f32 	%f595, %f593, %f594;
	min.f32 	%f596, %f591, %f595;
	mov.f32 	%f597, 0f00000000;
	max.f32 	%f598, %f597, %f596;
	cvt.rmi.f32.f32	%f599, %f598;
	cvt.rzi.s32.f32	%r233, %f599;
	cvt.s64.s32	%rd15, %r233;
	mul.wide.s32 	%rd199, %r233, 64;
	add.s64 	%rd188, %rd164, %rd199;
	// inline asm
	cvta.to.global.u64 %rd187, %rd188;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r215,%r216,%r217,%r218}, [%rd187];
	// inline asm
	mov.b32 	 %f882, %r215;
	mov.b32 	 %f883, %r216;
	mov.b32 	 %f884, %r217;
	add.s64 	%rd191, %rd188, 16;
	// inline asm
	cvta.to.global.u64 %rd190, %rd191;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r219,%r220,%r221,%r222}, [%rd190];
	// inline asm
	mov.b32 	 %f885, %r219;
	mov.b32 	 %f886, %r220;
	mov.b32 	 %f887, %r222;
	add.s64 	%rd194, %rd188, 32;
	// inline asm
	cvta.to.global.u64 %rd193, %rd194;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r223,%r224,%r225,%r226}, [%rd193];
	// inline asm
	sub.f32 	%f209, %f598, %f599;
	mov.b32 	 %f888, %r224;
	mov.b32 	 %f889, %r225;
	mov.b32 	 %f890, %r226;
	add.s64 	%rd197, %rd188, 48;
	// inline asm
	cvta.to.global.u64 %rd196, %rd197;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r227,%r228,%r229,%r230}, [%rd196];
	// inline asm
	mov.b32 	 %f891, %r227;
	setp.leu.f32	%p17, %f209, 0f00000000;
	@%p17 bra 	BB7_33;

	shl.b64 	%rd212, %rd15, 6;
	add.s64 	%rd213, %rd212, %rd155;
	add.s64 	%rd201, %rd213, 96;
	// inline asm
	cvta.to.global.u64 %rd200, %rd201;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r234,%r235,%r236,%r237}, [%rd200];
	// inline asm
	mov.b32 	 %f600, %r234;
	mov.b32 	 %f601, %r235;
	mov.b32 	 %f602, %r236;
	add.s64 	%rd204, %rd213, 112;
	// inline asm
	cvta.to.global.u64 %rd203, %rd204;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r238,%r239,%r240,%r241}, [%rd203];
	// inline asm
	mov.b32 	 %f603, %r238;
	mov.b32 	 %f604, %r239;
	mov.b32 	 %f605, %r241;
	add.s64 	%rd207, %rd213, 128;
	// inline asm
	cvta.to.global.u64 %rd206, %rd207;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r242,%r243,%r244,%r245}, [%rd206];
	// inline asm
	mov.b32 	 %f606, %r243;
	mov.b32 	 %f607, %r244;
	mov.b32 	 %f608, %r245;
	add.s64 	%rd210, %rd213, 144;
	// inline asm
	cvta.to.global.u64 %rd209, %rd210;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r246,%r247,%r248,%r249}, [%rd209];
	// inline asm
	mov.f32 	%f609, 0f3F800000;
	sub.f32 	%f610, %f609, %f209;
	mul.f32 	%f611, %f209, %f600;
	mul.f32 	%f612, %f209, %f601;
	mul.f32 	%f613, %f209, %f602;
	fma.rn.f32 	%f882, %f610, %f882, %f611;
	fma.rn.f32 	%f883, %f610, %f883, %f612;
	fma.rn.f32 	%f884, %f610, %f884, %f613;
	mul.f32 	%f614, %f209, %f603;
	mul.f32 	%f615, %f209, %f604;
	mul.f32 	%f616, %f209, %f605;
	fma.rn.f32 	%f885, %f610, %f885, %f614;
	fma.rn.f32 	%f886, %f610, %f886, %f615;
	fma.rn.f32 	%f887, %f610, %f887, %f616;
	mul.f32 	%f617, %f209, %f606;
	mul.f32 	%f618, %f209, %f607;
	mul.f32 	%f619, %f209, %f608;
	fma.rn.f32 	%f620, %f610, %f888, %f617;
	fma.rn.f32 	%f621, %f610, %f889, %f618;
	fma.rn.f32 	%f622, %f610, %f890, %f619;
	mov.b32 	 %f623, %r246;
	mul.f32 	%f624, %f209, %f623;
	fma.rn.f32 	%f625, %f610, %f891, %f624;
	mul.f32 	%f626, %f621, %f621;
	fma.rn.f32 	%f627, %f620, %f620, %f626;
	fma.rn.f32 	%f628, %f622, %f622, %f627;
	fma.rn.f32 	%f629, %f625, %f625, %f628;
	sqrt.rn.f32 	%f630, %f629;
	rcp.rn.f32 	%f631, %f630;
	mul.f32 	%f888, %f620, %f631;
	mul.f32 	%f889, %f621, %f631;
	mul.f32 	%f890, %f622, %f631;
	mul.f32 	%f891, %f625, %f631;

BB7_33:
	mul.f32 	%f632, %f889, %f889;
	fma.rn.f32 	%f633, %f888, %f888, %f632;
	fma.rn.f32 	%f634, %f890, %f890, %f633;
	fma.rn.f32 	%f635, %f891, %f891, %f634;
	rcp.rn.f32 	%f636, %f635;
	mul.f32 	%f637, %f888, %f636;
	mul.f32 	%f638, %f889, %f636;
	mul.f32 	%f639, %f890, %f636;
	mul.f32 	%f640, %f891, %f636;
	mul.f32 	%f641, %f888, %f637;
	mul.f32 	%f642, %f889, %f638;
	mul.f32 	%f643, %f890, %f639;
	mul.f32 	%f644, %f888, %f638;
	mul.f32 	%f645, %f890, %f640;
	mul.f32 	%f646, %f888, %f639;
	mul.f32 	%f647, %f889, %f640;
	mul.f32 	%f648, %f889, %f639;
	mul.f32 	%f649, %f888, %f640;
	sub.f32 	%f650, %f641, %f642;
	sub.f32 	%f651, %f650, %f643;
	fma.rn.f32 	%f652, %f891, %f640, %f651;
	sub.f32 	%f653, %f644, %f645;
	add.f32 	%f654, %f653, %f653;
	add.f32 	%f655, %f646, %f647;
	add.f32 	%f656, %f655, %f655;
	add.f32 	%f657, %f644, %f645;
	add.f32 	%f658, %f657, %f657;
	sub.f32 	%f659, %f642, %f641;
	sub.f32 	%f660, %f659, %f643;
	fma.rn.f32 	%f661, %f891, %f640, %f660;
	sub.f32 	%f662, %f648, %f649;
	add.f32 	%f663, %f662, %f662;
	sub.f32 	%f664, %f646, %f647;
	add.f32 	%f665, %f664, %f664;
	add.f32 	%f666, %f648, %f649;
	add.f32 	%f667, %f666, %f666;
	neg.f32 	%f668, %f641;
	sub.f32 	%f669, %f668, %f642;
	add.f32 	%f670, %f643, %f669;
	fma.rn.f32 	%f671, %f891, %f640, %f670;
	mul.f32 	%f672, %f884, %f652;
	fma.rn.f32 	%f673, %f886, %f654, %f672;
	fma.rn.f32 	%f900, %f887, %f656, %f673;
	mul.f32 	%f674, %f886, %f661;
	fma.rn.f32 	%f675, %f884, %f658, %f674;
	fma.rn.f32 	%f897, %f887, %f663, %f675;
	mul.f32 	%f676, %f886, %f667;
	fma.rn.f32 	%f677, %f884, %f665, %f676;
	fma.rn.f32 	%f894, %f887, %f671, %f677;
	mul.f32 	%f678, %f883, %f652;
	fma.rn.f32 	%f899, %f885, %f654, %f678;
	mul.f32 	%f679, %f885, %f661;
	fma.rn.f32 	%f896, %f883, %f658, %f679;
	mul.f32 	%f680, %f885, %f667;
	fma.rn.f32 	%f893, %f883, %f665, %f680;
	mul.f32 	%f898, %f882, %f652;
	mul.f32 	%f895, %f882, %f658;
	mul.f32 	%f892, %f882, %f665;

BB7_36:
	mul.f32 	%f712, %f893, %f897;
	mul.f32 	%f713, %f894, %f896;
	sub.f32 	%f714, %f713, %f712;
	mul.f32 	%f715, %f898, %f714;
	mul.f32 	%f716, %f892, %f897;
	mul.f32 	%f717, %f894, %f895;
	sub.f32 	%f718, %f717, %f716;
	mul.f32 	%f719, %f718, %f899;
	sub.f32 	%f720, %f715, %f719;
	mul.f32 	%f721, %f892, %f896;
	mul.f32 	%f722, %f893, %f895;
	sub.f32 	%f723, %f722, %f721;
	fma.rn.f32 	%f724, %f723, %f900, %f720;
	rcp.rn.f32 	%f725, %f724;
	mul.f32 	%f907, %f714, %f725;
	mul.f32 	%f726, %f894, %f899;
	mul.f32 	%f727, %f893, %f900;
	sub.f32 	%f728, %f727, %f726;
	mul.f32 	%f908, %f725, %f728;
	mul.f32 	%f729, %f896, %f900;
	mul.f32 	%f730, %f897, %f899;
	sub.f32 	%f731, %f730, %f729;
	mul.f32 	%f909, %f725, %f731;
	sub.f32 	%f732, %f716, %f717;
	mul.f32 	%f904, %f732, %f725;
	mul.f32 	%f733, %f892, %f900;
	mul.f32 	%f734, %f894, %f898;
	sub.f32 	%f735, %f734, %f733;
	mul.f32 	%f905, %f725, %f735;
	mul.f32 	%f736, %f897, %f898;
	mul.f32 	%f737, %f895, %f900;
	sub.f32 	%f738, %f737, %f736;
	mul.f32 	%f906, %f725, %f738;
	mul.f32 	%f901, %f723, %f725;
	mul.f32 	%f739, %f893, %f898;
	mul.f32 	%f740, %f892, %f899;
	sub.f32 	%f741, %f740, %f739;
	mul.f32 	%f902, %f741, %f725;
	mul.f32 	%f742, %f895, %f899;
	mul.f32 	%f743, %f896, %f898;
	sub.f32 	%f744, %f743, %f742;
	mul.f32 	%f903, %f744, %f725;
	bra.uni 	BB7_37;

BB7_26:
	setp.ne.s32	%p15, %r161, 1;
	mov.f32 	%f902, %f901;
	mov.f32 	%f904, %f901;
	mov.f32 	%f905, %f903;
	mov.f32 	%f906, %f901;
	mov.f32 	%f907, %f903;
	mov.f32 	%f908, %f901;
	mov.f32 	%f909, %f901;
	@%p15 bra 	BB7_37;

	// inline asm
	call (%rd142), _optix_get_static_transform_from_handle, (%rd140);
	// inline asm
	add.s64 	%rd264, %rd142, 64;

BB7_29:
	// inline asm
	cvta.to.global.u64 %rd146, %rd264;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r163,%r164,%r165,%r166}, [%rd146];
	// inline asm
	mov.b32 	 %f907, %r163;
	mov.b32 	 %f908, %r164;
	mov.b32 	 %f909, %r165;
	add.s64 	%rd150, %rd264, 16;
	// inline asm
	cvta.to.global.u64 %rd149, %rd150;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r167,%r168,%r169,%r170}, [%rd149];
	// inline asm
	mov.b32 	 %f904, %r167;
	mov.b32 	 %f905, %r168;
	mov.b32 	 %f906, %r169;
	add.s64 	%rd153, %rd264, 32;
	// inline asm
	cvta.to.global.u64 %rd152, %rd153;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r171,%r172,%r173,%r174}, [%rd152];
	// inline asm
	mov.b32 	 %f901, %r171;
	mov.b32 	 %f902, %r172;
	mov.b32 	 %f903, %r173;

BB7_37:
	setp.eq.s32	%p19, %r319, 0;
	@%p19 bra 	BB7_38;
	bra.uni 	BB7_39;

BB7_38:
	mov.f32 	%f881, %f901;
	mov.f32 	%f880, %f902;
	mov.f32 	%f879, %f903;
	mov.f32 	%f878, %f904;
	mov.f32 	%f877, %f905;
	mov.f32 	%f876, %f906;
	mov.f32 	%f875, %f907;
	mov.f32 	%f874, %f908;
	mov.f32 	%f873, %f909;
	bra.uni 	BB7_40;

BB7_39:
	mul.f32 	%f745, %f878, %f908;
	fma.rn.f32 	%f746, %f875, %f907, %f745;
	fma.rn.f32 	%f289, %f881, %f909, %f746;
	mul.f32 	%f747, %f877, %f908;
	fma.rn.f32 	%f748, %f874, %f907, %f747;
	fma.rn.f32 	%f290, %f880, %f909, %f748;
	mul.f32 	%f749, %f876, %f908;
	fma.rn.f32 	%f750, %f873, %f907, %f749;
	fma.rn.f32 	%f291, %f879, %f909, %f750;
	mul.f32 	%f751, %f878, %f905;
	fma.rn.f32 	%f752, %f875, %f904, %f751;
	fma.rn.f32 	%f292, %f881, %f906, %f752;
	mul.f32 	%f753, %f877, %f905;
	fma.rn.f32 	%f754, %f874, %f904, %f753;
	fma.rn.f32 	%f293, %f880, %f906, %f754;
	mul.f32 	%f755, %f876, %f905;
	fma.rn.f32 	%f756, %f873, %f904, %f755;
	fma.rn.f32 	%f294, %f879, %f906, %f756;
	mul.f32 	%f757, %f878, %f902;
	fma.rn.f32 	%f758, %f875, %f901, %f757;
	fma.rn.f32 	%f881, %f881, %f903, %f758;
	mul.f32 	%f759, %f877, %f902;
	fma.rn.f32 	%f760, %f874, %f901, %f759;
	fma.rn.f32 	%f880, %f880, %f903, %f760;
	mul.f32 	%f761, %f876, %f902;
	fma.rn.f32 	%f762, %f873, %f901, %f761;
	fma.rn.f32 	%f879, %f879, %f903, %f762;
	mov.f32 	%f878, %f292;
	mov.f32 	%f877, %f293;
	mov.f32 	%f876, %f294;
	mov.f32 	%f875, %f289;
	mov.f32 	%f874, %f290;
	mov.f32 	%f873, %f291;

BB7_40:
	add.s32 	%r319, %r319, 1;
	setp.lt.u32	%p20, %r319, %r8;
	@%p20 bra 	BB7_24;

	mul.f32 	%f763, %f576, %f874;
	fma.rn.f32 	%f764, %f575, %f875, %f763;
	fma.rn.f32 	%f919, %f921, %f873, %f764;
	mul.f32 	%f765, %f576, %f877;
	fma.rn.f32 	%f766, %f575, %f878, %f765;
	fma.rn.f32 	%f920, %f921, %f876, %f766;
	mul.f32 	%f767, %f576, %f880;
	fma.rn.f32 	%f768, %f575, %f881, %f767;
	fma.rn.f32 	%f921, %f921, %f879, %f768;
	bra.uni 	BB7_42;

BB7_22:
	mov.f32 	%f919, %f575;
	mov.f32 	%f920, %f576;

BB7_42:
	// inline asm
	call (%f769), _optix_get_ray_tmin, ();
	// inline asm
	// inline asm
	call (%f770), _optix_get_ray_tmax, ();
	// inline asm
	sub.f32 	%f313, %f770, %f769;
	fma.rn.f32 	%f773, %f919, %f769, %f872;
	fma.rn.f32 	%f774, %f920, %f769, %f871;
	fma.rn.f32 	%f775, %f921, %f769, %f870;
	ld.f32 	%f776, [%rd1+32];
	sub.f32 	%f777, %f773, %f776;
	ld.f32 	%f778, [%rd1+36];
	sub.f32 	%f779, %f774, %f778;
	ld.f32 	%f780, [%rd1+40];
	sub.f32 	%f781, %f775, %f780;
	mul.f32 	%f782, %f919, %f919;
	fma.rn.f32 	%f783, %f920, %f920, %f782;
	fma.rn.f32 	%f314, %f921, %f921, %f783;
	mul.f32 	%f784, %f777, %f919;
	fma.rn.f32 	%f785, %f779, %f920, %f784;
	fma.rn.f32 	%f786, %f781, %f921, %f785;
	add.f32 	%f315, %f786, %f786;
	mul.f32 	%f787, %f777, %f777;
	fma.rn.f32 	%f788, %f779, %f779, %f787;
	fma.rn.f32 	%f789, %f781, %f781, %f788;
	ld.f32 	%f790, [%rd1+48];
	mul.f32 	%f791, %f790, %f790;
	sub.f32 	%f316, %f789, %f791;
	setp.eq.f32	%p21, %f314, 0f00000000;
	setp.eq.f32	%p22, %f315, 0f00000000;
	and.pred  	%p23, %p21, %p22;
	mov.u16 	%rs13, 0;
	@%p23 bra 	BB7_46;

	neg.f32 	%f792, %f316;
	div.rn.f32 	%f923, %f792, %f315;
	mul.f32 	%f793, %f314, 0fC0800000;
	mul.f32 	%f794, %f793, %f316;
	fma.rn.f32 	%f318, %f315, %f315, %f794;
	setp.lt.f32	%p24, %f318, 0f00000000;
	setp.neu.f32	%p25, %f314, 0f00000000;
	and.pred  	%p26, %p24, %p25;
	@%p26 bra 	BB7_44;
	bra.uni 	BB7_45;

BB7_44:
	mov.f32 	%f922, %f923;
	bra.uni 	BB7_46;

BB7_45:
	mov.b32 	 %r309, %f315;
	and.b32  	%r310, %r309, -2147483648;
	sqrt.rn.f32 	%f795, %f318;
	mov.b32 	 %r311, %f795;
	and.b32  	%r312, %r311, 2147483647;
	or.b32  	%r313, %r312, %r310;
	mov.b32 	 %f796, %r313;
	add.f32 	%f797, %f315, %f796;
	mul.f32 	%f798, %f797, 0fBF000000;
	div.rn.f32 	%f799, %f798, %f314;
	div.rn.f32 	%f800, %f316, %f798;
	min.f32 	%f801, %f799, %f800;
	max.f32 	%f802, %f799, %f800;
	selp.f32	%f922, %f923, %f801, %p21;
	selp.f32	%f923, %f923, %f802, %p21;
	mov.u16 	%rs13, 1;

BB7_46:
	setp.gtu.f32	%p29, %f922, %f313;
	mov.pred 	%p38, 0;
	@%p29 bra 	BB7_48;

	setp.ge.f32	%p38, %f923, 0f00000000;

BB7_48:
	setp.lt.f32	%p30, %f922, 0f00000000;
	setp.geu.f32	%p31, %f922, 0f00000000;
	setp.leu.f32	%p32, %f923, %f313;
	or.pred  	%p33, %p32, %p31;
	selp.f32	%f323, %f923, %f922, %p30;
	setp.ne.s16	%p34, %rs13, 0;
	and.pred  	%p35, %p34, %p38;
	and.pred  	%p36, %p35, %p33;
	@!%p36 bra 	BB7_50;
	bra.uni 	BB7_49;

BB7_49:
	mov.u32 	%r315, 254;
	// inline asm
	call (%r314), _optix_report_intersection_0, (%f323, %r315);
	// inline asm

BB7_50:
	ret;
}

	// .globl	__closesthit__sphere
.visible .entry __closesthit__sphere(

)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<2>;


	// inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%f1), _optix_get_ray_tmax, ();
	// inline asm
	ld.u32 	%r10, [%rd1];
	mov.b32 	 %r2, %f1;
	mov.u32 	%r8, 0;
	// inline asm
	call _optix_set_payload, (%r8, %r2);
	// inline asm
	mov.u32 	%r3, 1;
	// inline asm
	call _optix_set_payload, (%r3, %r13);
	// inline asm
	mov.u32 	%r5, 2;
	// inline asm
	call _optix_set_payload, (%r5, %r14);
	// inline asm
	mov.u32 	%r7, 3;
	// inline asm
	call _optix_set_payload, (%r7, %r8);
	// inline asm
	mov.u32 	%r9, 4;
	// inline asm
	call _optix_set_payload, (%r9, %r10);
	// inline asm
	mov.u32 	%r12, 5;
	// inline asm
	call (%r11), _optix_get_payload, (%r12);
	// inline asm
	setp.eq.s32	%p1, %r11, 0;
	@%p1 bra 	BB8_2;

	// inline asm
	call (%r15), _optix_read_instance_id, ();
	// inline asm
	// inline asm
	call _optix_set_payload, (%r12, %r15);
	// inline asm

BB8_2:
	ret;
}

	// .globl	__intersection__asphsurf
.visible .entry __intersection__asphsurf(

)
{
	.reg .pred 	%p<38>;
	.reg .b16 	%rs<9>;
	.reg .f32 	%f<986>;
	.reg .b32 	%r<322>;
	.reg .b64 	%rd<266>;


	// inline asm
	call (%rd19), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.u64 	%rd1, [%rd19+8];
	// inline asm
	call (%f330), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f331), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f932), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%r8), _optix_get_transform_list_size, ();
	// inline asm
	setp.eq.s32	%p2, %r8, 0;
	@%p2 bra 	BB9_1;

	mov.u32 	%r320, 0;
	// inline asm
	call (%f333), _optix_get_ray_time, ();
	// inline asm

BB9_3:
	.pragma "nounroll";
	// inline asm
	call (%rd20), _optix_get_transform_list_handle, (%r320);
	// inline asm
	// inline asm
	call (%r11), _optix_get_transform_type_from_handle, (%rd20);
	// inline asm
	and.b32  	%r12, %r11, -2;
	setp.eq.s32	%p3, %r12, 2;
	@%p3 bra 	BB9_9;
	bra.uni 	BB9_4;

BB9_9:
	setp.eq.s32	%p6, %r11, 2;
	@%p6 bra 	BB9_13;
	bra.uni 	BB9_10;

BB9_13:
	// inline asm
	call (%rd94), _optix_get_matrix_motion_transform_from_handle, (%rd20);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd96, %rd94;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r100,%r101,%r102,%r103}, [%rd96];
	// inline asm
	mov.b32	{%rs3, %rs4}, %r102;
	add.s64 	%rd100, %rd94, 16;
	// inline asm
	cvta.to.global.u64 %rd99, %rd100;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r104,%r105,%r106,%r107}, [%rd99];
	// inline asm
	add.s64 	%rd103, %rd94, 32;
	// inline asm
	cvta.to.global.u64 %rd102, %rd103;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r108,%r109,%r110,%r111}, [%rd102];
	// inline asm
	add.s64 	%rd106, %rd94, 48;
	// inline asm
	cvta.to.global.u64 %rd105, %rd106;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r112,%r113,%r114,%r115}, [%rd105];
	// inline asm
	add.s64 	%rd109, %rd94, 64;
	// inline asm
	cvta.to.global.u64 %rd108, %rd109;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r116,%r117,%r118,%r119}, [%rd108];
	// inline asm
	add.s64 	%rd112, %rd94, 80;
	// inline asm
	cvta.to.global.u64 %rd111, %rd112;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r120,%r121,%r122,%r123}, [%rd111];
	// inline asm
	add.s64 	%rd115, %rd94, 96;
	// inline asm
	cvta.to.global.u64 %rd114, %rd115;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r124,%r125,%r126,%r127}, [%rd114];
	// inline asm
	add.s64 	%rd118, %rd94, 112;
	// inline asm
	cvta.to.global.u64 %rd117, %rd118;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r128,%r129,%r130,%r131}, [%rd117];
	// inline asm
	mov.b32 	 %f460, %r103;
	mov.b32 	 %f461, %r104;
	cvt.u32.u16	%r144, %rs3;
	add.s32 	%r145, %r144, -1;
	cvt.rn.f32.s32	%f462, %r145;
	sub.f32 	%f463, %f333, %f460;
	mul.f32 	%f464, %f463, %f462;
	sub.f32 	%f465, %f461, %f460;
	div.rn.f32 	%f466, %f464, %f465;
	min.f32 	%f467, %f462, %f466;
	mov.f32 	%f468, 0f00000000;
	max.f32 	%f469, %f468, %f467;
	cvt.rmi.f32.f32	%f470, %f469;
	cvt.rzi.s32.f32	%r146, %f470;
	mul.wide.s32 	%rd129, %r146, 48;
	add.s64 	%rd121, %rd103, %rd129;
	// inline asm
	cvta.to.global.u64 %rd120, %rd121;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r132,%r133,%r134,%r135}, [%rd120];
	// inline asm
	mov.b32 	 %f904, %r132;
	mov.b32 	 %f905, %r133;
	mov.b32 	 %f906, %r134;
	mov.b32 	 %f907, %r135;
	add.s64 	%rd124, %rd121, 16;
	// inline asm
	cvta.to.global.u64 %rd123, %rd124;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r136,%r137,%r138,%r139}, [%rd123];
	// inline asm
	mov.b32 	 %f900, %r136;
	mov.b32 	 %f901, %r137;
	mov.b32 	 %f902, %r138;
	mov.b32 	 %f903, %r139;
	add.s64 	%rd127, %rd121, 32;
	// inline asm
	cvta.to.global.u64 %rd126, %rd127;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r140,%r141,%r142,%r143}, [%rd126];
	// inline asm
	sub.f32 	%f98, %f469, %f470;
	mov.b32 	 %f896, %r140;
	mov.b32 	 %f897, %r141;
	mov.b32 	 %f898, %r142;
	mov.b32 	 %f899, %r143;
	setp.leu.f32	%p8, %f98, 0f00000000;
	@%p8 bra 	BB9_15;

	cvt.rmi.f32.f32	%f867, %f469;
	cvt.rzi.s32.f32	%r319, %f867;
	cvt.s64.s32	%rd263, %r319;
	mul.lo.s64 	%rd139, %rd263, 48;
	add.s64 	%rd140, %rd94, %rd139;
	add.s64 	%rd131, %rd140, 80;
	// inline asm
	cvta.to.global.u64 %rd130, %rd131;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r147,%r148,%r149,%r150}, [%rd130];
	// inline asm
	mov.b32 	 %f471, %r147;
	mov.b32 	 %f472, %r148;
	mov.b32 	 %f473, %r149;
	mov.b32 	 %f474, %r150;
	add.s64 	%rd134, %rd140, 96;
	// inline asm
	cvta.to.global.u64 %rd133, %rd134;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r151,%r152,%r153,%r154}, [%rd133];
	// inline asm
	mov.b32 	 %f475, %r151;
	mov.b32 	 %f476, %r152;
	mov.b32 	 %f477, %r153;
	mov.b32 	 %f478, %r154;
	add.s64 	%rd137, %rd140, 112;
	// inline asm
	cvta.to.global.u64 %rd136, %rd137;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r155,%r156,%r157,%r158}, [%rd136];
	// inline asm
	mov.f32 	%f479, 0f3F800000;
	sub.f32 	%f480, %f479, %f98;
	mul.f32 	%f481, %f98, %f471;
	mul.f32 	%f482, %f98, %f472;
	mul.f32 	%f483, %f98, %f473;
	mul.f32 	%f484, %f98, %f474;
	fma.rn.f32 	%f904, %f480, %f904, %f481;
	fma.rn.f32 	%f905, %f480, %f905, %f482;
	fma.rn.f32 	%f906, %f480, %f906, %f483;
	fma.rn.f32 	%f907, %f480, %f907, %f484;
	mul.f32 	%f485, %f98, %f475;
	mul.f32 	%f486, %f98, %f476;
	mul.f32 	%f487, %f98, %f477;
	mul.f32 	%f488, %f98, %f478;
	fma.rn.f32 	%f900, %f480, %f900, %f485;
	fma.rn.f32 	%f901, %f480, %f901, %f486;
	fma.rn.f32 	%f902, %f480, %f902, %f487;
	fma.rn.f32 	%f903, %f480, %f903, %f488;
	mov.b32 	 %f489, %r155;
	mov.b32 	 %f490, %r156;
	mov.b32 	 %f491, %r157;
	mov.b32 	 %f492, %r158;
	mul.f32 	%f493, %f98, %f489;
	mul.f32 	%f494, %f98, %f490;
	mul.f32 	%f495, %f98, %f491;
	mul.f32 	%f496, %f98, %f492;
	fma.rn.f32 	%f896, %f480, %f896, %f493;
	fma.rn.f32 	%f897, %f480, %f897, %f494;
	fma.rn.f32 	%f898, %f480, %f898, %f495;
	fma.rn.f32 	%f899, %f480, %f899, %f496;
	bra.uni 	BB9_15;

BB9_4:
	mov.f32 	%f908, 0f00000000;
	mov.f32 	%f910, 0f3F800000;
	setp.eq.s32	%p4, %r11, 4;
	@%p4 bra 	BB9_7;
	bra.uni 	BB9_5;

BB9_7:
	// inline asm
	call (%rd264), _optix_get_instance_inverse_transform_from_handle, (%rd20);
	// inline asm
	bra.uni 	BB9_8;

BB9_10:
	// inline asm
	call (%rd35), _optix_get_srt_motion_transform_from_handle, (%rd20);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd37, %rd35;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r25,%r26,%r27,%r28}, [%rd37];
	// inline asm
	mov.b32	{%rs1, %rs2}, %r27;
	add.s64 	%rd41, %rd35, 16;
	// inline asm
	cvta.to.global.u64 %rd40, %rd41;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r29,%r30,%r31,%r32}, [%rd40];
	// inline asm
	add.s64 	%rd44, %rd35, 32;
	// inline asm
	cvta.to.global.u64 %rd43, %rd44;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r33,%r34,%r35,%r36}, [%rd43];
	// inline asm
	add.s64 	%rd47, %rd35, 48;
	// inline asm
	cvta.to.global.u64 %rd46, %rd47;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r37,%r38,%r39,%r40}, [%rd46];
	// inline asm
	add.s64 	%rd50, %rd35, 64;
	// inline asm
	cvta.to.global.u64 %rd49, %rd50;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r41,%r42,%r43,%r44}, [%rd49];
	// inline asm
	add.s64 	%rd53, %rd35, 80;
	// inline asm
	cvta.to.global.u64 %rd52, %rd53;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r45,%r46,%r47,%r48}, [%rd52];
	// inline asm
	add.s64 	%rd56, %rd35, 96;
	// inline asm
	cvta.to.global.u64 %rd55, %rd56;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r49,%r50,%r51,%r52}, [%rd55];
	// inline asm
	add.s64 	%rd59, %rd35, 112;
	// inline asm
	cvta.to.global.u64 %rd58, %rd59;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r53,%r54,%r55,%r56}, [%rd58];
	// inline asm
	add.s64 	%rd62, %rd35, 128;
	// inline asm
	cvta.to.global.u64 %rd61, %rd62;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r57,%r58,%r59,%r60}, [%rd61];
	// inline asm
	add.s64 	%rd65, %rd35, 144;
	// inline asm
	cvta.to.global.u64 %rd64, %rd65;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r61,%r62,%r63,%r64}, [%rd64];
	// inline asm
	mov.b32 	 %f347, %r28;
	mov.b32 	 %f348, %r29;
	cvt.u32.u16	%r81, %rs1;
	add.s32 	%r82, %r81, -1;
	cvt.rn.f32.s32	%f349, %r82;
	sub.f32 	%f350, %f333, %f347;
	mul.f32 	%f351, %f350, %f349;
	sub.f32 	%f352, %f348, %f347;
	div.rn.f32 	%f353, %f351, %f352;
	min.f32 	%f354, %f349, %f353;
	mov.f32 	%f355, 0f00000000;
	max.f32 	%f356, %f355, %f354;
	cvt.rmi.f32.f32	%f357, %f356;
	cvt.rzi.s32.f32	%r83, %f357;
	mul.wide.s32 	%rd79, %r83, 64;
	add.s64 	%rd68, %rd44, %rd79;
	// inline asm
	cvta.to.global.u64 %rd67, %rd68;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r65,%r66,%r67,%r68}, [%rd67];
	// inline asm
	mov.b32 	 %f880, %r65;
	mov.b32 	 %f881, %r66;
	mov.b32 	 %f882, %r67;
	mov.b32 	 %f883, %r68;
	add.s64 	%rd71, %rd68, 16;
	// inline asm
	cvta.to.global.u64 %rd70, %rd71;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r69,%r70,%r71,%r72}, [%rd70];
	// inline asm
	mov.b32 	 %f884, %r69;
	mov.b32 	 %f885, %r70;
	mov.b32 	 %f886, %r71;
	mov.b32 	 %f887, %r72;
	add.s64 	%rd74, %rd68, 32;
	// inline asm
	cvta.to.global.u64 %rd73, %rd74;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r73,%r74,%r75,%r76}, [%rd73];
	// inline asm
	sub.f32 	%f37, %f356, %f357;
	mov.b32 	 %f888, %r73;
	mov.b32 	 %f889, %r74;
	mov.b32 	 %f890, %r75;
	mov.b32 	 %f891, %r76;
	add.s64 	%rd77, %rd68, 48;
	// inline asm
	cvta.to.global.u64 %rd76, %rd77;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r77,%r78,%r79,%r80}, [%rd76];
	// inline asm
	mov.b32 	 %f892, %r77;
	mov.b32 	 %f893, %r78;
	mov.b32 	 %f894, %r79;
	mov.b32 	 %f895, %r80;
	setp.leu.f32	%p7, %f37, 0f00000000;
	@%p7 bra 	BB9_12;

	cvt.rmi.f32.f32	%f866, %f356;
	cvt.rzi.s32.f32	%r318, %f866;
	cvt.s64.s32	%rd262, %r318;
	shl.b64 	%rd92, %rd262, 6;
	add.s64 	%rd93, %rd92, %rd35;
	add.s64 	%rd81, %rd93, 96;
	// inline asm
	cvta.to.global.u64 %rd80, %rd81;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r84,%r85,%r86,%r87}, [%rd80];
	// inline asm
	mov.b32 	 %f358, %r84;
	mov.b32 	 %f359, %r85;
	mov.b32 	 %f360, %r86;
	mov.b32 	 %f361, %r87;
	add.s64 	%rd84, %rd93, 112;
	// inline asm
	cvta.to.global.u64 %rd83, %rd84;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r88,%r89,%r90,%r91}, [%rd83];
	// inline asm
	mov.b32 	 %f362, %r88;
	mov.b32 	 %f363, %r89;
	mov.b32 	 %f364, %r90;
	mov.b32 	 %f365, %r91;
	add.s64 	%rd87, %rd93, 128;
	// inline asm
	cvta.to.global.u64 %rd86, %rd87;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r92,%r93,%r94,%r95}, [%rd86];
	// inline asm
	mov.b32 	 %f366, %r92;
	mov.b32 	 %f367, %r93;
	mov.b32 	 %f368, %r94;
	mov.b32 	 %f369, %r95;
	add.s64 	%rd90, %rd93, 144;
	// inline asm
	cvta.to.global.u64 %rd89, %rd90;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r96,%r97,%r98,%r99}, [%rd89];
	// inline asm
	mov.f32 	%f370, 0f3F800000;
	sub.f32 	%f371, %f370, %f37;
	mul.f32 	%f372, %f37, %f358;
	mul.f32 	%f373, %f37, %f359;
	mul.f32 	%f374, %f37, %f360;
	mul.f32 	%f375, %f37, %f361;
	fma.rn.f32 	%f880, %f371, %f880, %f372;
	fma.rn.f32 	%f881, %f371, %f881, %f373;
	fma.rn.f32 	%f882, %f371, %f882, %f374;
	fma.rn.f32 	%f883, %f371, %f883, %f375;
	mul.f32 	%f376, %f37, %f362;
	mul.f32 	%f377, %f37, %f363;
	mul.f32 	%f378, %f37, %f364;
	mul.f32 	%f379, %f37, %f365;
	fma.rn.f32 	%f884, %f371, %f884, %f376;
	fma.rn.f32 	%f885, %f371, %f885, %f377;
	fma.rn.f32 	%f886, %f371, %f886, %f378;
	fma.rn.f32 	%f887, %f371, %f887, %f379;
	mul.f32 	%f380, %f37, %f366;
	mul.f32 	%f381, %f37, %f367;
	mul.f32 	%f382, %f37, %f368;
	mul.f32 	%f383, %f37, %f369;
	fma.rn.f32 	%f888, %f371, %f888, %f380;
	fma.rn.f32 	%f384, %f371, %f889, %f381;
	fma.rn.f32 	%f385, %f371, %f890, %f382;
	fma.rn.f32 	%f386, %f371, %f891, %f383;
	mov.b32 	 %f387, %r96;
	mov.b32 	 %f388, %r97;
	mov.b32 	 %f389, %r98;
	mov.b32 	 %f390, %r99;
	mul.f32 	%f391, %f37, %f387;
	mul.f32 	%f392, %f37, %f388;
	mul.f32 	%f393, %f37, %f389;
	mul.f32 	%f394, %f37, %f390;
	fma.rn.f32 	%f395, %f371, %f892, %f391;
	fma.rn.f32 	%f893, %f371, %f893, %f392;
	fma.rn.f32 	%f894, %f371, %f894, %f393;
	fma.rn.f32 	%f895, %f371, %f895, %f394;
	mul.f32 	%f396, %f385, %f385;
	fma.rn.f32 	%f397, %f384, %f384, %f396;
	fma.rn.f32 	%f398, %f386, %f386, %f397;
	fma.rn.f32 	%f399, %f395, %f395, %f398;
	sqrt.rn.f32 	%f400, %f399;
	rcp.rn.f32 	%f401, %f400;
	mul.f32 	%f889, %f384, %f401;
	mul.f32 	%f890, %f385, %f401;
	mul.f32 	%f891, %f386, %f401;
	mul.f32 	%f892, %f395, %f401;

BB9_12:
	mul.f32 	%f402, %f890, %f890;
	fma.rn.f32 	%f403, %f889, %f889, %f402;
	fma.rn.f32 	%f404, %f891, %f891, %f403;
	fma.rn.f32 	%f405, %f892, %f892, %f404;
	rcp.rn.f32 	%f406, %f405;
	mul.f32 	%f407, %f889, %f406;
	mul.f32 	%f408, %f890, %f406;
	mul.f32 	%f409, %f891, %f406;
	mul.f32 	%f410, %f892, %f406;
	mul.f32 	%f411, %f889, %f407;
	mul.f32 	%f412, %f890, %f408;
	mul.f32 	%f413, %f891, %f409;
	mul.f32 	%f414, %f889, %f408;
	mul.f32 	%f415, %f891, %f410;
	mul.f32 	%f416, %f889, %f409;
	mul.f32 	%f417, %f890, %f410;
	mul.f32 	%f418, %f890, %f409;
	mul.f32 	%f419, %f889, %f410;
	sub.f32 	%f420, %f411, %f412;
	sub.f32 	%f421, %f420, %f413;
	fma.rn.f32 	%f422, %f892, %f410, %f421;
	sub.f32 	%f423, %f414, %f415;
	add.f32 	%f424, %f423, %f423;
	add.f32 	%f425, %f416, %f417;
	add.f32 	%f426, %f425, %f425;
	add.f32 	%f427, %f414, %f415;
	add.f32 	%f428, %f427, %f427;
	sub.f32 	%f429, %f412, %f411;
	sub.f32 	%f430, %f429, %f413;
	fma.rn.f32 	%f431, %f892, %f410, %f430;
	sub.f32 	%f432, %f418, %f419;
	add.f32 	%f433, %f432, %f432;
	sub.f32 	%f434, %f416, %f417;
	add.f32 	%f435, %f434, %f434;
	add.f32 	%f436, %f418, %f419;
	add.f32 	%f437, %f436, %f436;
	neg.f32 	%f438, %f411;
	sub.f32 	%f439, %f438, %f412;
	add.f32 	%f440, %f413, %f439;
	fma.rn.f32 	%f441, %f892, %f410, %f440;
	mul.f32 	%f442, %f883, %f422;
	fma.rn.f32 	%f443, %f886, %f424, %f442;
	fma.rn.f32 	%f444, %f888, %f426, %f443;
	add.f32 	%f907, %f893, %f444;
	mul.f32 	%f445, %f886, %f431;
	fma.rn.f32 	%f446, %f883, %f428, %f445;
	fma.rn.f32 	%f447, %f888, %f433, %f446;
	add.f32 	%f903, %f894, %f447;
	mul.f32 	%f448, %f886, %f437;
	fma.rn.f32 	%f449, %f883, %f435, %f448;
	fma.rn.f32 	%f450, %f888, %f441, %f449;
	add.f32 	%f899, %f895, %f450;
	mul.f32 	%f451, %f882, %f422;
	fma.rn.f32 	%f452, %f885, %f424, %f451;
	fma.rn.f32 	%f906, %f887, %f426, %f452;
	mul.f32 	%f453, %f885, %f431;
	fma.rn.f32 	%f454, %f882, %f428, %f453;
	fma.rn.f32 	%f902, %f887, %f433, %f454;
	mul.f32 	%f455, %f885, %f437;
	fma.rn.f32 	%f456, %f882, %f435, %f455;
	fma.rn.f32 	%f898, %f887, %f441, %f456;
	mul.f32 	%f457, %f881, %f422;
	fma.rn.f32 	%f905, %f884, %f424, %f457;
	mul.f32 	%f458, %f884, %f431;
	fma.rn.f32 	%f901, %f881, %f428, %f458;
	mul.f32 	%f459, %f884, %f437;
	fma.rn.f32 	%f897, %f881, %f435, %f459;
	mul.f32 	%f904, %f880, %f422;
	mul.f32 	%f900, %f880, %f428;
	mul.f32 	%f896, %f880, %f435;

BB9_15:
	mul.f32 	%f497, %f897, %f902;
	mul.f32 	%f498, %f898, %f901;
	sub.f32 	%f499, %f498, %f497;
	mul.f32 	%f500, %f904, %f499;
	mul.f32 	%f501, %f896, %f902;
	mul.f32 	%f502, %f898, %f900;
	sub.f32 	%f503, %f502, %f501;
	mul.f32 	%f504, %f503, %f905;
	sub.f32 	%f505, %f500, %f504;
	mul.f32 	%f506, %f896, %f901;
	mul.f32 	%f507, %f897, %f900;
	sub.f32 	%f508, %f507, %f506;
	fma.rn.f32 	%f509, %f508, %f906, %f505;
	rcp.rn.f32 	%f510, %f509;
	mul.f32 	%f916, %f499, %f510;
	mul.f32 	%f511, %f898, %f905;
	mul.f32 	%f512, %f897, %f906;
	sub.f32 	%f513, %f512, %f511;
	mul.f32 	%f917, %f510, %f513;
	mul.f32 	%f514, %f901, %f906;
	mul.f32 	%f515, %f902, %f905;
	sub.f32 	%f516, %f515, %f514;
	mul.f32 	%f918, %f510, %f516;
	sub.f32 	%f517, %f501, %f502;
	mul.f32 	%f912, %f517, %f510;
	mul.f32 	%f518, %f896, %f906;
	mul.f32 	%f519, %f898, %f904;
	sub.f32 	%f520, %f519, %f518;
	mul.f32 	%f913, %f510, %f520;
	mul.f32 	%f521, %f902, %f904;
	mul.f32 	%f522, %f900, %f906;
	sub.f32 	%f523, %f522, %f521;
	mul.f32 	%f914, %f510, %f523;
	mul.f32 	%f908, %f508, %f510;
	mul.f32 	%f524, %f897, %f904;
	mul.f32 	%f525, %f896, %f905;
	sub.f32 	%f526, %f525, %f524;
	mul.f32 	%f909, %f526, %f510;
	mul.f32 	%f527, %f900, %f905;
	mul.f32 	%f528, %f901, %f904;
	sub.f32 	%f529, %f528, %f527;
	mul.f32 	%f910, %f529, %f510;
	mul.f32 	%f530, %f907, %f916;
	neg.f32 	%f531, %f530;
	mul.f32 	%f532, %f903, %f917;
	sub.f32 	%f533, %f531, %f532;
	mul.f32 	%f534, %f899, %f918;
	sub.f32 	%f919, %f533, %f534;
	mul.f32 	%f535, %f907, %f912;
	neg.f32 	%f536, %f535;
	mul.f32 	%f537, %f903, %f913;
	sub.f32 	%f538, %f536, %f537;
	mul.f32 	%f539, %f899, %f914;
	sub.f32 	%f915, %f538, %f539;
	mul.f32 	%f540, %f907, %f908;
	neg.f32 	%f541, %f540;
	mul.f32 	%f542, %f903, %f909;
	sub.f32 	%f543, %f541, %f542;
	mul.f32 	%f544, %f899, %f910;
	sub.f32 	%f911, %f543, %f544;
	bra.uni 	BB9_16;

BB9_5:
	setp.ne.s32	%p5, %r11, 1;
	mov.f32 	%f909, %f908;
	mov.f32 	%f911, %f908;
	mov.f32 	%f912, %f908;
	mov.f32 	%f913, %f910;
	mov.f32 	%f914, %f908;
	mov.f32 	%f915, %f908;
	mov.f32 	%f916, %f910;
	mov.f32 	%f917, %f908;
	mov.f32 	%f918, %f908;
	mov.f32 	%f919, %f908;
	@%p5 bra 	BB9_16;

	// inline asm
	call (%rd22), _optix_get_static_transform_from_handle, (%rd20);
	// inline asm
	add.s64 	%rd264, %rd22, 64;

BB9_8:
	// inline asm
	cvta.to.global.u64 %rd26, %rd264;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r13,%r14,%r15,%r16}, [%rd26];
	// inline asm
	mov.b32 	 %f916, %r13;
	mov.b32 	 %f917, %r14;
	mov.b32 	 %f918, %r15;
	mov.b32 	 %f919, %r16;
	add.s64 	%rd30, %rd264, 16;
	// inline asm
	cvta.to.global.u64 %rd29, %rd30;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r17,%r18,%r19,%r20}, [%rd29];
	// inline asm
	mov.b32 	 %f912, %r17;
	mov.b32 	 %f913, %r18;
	mov.b32 	 %f914, %r19;
	mov.b32 	 %f915, %r20;
	add.s64 	%rd33, %rd264, 32;
	// inline asm
	cvta.to.global.u64 %rd32, %rd33;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r21,%r22,%r23,%r24}, [%rd32];
	// inline asm
	mov.b32 	 %f908, %r21;
	mov.b32 	 %f909, %r22;
	mov.b32 	 %f910, %r23;
	mov.b32 	 %f911, %r24;

BB9_16:
	setp.eq.s32	%p9, %r320, 0;
	@%p9 bra 	BB9_17;
	bra.uni 	BB9_18;

BB9_17:
	mov.f32 	%f879, %f919;
	mov.f32 	%f878, %f918;
	mov.f32 	%f877, %f917;
	mov.f32 	%f876, %f916;
	mov.f32 	%f875, %f915;
	mov.f32 	%f874, %f914;
	mov.f32 	%f873, %f913;
	mov.f32 	%f872, %f912;
	mov.f32 	%f871, %f911;
	mov.f32 	%f870, %f910;
	mov.f32 	%f869, %f909;
	mov.f32 	%f868, %f908;
	bra.uni 	BB9_19;

BB9_18:
	mul.f32 	%f545, %f872, %f917;
	fma.rn.f32 	%f546, %f876, %f916, %f545;
	fma.rn.f32 	%f151, %f868, %f918, %f546;
	mul.f32 	%f547, %f873, %f917;
	fma.rn.f32 	%f548, %f877, %f916, %f547;
	fma.rn.f32 	%f152, %f869, %f918, %f548;
	mul.f32 	%f549, %f874, %f917;
	fma.rn.f32 	%f550, %f878, %f916, %f549;
	fma.rn.f32 	%f153, %f870, %f918, %f550;
	mul.f32 	%f551, %f875, %f917;
	fma.rn.f32 	%f552, %f879, %f916, %f551;
	fma.rn.f32 	%f553, %f871, %f918, %f552;
	add.f32 	%f154, %f919, %f553;
	mul.f32 	%f554, %f872, %f913;
	fma.rn.f32 	%f555, %f876, %f912, %f554;
	fma.rn.f32 	%f155, %f868, %f914, %f555;
	mul.f32 	%f556, %f873, %f913;
	fma.rn.f32 	%f557, %f877, %f912, %f556;
	fma.rn.f32 	%f156, %f869, %f914, %f557;
	mul.f32 	%f558, %f874, %f913;
	fma.rn.f32 	%f559, %f878, %f912, %f558;
	fma.rn.f32 	%f157, %f870, %f914, %f559;
	mul.f32 	%f560, %f875, %f913;
	fma.rn.f32 	%f561, %f879, %f912, %f560;
	fma.rn.f32 	%f562, %f871, %f914, %f561;
	add.f32 	%f158, %f915, %f562;
	mul.f32 	%f563, %f872, %f909;
	fma.rn.f32 	%f564, %f876, %f908, %f563;
	fma.rn.f32 	%f868, %f868, %f910, %f564;
	mul.f32 	%f565, %f873, %f909;
	fma.rn.f32 	%f566, %f877, %f908, %f565;
	fma.rn.f32 	%f869, %f869, %f910, %f566;
	mul.f32 	%f567, %f874, %f909;
	fma.rn.f32 	%f568, %f878, %f908, %f567;
	fma.rn.f32 	%f870, %f870, %f910, %f568;
	mul.f32 	%f569, %f875, %f909;
	fma.rn.f32 	%f570, %f879, %f908, %f569;
	fma.rn.f32 	%f571, %f871, %f910, %f570;
	add.f32 	%f871, %f911, %f571;
	mov.f32 	%f879, %f154;
	mov.f32 	%f878, %f153;
	mov.f32 	%f877, %f152;
	mov.f32 	%f876, %f151;
	mov.f32 	%f875, %f158;
	mov.f32 	%f874, %f157;
	mov.f32 	%f873, %f156;
	mov.f32 	%f872, %f155;

BB9_19:
	add.s32 	%r320, %r320, 1;
	setp.lt.u32	%p10, %r320, %r8;
	@%p10 bra 	BB9_3;

	mul.f32 	%f572, %f330, %f876;
	fma.rn.f32 	%f573, %f331, %f877, %f572;
	fma.rn.f32 	%f574, %f932, %f878, %f573;
	add.f32 	%f934, %f879, %f574;
	mul.f32 	%f575, %f330, %f872;
	fma.rn.f32 	%f576, %f331, %f873, %f575;
	fma.rn.f32 	%f577, %f932, %f874, %f576;
	add.f32 	%f933, %f875, %f577;
	mul.f32 	%f578, %f330, %f868;
	fma.rn.f32 	%f579, %f331, %f869, %f578;
	fma.rn.f32 	%f580, %f932, %f870, %f579;
	add.f32 	%f932, %f871, %f580;
	bra.uni 	BB9_21;

BB9_1:
	mov.f32 	%f933, %f331;
	mov.f32 	%f934, %f330;

BB9_21:
	setp.eq.s32	%p36, %r8, 0;
	// inline asm
	call (%f581), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f582), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f983), _optix_get_world_ray_direction_z, ();
	// inline asm
	@%p36 bra 	BB9_22;

	mov.u32 	%r321, 0;
	// inline asm
	call (%f584), _optix_get_ray_time, ();
	// inline asm

BB9_24:
	.pragma "nounroll";
	// inline asm
	call (%rd141), _optix_get_transform_list_handle, (%r321);
	// inline asm
	// inline asm
	call (%r161), _optix_get_transform_type_from_handle, (%rd141);
	// inline asm
	and.b32  	%r162, %r161, -2;
	setp.eq.s32	%p12, %r162, 2;
	@%p12 bra 	BB9_30;
	bra.uni 	BB9_25;

BB9_30:
	setp.eq.s32	%p15, %r161, 2;
	@%p15 bra 	BB9_34;
	bra.uni 	BB9_31;

BB9_34:
	// inline asm
	call (%rd215), _optix_get_matrix_motion_transform_from_handle, (%rd141);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd217, %rd215;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r250,%r251,%r252,%r253}, [%rd217];
	// inline asm
	mov.b32	{%rs7, %rs8}, %r252;
	add.s64 	%rd221, %rd215, 16;
	// inline asm
	cvta.to.global.u64 %rd220, %rd221;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r254,%r255,%r256,%r257}, [%rd220];
	// inline asm
	add.s64 	%rd224, %rd215, 32;
	// inline asm
	cvta.to.global.u64 %rd223, %rd224;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r258,%r259,%r260,%r261}, [%rd223];
	// inline asm
	add.s64 	%rd227, %rd215, 48;
	// inline asm
	cvta.to.global.u64 %rd226, %rd227;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r262,%r263,%r264,%r265}, [%rd226];
	// inline asm
	add.s64 	%rd230, %rd215, 64;
	// inline asm
	cvta.to.global.u64 %rd229, %rd230;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r266,%r267,%r268,%r269}, [%rd229];
	// inline asm
	add.s64 	%rd233, %rd215, 80;
	// inline asm
	cvta.to.global.u64 %rd232, %rd233;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r270,%r271,%r272,%r273}, [%rd232];
	// inline asm
	add.s64 	%rd236, %rd215, 96;
	// inline asm
	cvta.to.global.u64 %rd235, %rd236;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r274,%r275,%r276,%r277}, [%rd235];
	// inline asm
	add.s64 	%rd239, %rd215, 112;
	// inline asm
	cvta.to.global.u64 %rd238, %rd239;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r278,%r279,%r280,%r281}, [%rd238];
	// inline asm
	mov.b32 	 %f687, %r253;
	mov.b32 	 %f688, %r254;
	cvt.u32.u16	%r294, %rs7;
	add.s32 	%r295, %r294, -1;
	cvt.rn.f32.s32	%f689, %r295;
	sub.f32 	%f690, %f584, %f687;
	mul.f32 	%f691, %f690, %f689;
	sub.f32 	%f692, %f688, %f687;
	div.rn.f32 	%f693, %f691, %f692;
	min.f32 	%f694, %f689, %f693;
	mov.f32 	%f695, 0f00000000;
	max.f32 	%f696, %f695, %f694;
	cvt.rmi.f32.f32	%f697, %f696;
	cvt.rzi.s32.f32	%r296, %f697;
	cvt.s64.s32	%rd17, %r296;
	mul.wide.s32 	%rd250, %r296, 48;
	add.s64 	%rd242, %rd224, %rd250;
	// inline asm
	cvta.to.global.u64 %rd241, %rd242;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r282,%r283,%r284,%r285}, [%rd241];
	// inline asm
	mov.b32 	 %f960, %r282;
	mov.b32 	 %f961, %r283;
	mov.b32 	 %f962, %r284;
	add.s64 	%rd245, %rd242, 16;
	// inline asm
	cvta.to.global.u64 %rd244, %rd245;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r286,%r287,%r288,%r289}, [%rd244];
	// inline asm
	mov.b32 	 %f957, %r286;
	mov.b32 	 %f958, %r287;
	mov.b32 	 %f959, %r288;
	add.s64 	%rd248, %rd242, 32;
	// inline asm
	cvta.to.global.u64 %rd247, %rd248;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r290,%r291,%r292,%r293}, [%rd247];
	// inline asm
	sub.f32 	%f249, %f696, %f697;
	mov.b32 	 %f954, %r290;
	mov.b32 	 %f955, %r291;
	mov.b32 	 %f956, %r292;
	setp.leu.f32	%p17, %f249, 0f00000000;
	@%p17 bra 	BB9_36;

	mul.lo.s64 	%rd260, %rd17, 48;
	add.s64 	%rd261, %rd215, %rd260;
	add.s64 	%rd252, %rd261, 80;
	// inline asm
	cvta.to.global.u64 %rd251, %rd252;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r297,%r298,%r299,%r300}, [%rd251];
	// inline asm
	mov.b32 	 %f698, %r297;
	mov.b32 	 %f699, %r298;
	mov.b32 	 %f700, %r299;
	add.s64 	%rd255, %rd261, 96;
	// inline asm
	cvta.to.global.u64 %rd254, %rd255;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r301,%r302,%r303,%r304}, [%rd254];
	// inline asm
	mov.b32 	 %f701, %r301;
	mov.b32 	 %f702, %r302;
	mov.b32 	 %f703, %r303;
	add.s64 	%rd258, %rd261, 112;
	// inline asm
	cvta.to.global.u64 %rd257, %rd258;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r305,%r306,%r307,%r308}, [%rd257];
	// inline asm
	mov.f32 	%f704, 0f3F800000;
	sub.f32 	%f705, %f704, %f249;
	mul.f32 	%f706, %f249, %f698;
	mul.f32 	%f707, %f249, %f699;
	mul.f32 	%f708, %f249, %f700;
	fma.rn.f32 	%f960, %f705, %f960, %f706;
	fma.rn.f32 	%f961, %f705, %f961, %f707;
	fma.rn.f32 	%f962, %f705, %f962, %f708;
	mul.f32 	%f709, %f249, %f701;
	mul.f32 	%f710, %f249, %f702;
	mul.f32 	%f711, %f249, %f703;
	fma.rn.f32 	%f957, %f705, %f957, %f709;
	fma.rn.f32 	%f958, %f705, %f958, %f710;
	fma.rn.f32 	%f959, %f705, %f959, %f711;
	mov.b32 	 %f712, %r305;
	mov.b32 	 %f713, %r306;
	mov.b32 	 %f714, %r307;
	mul.f32 	%f715, %f249, %f712;
	mul.f32 	%f716, %f249, %f713;
	mul.f32 	%f717, %f249, %f714;
	fma.rn.f32 	%f954, %f705, %f954, %f715;
	fma.rn.f32 	%f955, %f705, %f955, %f716;
	fma.rn.f32 	%f956, %f705, %f956, %f717;
	bra.uni 	BB9_36;

BB9_25:
	mov.f32 	%f963, 0f00000000;
	mov.f32 	%f965, 0f3F800000;
	setp.eq.s32	%p13, %r161, 4;
	@%p13 bra 	BB9_28;
	bra.uni 	BB9_26;

BB9_28:
	// inline asm
	call (%rd265), _optix_get_instance_inverse_transform_from_handle, (%rd141);
	// inline asm
	bra.uni 	BB9_29;

BB9_31:
	// inline asm
	call (%rd156), _optix_get_srt_motion_transform_from_handle, (%rd141);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd158, %rd156;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r175,%r176,%r177,%r178}, [%rd158];
	// inline asm
	mov.b32	{%rs5, %rs6}, %r177;
	add.s64 	%rd162, %rd156, 16;
	// inline asm
	cvta.to.global.u64 %rd161, %rd162;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r179,%r180,%r181,%r182}, [%rd161];
	// inline asm
	add.s64 	%rd165, %rd156, 32;
	// inline asm
	cvta.to.global.u64 %rd164, %rd165;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r183,%r184,%r185,%r186}, [%rd164];
	// inline asm
	add.s64 	%rd168, %rd156, 48;
	// inline asm
	cvta.to.global.u64 %rd167, %rd168;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r187,%r188,%r189,%r190}, [%rd167];
	// inline asm
	add.s64 	%rd171, %rd156, 64;
	// inline asm
	cvta.to.global.u64 %rd170, %rd171;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r191,%r192,%r193,%r194}, [%rd170];
	// inline asm
	add.s64 	%rd174, %rd156, 80;
	// inline asm
	cvta.to.global.u64 %rd173, %rd174;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r195,%r196,%r197,%r198}, [%rd173];
	// inline asm
	add.s64 	%rd177, %rd156, 96;
	// inline asm
	cvta.to.global.u64 %rd176, %rd177;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r199,%r200,%r201,%r202}, [%rd176];
	// inline asm
	add.s64 	%rd180, %rd156, 112;
	// inline asm
	cvta.to.global.u64 %rd179, %rd180;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r203,%r204,%r205,%r206}, [%rd179];
	// inline asm
	add.s64 	%rd183, %rd156, 128;
	// inline asm
	cvta.to.global.u64 %rd182, %rd183;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r207,%r208,%r209,%r210}, [%rd182];
	// inline asm
	add.s64 	%rd186, %rd156, 144;
	// inline asm
	cvta.to.global.u64 %rd185, %rd186;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r211,%r212,%r213,%r214}, [%rd185];
	// inline asm
	mov.b32 	 %f595, %r178;
	mov.b32 	 %f596, %r179;
	cvt.u32.u16	%r231, %rs5;
	add.s32 	%r232, %r231, -1;
	cvt.rn.f32.s32	%f597, %r232;
	sub.f32 	%f598, %f584, %f595;
	mul.f32 	%f599, %f598, %f597;
	sub.f32 	%f600, %f596, %f595;
	div.rn.f32 	%f601, %f599, %f600;
	min.f32 	%f602, %f597, %f601;
	mov.f32 	%f603, 0f00000000;
	max.f32 	%f604, %f603, %f602;
	cvt.rmi.f32.f32	%f605, %f604;
	cvt.rzi.s32.f32	%r233, %f605;
	cvt.s64.s32	%rd15, %r233;
	mul.wide.s32 	%rd200, %r233, 64;
	add.s64 	%rd189, %rd165, %rd200;
	// inline asm
	cvta.to.global.u64 %rd188, %rd189;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r215,%r216,%r217,%r218}, [%rd188];
	// inline asm
	mov.b32 	 %f944, %r215;
	mov.b32 	 %f945, %r216;
	mov.b32 	 %f946, %r217;
	add.s64 	%rd192, %rd189, 16;
	// inline asm
	cvta.to.global.u64 %rd191, %rd192;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r219,%r220,%r221,%r222}, [%rd191];
	// inline asm
	mov.b32 	 %f947, %r219;
	mov.b32 	 %f948, %r220;
	mov.b32 	 %f949, %r222;
	add.s64 	%rd195, %rd189, 32;
	// inline asm
	cvta.to.global.u64 %rd194, %rd195;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r223,%r224,%r225,%r226}, [%rd194];
	// inline asm
	sub.f32 	%f209, %f604, %f605;
	mov.b32 	 %f950, %r224;
	mov.b32 	 %f951, %r225;
	mov.b32 	 %f952, %r226;
	add.s64 	%rd198, %rd189, 48;
	// inline asm
	cvta.to.global.u64 %rd197, %rd198;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r227,%r228,%r229,%r230}, [%rd197];
	// inline asm
	mov.b32 	 %f953, %r227;
	setp.leu.f32	%p16, %f209, 0f00000000;
	@%p16 bra 	BB9_33;

	shl.b64 	%rd213, %rd15, 6;
	add.s64 	%rd214, %rd213, %rd156;
	add.s64 	%rd202, %rd214, 96;
	// inline asm
	cvta.to.global.u64 %rd201, %rd202;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r234,%r235,%r236,%r237}, [%rd201];
	// inline asm
	mov.b32 	 %f606, %r234;
	mov.b32 	 %f607, %r235;
	mov.b32 	 %f608, %r236;
	add.s64 	%rd205, %rd214, 112;
	// inline asm
	cvta.to.global.u64 %rd204, %rd205;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r238,%r239,%r240,%r241}, [%rd204];
	// inline asm
	mov.b32 	 %f609, %r238;
	mov.b32 	 %f610, %r239;
	mov.b32 	 %f611, %r241;
	add.s64 	%rd208, %rd214, 128;
	// inline asm
	cvta.to.global.u64 %rd207, %rd208;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r242,%r243,%r244,%r245}, [%rd207];
	// inline asm
	mov.b32 	 %f612, %r243;
	mov.b32 	 %f613, %r244;
	mov.b32 	 %f614, %r245;
	add.s64 	%rd211, %rd214, 144;
	// inline asm
	cvta.to.global.u64 %rd210, %rd211;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r246,%r247,%r248,%r249}, [%rd210];
	// inline asm
	mov.f32 	%f615, 0f3F800000;
	sub.f32 	%f616, %f615, %f209;
	mul.f32 	%f617, %f209, %f606;
	mul.f32 	%f618, %f209, %f607;
	mul.f32 	%f619, %f209, %f608;
	fma.rn.f32 	%f944, %f616, %f944, %f617;
	fma.rn.f32 	%f945, %f616, %f945, %f618;
	fma.rn.f32 	%f946, %f616, %f946, %f619;
	mul.f32 	%f620, %f209, %f609;
	mul.f32 	%f621, %f209, %f610;
	mul.f32 	%f622, %f209, %f611;
	fma.rn.f32 	%f947, %f616, %f947, %f620;
	fma.rn.f32 	%f948, %f616, %f948, %f621;
	fma.rn.f32 	%f949, %f616, %f949, %f622;
	mul.f32 	%f623, %f209, %f612;
	mul.f32 	%f624, %f209, %f613;
	mul.f32 	%f625, %f209, %f614;
	fma.rn.f32 	%f626, %f616, %f950, %f623;
	fma.rn.f32 	%f627, %f616, %f951, %f624;
	fma.rn.f32 	%f628, %f616, %f952, %f625;
	mov.b32 	 %f629, %r246;
	mul.f32 	%f630, %f209, %f629;
	fma.rn.f32 	%f631, %f616, %f953, %f630;
	mul.f32 	%f632, %f627, %f627;
	fma.rn.f32 	%f633, %f626, %f626, %f632;
	fma.rn.f32 	%f634, %f628, %f628, %f633;
	fma.rn.f32 	%f635, %f631, %f631, %f634;
	sqrt.rn.f32 	%f636, %f635;
	rcp.rn.f32 	%f637, %f636;
	mul.f32 	%f950, %f626, %f637;
	mul.f32 	%f951, %f627, %f637;
	mul.f32 	%f952, %f628, %f637;
	mul.f32 	%f953, %f631, %f637;

BB9_33:
	mul.f32 	%f638, %f951, %f951;
	fma.rn.f32 	%f639, %f950, %f950, %f638;
	fma.rn.f32 	%f640, %f952, %f952, %f639;
	fma.rn.f32 	%f641, %f953, %f953, %f640;
	rcp.rn.f32 	%f642, %f641;
	mul.f32 	%f643, %f950, %f642;
	mul.f32 	%f644, %f951, %f642;
	mul.f32 	%f645, %f952, %f642;
	mul.f32 	%f646, %f953, %f642;
	mul.f32 	%f647, %f950, %f643;
	mul.f32 	%f648, %f951, %f644;
	mul.f32 	%f649, %f952, %f645;
	mul.f32 	%f650, %f950, %f644;
	mul.f32 	%f651, %f952, %f646;
	mul.f32 	%f652, %f950, %f645;
	mul.f32 	%f653, %f951, %f646;
	mul.f32 	%f654, %f951, %f645;
	mul.f32 	%f655, %f950, %f646;
	sub.f32 	%f656, %f647, %f648;
	sub.f32 	%f657, %f656, %f649;
	fma.rn.f32 	%f658, %f953, %f646, %f657;
	sub.f32 	%f659, %f650, %f651;
	add.f32 	%f660, %f659, %f659;
	add.f32 	%f661, %f652, %f653;
	add.f32 	%f662, %f661, %f661;
	add.f32 	%f663, %f650, %f651;
	add.f32 	%f664, %f663, %f663;
	sub.f32 	%f665, %f648, %f647;
	sub.f32 	%f666, %f665, %f649;
	fma.rn.f32 	%f667, %f953, %f646, %f666;
	sub.f32 	%f668, %f654, %f655;
	add.f32 	%f669, %f668, %f668;
	sub.f32 	%f670, %f652, %f653;
	add.f32 	%f671, %f670, %f670;
	add.f32 	%f672, %f654, %f655;
	add.f32 	%f673, %f672, %f672;
	neg.f32 	%f674, %f647;
	sub.f32 	%f675, %f674, %f648;
	add.f32 	%f676, %f649, %f675;
	fma.rn.f32 	%f677, %f953, %f646, %f676;
	mul.f32 	%f678, %f946, %f658;
	fma.rn.f32 	%f679, %f948, %f660, %f678;
	fma.rn.f32 	%f962, %f949, %f662, %f679;
	mul.f32 	%f680, %f948, %f667;
	fma.rn.f32 	%f681, %f946, %f664, %f680;
	fma.rn.f32 	%f959, %f949, %f669, %f681;
	mul.f32 	%f682, %f948, %f673;
	fma.rn.f32 	%f683, %f946, %f671, %f682;
	fma.rn.f32 	%f956, %f949, %f677, %f683;
	mul.f32 	%f684, %f945, %f658;
	fma.rn.f32 	%f961, %f947, %f660, %f684;
	mul.f32 	%f685, %f947, %f667;
	fma.rn.f32 	%f958, %f945, %f664, %f685;
	mul.f32 	%f686, %f947, %f673;
	fma.rn.f32 	%f955, %f945, %f671, %f686;
	mul.f32 	%f960, %f944, %f658;
	mul.f32 	%f957, %f944, %f664;
	mul.f32 	%f954, %f944, %f671;

BB9_36:
	mul.f32 	%f718, %f955, %f959;
	mul.f32 	%f719, %f956, %f958;
	sub.f32 	%f720, %f719, %f718;
	mul.f32 	%f721, %f960, %f720;
	mul.f32 	%f722, %f954, %f959;
	mul.f32 	%f723, %f956, %f957;
	sub.f32 	%f724, %f723, %f722;
	mul.f32 	%f725, %f724, %f961;
	sub.f32 	%f726, %f721, %f725;
	mul.f32 	%f727, %f954, %f958;
	mul.f32 	%f728, %f955, %f957;
	sub.f32 	%f729, %f728, %f727;
	fma.rn.f32 	%f730, %f729, %f962, %f726;
	rcp.rn.f32 	%f731, %f730;
	mul.f32 	%f969, %f720, %f731;
	mul.f32 	%f732, %f956, %f961;
	mul.f32 	%f733, %f955, %f962;
	sub.f32 	%f734, %f733, %f732;
	mul.f32 	%f970, %f731, %f734;
	mul.f32 	%f735, %f958, %f962;
	mul.f32 	%f736, %f959, %f961;
	sub.f32 	%f737, %f736, %f735;
	mul.f32 	%f971, %f731, %f737;
	sub.f32 	%f738, %f722, %f723;
	mul.f32 	%f966, %f738, %f731;
	mul.f32 	%f739, %f954, %f962;
	mul.f32 	%f740, %f956, %f960;
	sub.f32 	%f741, %f740, %f739;
	mul.f32 	%f967, %f731, %f741;
	mul.f32 	%f742, %f959, %f960;
	mul.f32 	%f743, %f957, %f962;
	sub.f32 	%f744, %f743, %f742;
	mul.f32 	%f968, %f731, %f744;
	mul.f32 	%f963, %f729, %f731;
	mul.f32 	%f745, %f955, %f960;
	mul.f32 	%f746, %f954, %f961;
	sub.f32 	%f747, %f746, %f745;
	mul.f32 	%f964, %f747, %f731;
	mul.f32 	%f748, %f957, %f961;
	mul.f32 	%f749, %f958, %f960;
	sub.f32 	%f750, %f749, %f748;
	mul.f32 	%f965, %f750, %f731;
	bra.uni 	BB9_37;

BB9_26:
	setp.ne.s32	%p14, %r161, 1;
	mov.f32 	%f964, %f963;
	mov.f32 	%f966, %f963;
	mov.f32 	%f967, %f965;
	mov.f32 	%f968, %f963;
	mov.f32 	%f969, %f965;
	mov.f32 	%f970, %f963;
	mov.f32 	%f971, %f963;
	@%p14 bra 	BB9_37;

	// inline asm
	call (%rd143), _optix_get_static_transform_from_handle, (%rd141);
	// inline asm
	add.s64 	%rd265, %rd143, 64;

BB9_29:
	// inline asm
	cvta.to.global.u64 %rd147, %rd265;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r163,%r164,%r165,%r166}, [%rd147];
	// inline asm
	mov.b32 	 %f969, %r163;
	mov.b32 	 %f970, %r164;
	mov.b32 	 %f971, %r165;
	add.s64 	%rd151, %rd265, 16;
	// inline asm
	cvta.to.global.u64 %rd150, %rd151;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r167,%r168,%r169,%r170}, [%rd150];
	// inline asm
	mov.b32 	 %f966, %r167;
	mov.b32 	 %f967, %r168;
	mov.b32 	 %f968, %r169;
	add.s64 	%rd154, %rd265, 32;
	// inline asm
	cvta.to.global.u64 %rd153, %rd154;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r171,%r172,%r173,%r174}, [%rd153];
	// inline asm
	mov.b32 	 %f963, %r171;
	mov.b32 	 %f964, %r172;
	mov.b32 	 %f965, %r173;

BB9_37:
	setp.eq.s32	%p18, %r321, 0;
	@%p18 bra 	BB9_38;
	bra.uni 	BB9_39;

BB9_38:
	mov.f32 	%f943, %f963;
	mov.f32 	%f942, %f964;
	mov.f32 	%f941, %f965;
	mov.f32 	%f940, %f966;
	mov.f32 	%f939, %f967;
	mov.f32 	%f938, %f968;
	mov.f32 	%f937, %f969;
	mov.f32 	%f936, %f970;
	mov.f32 	%f935, %f971;
	bra.uni 	BB9_40;

BB9_39:
	mul.f32 	%f751, %f940, %f970;
	fma.rn.f32 	%f752, %f937, %f969, %f751;
	fma.rn.f32 	%f289, %f943, %f971, %f752;
	mul.f32 	%f753, %f939, %f970;
	fma.rn.f32 	%f754, %f936, %f969, %f753;
	fma.rn.f32 	%f290, %f942, %f971, %f754;
	mul.f32 	%f755, %f938, %f970;
	fma.rn.f32 	%f756, %f935, %f969, %f755;
	fma.rn.f32 	%f291, %f941, %f971, %f756;
	mul.f32 	%f757, %f940, %f967;
	fma.rn.f32 	%f758, %f937, %f966, %f757;
	fma.rn.f32 	%f292, %f943, %f968, %f758;
	mul.f32 	%f759, %f939, %f967;
	fma.rn.f32 	%f760, %f936, %f966, %f759;
	fma.rn.f32 	%f293, %f942, %f968, %f760;
	mul.f32 	%f761, %f938, %f967;
	fma.rn.f32 	%f762, %f935, %f966, %f761;
	fma.rn.f32 	%f294, %f941, %f968, %f762;
	mul.f32 	%f763, %f940, %f964;
	fma.rn.f32 	%f764, %f937, %f963, %f763;
	fma.rn.f32 	%f943, %f943, %f965, %f764;
	mul.f32 	%f765, %f939, %f964;
	fma.rn.f32 	%f766, %f936, %f963, %f765;
	fma.rn.f32 	%f942, %f942, %f965, %f766;
	mul.f32 	%f767, %f938, %f964;
	fma.rn.f32 	%f768, %f935, %f963, %f767;
	fma.rn.f32 	%f941, %f941, %f965, %f768;
	mov.f32 	%f940, %f292;
	mov.f32 	%f939, %f293;
	mov.f32 	%f938, %f294;
	mov.f32 	%f937, %f289;
	mov.f32 	%f936, %f290;
	mov.f32 	%f935, %f291;

BB9_40:
	add.s32 	%r321, %r321, 1;
	setp.lt.u32	%p19, %r321, %r8;
	@%p19 bra 	BB9_24;

	mul.f32 	%f769, %f582, %f936;
	fma.rn.f32 	%f770, %f581, %f937, %f769;
	fma.rn.f32 	%f981, %f983, %f935, %f770;
	mul.f32 	%f771, %f582, %f939;
	fma.rn.f32 	%f772, %f581, %f940, %f771;
	fma.rn.f32 	%f982, %f983, %f938, %f772;
	mul.f32 	%f773, %f582, %f942;
	fma.rn.f32 	%f774, %f581, %f943, %f773;
	fma.rn.f32 	%f983, %f983, %f941, %f774;
	bra.uni 	BB9_42;

BB9_22:
	mov.f32 	%f981, %f581;
	mov.f32 	%f982, %f582;

BB9_42:
	// inline asm
	call (%f775), _optix_get_ray_tmin, ();
	// inline asm
	fma.rn.f32 	%f313, %f981, %f775, %f934;
	fma.rn.f32 	%f314, %f982, %f775, %f933;
	fma.rn.f32 	%f315, %f983, %f775, %f932;
	add.s64 	%rd18, %rd1, 32;
	ld.v4.f32 	{%f779, %f780, %f781, %f782}, [%rd1+32];
	ld.f32 	%f783, [%rd1+52];
	add.f32 	%f784, %f783, 0f3F800000;
	mul.f32 	%f785, %f983, %f983;
	mul.f32 	%f786, %f784, %f785;
	fma.rn.f32 	%f787, %f981, %f981, %f786;
	fma.rn.f32 	%f319, %f982, %f982, %f787;
	add.f32 	%f788, %f784, %f784;
	mul.f32 	%f789, %f788, %f315;
	mul.f32 	%f790, %f983, %f789;
	mul.f32 	%f791, %f781, %f788;
	mul.f32 	%f792, %f983, %f791;
	sub.f32 	%f793, %f790, %f792;
	add.f32 	%f794, %f313, %f313;
	fma.rn.f32 	%f795, %f981, %f794, %f793;
	add.f32 	%f796, %f779, %f779;
	mul.f32 	%f797, %f796, %f981;
	sub.f32 	%f798, %f795, %f797;
	add.f32 	%f799, %f314, %f314;
	fma.rn.f32 	%f800, %f982, %f799, %f798;
	add.f32 	%f801, %f780, %f780;
	mul.f32 	%f802, %f801, %f982;
	sub.f32 	%f803, %f800, %f802;
	add.f32 	%f804, %f983, %f983;
	ld.f32 	%f805, [%rd1+56];
	div.rn.f32 	%f806, %f804, %f805;
	sub.f32 	%f320, %f803, %f806;
	mul.f32 	%f807, %f315, %f315;
	mul.f32 	%f808, %f784, %f807;
	mul.f32 	%f809, %f791, %f315;
	sub.f32 	%f810, %f808, %f809;
	mul.f32 	%f811, %f781, %f781;
	fma.rn.f32 	%f812, %f784, %f811, %f810;
	fma.rn.f32 	%f813, %f313, %f313, %f812;
	mul.f32 	%f814, %f796, %f313;
	sub.f32 	%f815, %f813, %f814;
	neg.f32 	%f816, %f779;
	fma.rn.f32 	%f817, %f816, %f816, %f815;
	fma.rn.f32 	%f818, %f314, %f314, %f817;
	mul.f32 	%f819, %f801, %f314;
	sub.f32 	%f820, %f818, %f819;
	neg.f32 	%f821, %f780;
	fma.rn.f32 	%f822, %f821, %f821, %f820;
	add.f32 	%f823, %f315, %f315;
	div.rn.f32 	%f824, %f823, %f805;
	sub.f32 	%f825, %f822, %f824;
	add.f32 	%f826, %f781, %f781;
	div.rn.f32 	%f827, %f826, %f805;
	add.f32 	%f321, %f825, %f827;
	setp.eq.f32	%p21, %f319, 0f00000000;
	setp.eq.f32	%p22, %f320, 0f00000000;
	and.pred  	%p23, %p21, %p22;
	mov.pred 	%p37, -1;
	@%p23 bra 	BB9_46;

	neg.f32 	%f828, %f321;
	div.rn.f32 	%f985, %f828, %f320;
	mul.f32 	%f829, %f319, 0fC0800000;
	mul.f32 	%f830, %f829, %f321;
	fma.rn.f32 	%f323, %f320, %f320, %f830;
	setp.lt.f32	%p25, %f323, 0f00000000;
	setp.neu.f32	%p26, %f319, 0f00000000;
	and.pred  	%p27, %p25, %p26;
	@%p27 bra 	BB9_44;
	bra.uni 	BB9_45;

BB9_44:
	mov.f32 	%f984, %f985;
	bra.uni 	BB9_46;

BB9_45:
	mov.b32 	 %r309, %f320;
	and.b32  	%r310, %r309, -2147483648;
	sqrt.rn.f32 	%f831, %f323;
	mov.b32 	 %r311, %f831;
	and.b32  	%r312, %r311, 2147483647;
	or.b32  	%r313, %r312, %r310;
	mov.b32 	 %f832, %r313;
	add.f32 	%f833, %f320, %f832;
	mul.f32 	%f834, %f833, 0fBF000000;
	div.rn.f32 	%f835, %f834, %f319;
	div.rn.f32 	%f836, %f321, %f834;
	min.f32 	%f837, %f835, %f836;
	max.f32 	%f838, %f835, %f836;
	selp.f32	%f984, %f985, %f837, %p21;
	selp.f32	%f985, %f985, %f838, %p21;
	mov.pred 	%p37, 0;

BB9_46:
	@%p37 bra 	BB9_51;

	fma.rn.f32 	%f839, %f984, %f981, %f313;
	sub.f32 	%f840, %f839, %f779;
	fma.rn.f32 	%f841, %f984, %f982, %f314;
	sub.f32 	%f842, %f841, %f780;
	fma.rn.f32 	%f843, %f984, %f983, %f315;
	sub.f32 	%f844, %f843, %f781;
	mul.f32 	%f845, %f842, %f842;
	fma.rn.f32 	%f846, %f840, %f840, %f845;
	fma.rn.f32 	%f847, %f844, %f844, %f846;
	sqrt.rn.f32 	%f848, %f847;
	ld.v2.f32 	{%f849, %f850}, [%rd18+32];
	mul.f32 	%f852, %f849, %f849;
	fma.rn.f32 	%f854, %f850, %f850, %f852;
	sqrt.rn.f32 	%f328, %f854;
	setp.le.f32	%p30, %f848, %f328;
	fma.rn.f32 	%f855, %f985, %f981, %f313;
	sub.f32 	%f856, %f855, %f779;
	fma.rn.f32 	%f857, %f985, %f982, %f314;
	sub.f32 	%f858, %f857, %f780;
	fma.rn.f32 	%f859, %f985, %f983, %f315;
	sub.f32 	%f860, %f859, %f781;
	mul.f32 	%f861, %f858, %f858;
	fma.rn.f32 	%f862, %f856, %f856, %f861;
	fma.rn.f32 	%f329, %f860, %f860, %f862;
	setp.gt.f32	%p31, %f984, 0f00000000;
	and.pred  	%p32, %p31, %p30;
	@%p32 bra 	BB9_50;
	bra.uni 	BB9_48;

BB9_50:
	mov.u32 	%r317, 254;
	// inline asm
	call (%r316), _optix_report_intersection_0, (%f984, %r317);
	// inline asm
	bra.uni 	BB9_51;

BB9_48:
	sqrt.rn.f32 	%f863, %f329;
	setp.gtu.f32	%p33, %f863, %f328;
	setp.leu.f32	%p34, %f985, 0f00000000;
	or.pred  	%p35, %p34, %p33;
	@%p35 bra 	BB9_51;

	mov.u32 	%r315, 254;
	// inline asm
	call (%r314), _optix_report_intersection_0, (%f985, %r315);
	// inline asm

BB9_51:
	ret;
}

	// .globl	__closesthit__asphsurf
.visible .entry __closesthit__asphsurf(

)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<2>;


	// inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%f1), _optix_get_ray_tmax, ();
	// inline asm
	ld.u32 	%r10, [%rd1];
	mov.b32 	 %r2, %f1;
	mov.u32 	%r8, 0;
	// inline asm
	call _optix_set_payload, (%r8, %r2);
	// inline asm
	mov.u32 	%r3, 1;
	// inline asm
	call _optix_set_payload, (%r3, %r13);
	// inline asm
	mov.u32 	%r5, 2;
	// inline asm
	call _optix_set_payload, (%r5, %r14);
	// inline asm
	mov.u32 	%r7, 3;
	// inline asm
	call _optix_set_payload, (%r7, %r8);
	// inline asm
	mov.u32 	%r9, 4;
	// inline asm
	call _optix_set_payload, (%r9, %r10);
	// inline asm
	mov.u32 	%r12, 5;
	// inline asm
	call (%r11), _optix_get_payload, (%r12);
	// inline asm
	setp.eq.s32	%p1, %r11, 0;
	@%p1 bra 	BB10_2;

	// inline asm
	call (%r15), _optix_read_instance_id, ();
	// inline asm
	// inline asm
	call _optix_set_payload, (%r12, %r15);
	// inline asm

BB10_2:
	ret;
}

	// .globl	__miss__ms
.visible .entry __miss__ms(

)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<8>;


	// inline asm
	call (%r1), _optix_get_ray_flags, ();
	// inline asm
	setp.eq.s32	%p1, %r1, 12;
	@%p1 bra 	BB11_2;
	bra.uni 	BB11_1;

BB11_2:
	mov.u32 	%r7, 0;
	// inline asm
	call _optix_set_payload, (%r7, %r7);
	// inline asm
	bra.uni 	BB11_3;

BB11_1:
	mov.u32 	%r5, 0;
	mov.u32 	%r3, 2139095040;
	// inline asm
	call _optix_set_payload, (%r5, %r3);
	// inline asm
	mov.u32 	%r4, 4;
	// inline asm
	call _optix_set_payload, (%r4, %r5);
	// inline asm

BB11_3:
	ret;
}


